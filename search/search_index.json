{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u30bc\u30ed\u304b\u3089\u5b66\u3076 C++","text":"<p>\u3053\u306e\u30b5\u30a4\u30c8\u306f C++ \u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u305f\u5b66\u7fd2\u30b5\u30a4\u30c8\u3067\u3059\u3002 \u672c\u66f8\u3092\u901a\u3058\u3066 C++ \u306e\u958b\u767a\u74b0\u5883\u3084\u69cb\u6587\u30fb\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u306a\u3069\u304c \u4e00\u901a\u308a\u5b66\u3079\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"#_1","title":"\u5bfe\u8c61","text":"<ul> <li>C++ \u3092\u521d\u3081\u3066\u5b66\u3076\u4eba</li> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3092 1 \u3064\u4ee5\u4e0a\u7d4c\u9a13\u3057\u305f\u3053\u3068\u306e\u3042\u308b\u4eba</li> </ul> <p>\u95a2\u6570\u3084\u30af\u30e9\u30b9\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306b\u5bfe\u3059\u308b\u77e5\u8b58\u3092\u3042\u308b\u7a0b\u5ea6\u524d\u63d0\u306b\u3057\u307e\u3059\u3002</p>"},{"location":"#c_1","title":"C++ \u306e\u7279\u5fb4","text":"<p>C++ \u306f \u30d3\u30e3\u30fc\u30cd\u30fb\u30b9\u30c8\u30ed\u30f4\u30b9\u30c8\u30eb\u30c3\u30d7 \u306b\u3088\u308a\u958b\u767a\u3055\u308c\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002 C++ \u306b\u306f\u4e3b\u306b\u6b21\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9</li> <li>\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5c11\u306a\u3044</li> <li>\u67d4\u8edf\u6027\u304c\u3042\u308b</li> </ul> <p>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u51fa\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u4f4e\u30ec\u30d9\u30eb\u306a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u5206\u3001 \u4e0d\u5177\u5408\u304c\u6df7\u5165\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u30c7\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u53e4\u304f\u304b\u3089\u3042\u308b\u8a00\u8a9e\u306e\u305f\u3081\u3001\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306f\u8c4a\u5bcc\u306b\u63c3\u3063\u3066\u3044\u307e\u3059\u3002 \u4ed6\u306e\u8a00\u8a9e\u306b\u6bd4\u3079\u308b\u3068\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3084\u3084\u8ca7\u5f31\u3067\u3059\u304c\u3001 \u3053\u308c\u306f\u67d4\u8edf\u6027\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u7d50\u679c\u3067\u3059\u3002</p>"},{"location":"#c_2","title":"C++ \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3064\u3044\u3066","text":"<ul> <li>C++98 (1998\u5e74\u5236\u5b9a)</li> <li>C++03 (2003\u5e74\u5236\u5b9a)</li> <li>C++11 (2011\u5e74\u5236\u5b9a)</li> <li>C++14 (2014\u5e74\u5236\u5b9a)</li> <li>C++17 (2017\u5e74\u5236\u5b9a)</li> <li>C++20 (2020\u5e74\u5236\u5b9a)</li> </ul> <p>\u3053\u306e\u30b5\u30a4\u30c8\u3067\u306f <code>C++11</code> \u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\u3002</p>"},{"location":"appendix-cast-details/","title":"\u30ad\u30e3\u30b9\u30c8\u306e\u8a73\u3057\u3044\u8aac\u660e","text":"<p>C++ \u306e4\u7a2e\u985e\u306e\u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002</p> \u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50 CV \u4fee\u98fe\u5b50\u306e\u9664\u53bb CV \u4fee\u98fe\u5b50\u4ee5\u5916\u306e\u578b\u60c5\u5831\u306e\u5909\u66f4 \u30d3\u30c3\u30c8\u8868\u73fe\u306e\u5909\u63db static_cast dynamic_cast const_cast reinterpret_cast <p>CV \u4fee\u98fe\u5b50\u306e\u8ffd\u52a0\u306f\u3069\u306e\u30ad\u30e3\u30b9\u30c8\u3067\u3082\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"appendix-cast-details/#cv","title":"CV \u4fee\u98fe\u5b50","text":"<p><code>const</code> \u4fee\u98fe\u5b50\u3068 <code>volatile</code> \u4fee\u98fe\u5b50 \u3092\u307e\u3068\u3081\u3066 CV \u4fee\u98fe\u5b50\u3068\u547c\u3073\u307e\u3059\u3002</p> <p><code>volatile</code> \u4fee\u98fe\u5b50\u306f cv (const \u304a\u3088\u3073 volatile) \u578b\u4fee\u98fe\u5b50 - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"appendix-cast-details/#static_cast-dynamic_cast","title":"static_cast \u3068 dynamic_cast","text":"<p><code>static_cast</code> \u3068 <code>dynamic_cast</code> \u306f\u5024\u306e\u5909\u63db\u65b9\u6cd5\u3092\u6c7a\u5b9a\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u9055\u3044\u307e\u3059\u3002</p> <ul> <li><code>static_cast</code> \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6c7a\u5b9a</li> <li><code>dynamic_cast</code> \u306f\u5b9f\u884c\u6642\u306b\u6c7a\u5b9a</li> </ul> <p>\u3053\u306e\u9055\u3044\u306b\u3088\u3063\u3066\u5b89\u5168\u306b\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u304c\u3067\u304d\u308b\u304b\u306a\u3069\u306e\u5dee\u304c\u3042\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306f \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"appendix-cast-details/#_2","title":"\u30d3\u30c3\u30c8\u8868\u73fe\u306e\u5909\u63db","text":"<p><code>static_cast</code> \u3084 <code>dynamic_cast</code> \u3067\u306f\u578b\u306e\u5909\u63db\u3068\u540c\u6642\u306b\u30d3\u30c3\u30c8\u8868\u73fe\u3092\u5909\u63db\u3057\u307e\u3059\u304c\u3001 <code>reinterpret_cast</code> \u3067\u306f\u30d3\u30c3\u30c8\u8868\u73fe\u3092\u5909\u66f4\u305b\u305a\u306b\u578b\u3060\u3051\u3092\u5909\u66f4\u3057\u307e\u3059\u3002</p> <p>\u6574\u6570\u578b\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306a\u3069\u30d3\u30c3\u30c8\u8868\u73fe\u304c\u7570\u306a\u308b\u578b\u306e\u5909\u63db\u3092\u884c\u3046\u3068\u3001 \u5024\u306e\u5909\u63db\u306e\u6709\u7121\u306b\u3088\u3063\u3066\u6319\u52d5\u306e\u5dee\u7570\u304c\u751f\u3058\u307e\u3059\u3002</p> <pre><code>double x = 2;\n\nint64_t s = static_cast&lt;const int64_t&amp;&gt;(x);\nint64_t r = reinterpret_cast&lt;const int64_t&amp;&gt;(x);\n\nstd::cout &lt;&lt; s &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; r &lt;&lt; std::endl;  // 4611686018427387904 (IEEE 754 \u306e\u5834\u5408)\n</code></pre> <p>\u4e00\u822c\u306b\u6d3e\u751f\u30af\u30e9\u30b9\u304b\u3089\u57fa\u5e95\u30af\u30e9\u30b9\u3078\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u5834\u5408\u306b\u3082\u30d3\u30c3\u30c8\u8868\u73fe\u306e\u5909\u63db\u306f\u5fc5\u8981\u3067\u3059\u3002 \u305f\u3068\u3048\u3070 \u591a\u91cd\u7d99\u627f \u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u3001 \u30aa\u30d5\u30bb\u30c3\u30c8\u304c 0 \u3067\u306f\u306a\u3044\u57fa\u5e95\u30af\u30e9\u30b9\u3078\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3068\u6b63\u3057\u3044\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nclass Base1 {\npublic:\nvirtual ~Base1() = default;\nint x = 2;\n};\n\nclass Base2 {\npublic:\nvirtual ~Base2() = default;\nint y = 3;\n};\n\nclass Sub : public Base1, public Base2 {\npublic:\n~Sub() override = default;\n};\n\nint main() {\nSub sub;\n\nBase1* s1 = static_cast&lt;Base1*&gt;(&amp;sub);\nBase2* s2 = static_cast&lt;Base2*&gt;(&amp;sub);\nstd::cout &lt;&lt; s1-&gt;x &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; s2-&gt;y &lt;&lt; std::endl;  // 3\n\nBase1* r1 = reinterpret_cast&lt;Base1*&gt;(&amp;sub);\nBase2* r2 = reinterpret_cast&lt;Base2*&gt;(&amp;sub);\nstd::cout &lt;&lt; r1-&gt;x &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; r2-&gt;y &lt;&lt; std::endl;  // 2\nreturn 0;\n}\n</code></pre>"},{"location":"appendix-cast-details/#c","title":"C++ \u306e\u30ad\u30e3\u30b9\u30c8\u3067\u306f\u3067\u304d\u306a\u3044\u3053\u3068","text":"<p>C++ \u306e\u30ad\u30e3\u30b9\u30c8\u3067\u306f\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u3092\u7121\u8996\u3057\u305f\u5909\u63db\u306a\u3069\u306f\u884c\u3048\u307e\u305b\u3093\u304c\u3001 C \u8a00\u8a9e\u5f62\u5f0f\u306e\u30ad\u30e3\u30b9\u30c8\u306a\u3089\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u3092\u7121\u8996\u3057\u305f\u5909\u63db\u304c\u5fc5\u8981\u3068\u306a\u308b\u306e\u306f\u30af\u30e9\u30b9\u8a2d\u8a08\u306b\u554f\u984c\u304c\u3042\u308b\u5834\u5408\u306a\u306e\u3067\u3001 C \u8a00\u8a9e\u5f62\u5f0f\u306e\u30ad\u30e3\u30b9\u30c8\u3092\u7528\u3044\u308b\u306e\u3067\u306f\u306a\u304f\u3001 \u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u3092\u4fee\u6b63\u3057\u3066 C++ \u306e\u30ad\u30e3\u30b9\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002</p> <p>\u8a73\u7d30\u306f \u660e\u793a\u7684\u306a\u578b\u5909\u63db - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"appendix-downcasts/","title":"\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8","text":"<p>\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u53c2\u7167\u3084\u30dd\u30a4\u30f3\u30bf\u304b\u3089\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u53c2\u7167\u3084\u30dd\u30a4\u30f3\u30bf\u3078\u306e\u578b\u5909\u63db\u3092\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3068\u3044\u3044\u307e\u3059\u3002 C++ \u3067\u306f\u3001\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u3059\u308b\u969b\u306b <code>dynamic_cast</code> \u3084 <code>static_cast</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> <p>\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u3057\u305f\u30af\u30e9\u30b9\u3092\u6271\u3046\u5834\u5408\u3001 \u30ad\u30e3\u30b9\u30c8\u5931\u6557\u3092\u8003\u616e\u3057\u305f\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u3063\u305f\u308a\u3001 \u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u9055\u53cd\u3092\u5f15\u304d\u8d77\u3053\u3059\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u305f\u3081\u3001\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u884c\u308f\u306a\u3044\u3067\u6e08\u3080\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p>"},{"location":"appendix-downcasts/#dynamic_cast","title":"dynamic_cast \u306b\u3088\u308b\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8","text":"<p><code>dynamic_cast</code> \u304c\u4f7f\u3048\u308b\u306e\u306f\u4eee\u60f3\u95a2\u6570\u3092\u6301\u3063\u305f\u30af\u30e9\u30b9\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002</p> <pre><code>class Base {\npublic:\nvirtual ~Base(){}\n};\nclass Sub1 : public Base {};\n\nSub1* sub1 = dynamic_cast&lt;Sub1*&gt;(new Base());  // \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\n</code></pre> <p><code>dynamic_cast</code> \u306f\u4ed6\u306e\u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50\u3068\u7570\u306a\u308a\u3001\u5b9f\u884c\u6642\u306b\u30ad\u30e3\u30b9\u30c8\u306e\u6210\u5426\u3092\u5224\u65ad\u3057\u307e\u3059\u3002 <code>dynamic_cast</code> \u306f \u5b9f\u884c\u6642\u578b\u60c5\u5831 (RTTI) \u3092\u78ba\u8a8d\u3057\u305f\u4e0a\u3067\u3001\u7d99\u627f\u95a2\u4fc2\u304c\u4e0d\u6b63\u3067\u3042\u3063\u305f\u5834\u5408\u3001\u30ad\u30e3\u30b9\u30c8\u306b\u5931\u6557\u3057\u307e\u3059\u3002</p> <p>\u300c\u30dd\u30a4\u30f3\u30bf\u3067\u306e\u30ad\u30e3\u30b9\u30c8\u300d\u3068\u300c\u53c2\u7167\u3067\u306e\u30ad\u30e3\u30b9\u30c8\u300d\u3067\u306f\u3001\u5931\u6557\u6642\u306e\u6319\u52d5\u304c\u7570\u306a\u308a\u307e\u3059\u3002</p> <p>\u30dd\u30a4\u30f3\u30bf\u3067\u306e\u30ad\u30e3\u30b9\u30c8\u3067\u306f\u3001\u5931\u6557\u6642\u306b <code>nullptr</code> \u3092\u8fd4\u5374\u3057\u307e\u3059\u3002</p> <pre><code>class Base {\npublic:\nvirtual ~Base(){}\n};\nclass Sub1 : public Base {};\nclass Sub2 : public Base {};\n\nint main() {\nBase* base = new Sub1;\nSub2* sub2 = dynamic_cast&lt;Sub2*&gt;(base);  // \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\nif (sub2 == nullptr) {\nstd::cout &lt;&lt; \"\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u5931\u6557\" &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>\u53c2\u7167\u3067\u306e\u30ad\u30e3\u30b9\u30c8\u3067\u306f\u3001\u5931\u6557\u6642\u306b <code>std::bad_cast</code> \u4f8b\u5916\u3092\u9001\u51fa\u3057\u307e\u3059\u3002</p> <pre><code>class Base {\npublic:\nvirtual ~Base(){}\n};\nclass Sub1 : public Base {};\nclass Sub2 : public Base {};\n\nint main() {\ntry {\nBase* base = new Sub1();\nSub2&amp; sub2 = dynamic_cast&lt;Sub2&amp;&gt;(*base);  // \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\n} catch (const std::bad_cast&amp;) {\nstd::cout &lt;&lt; \"\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u5931\u6557\" &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"appendix-downcasts/#static_cast","title":"static_cast \u306b\u3088\u308b\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8","text":"<p>\u30ad\u30e3\u30b9\u30c8\u5143\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u6b63\u3057\u304f\u30ad\u30e3\u30b9\u30c8\u5f8c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u81ea\u660e\u3067\u3042\u308c\u3070\u3001 <code>static_cast</code> \u3092\u5229\u7528\u3057\u3066\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>class Base {\npublic:\nvirtual ~Base(){}\n};\nclass Sub1 : public Base {\npublic:\nint x_;\n};\nclass Sub2 : public Base {}\n\nBase* base = new Sub1();  // Sub1 \u304b\u3089\u306e\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\nSub1* sub1 = static_cast&lt;Sub1*&gt;(base);  // Sub1 \u3078\u306e\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\n// base \u306e\u5b9f\u4f53\u306f Sub1 \u306a\u306e\u3067\u554f\u984c\u306a\u3057\n</code></pre> <p><code>static_cast</code> \u306f <code>dynamic_cast</code> \u3068\u306f\u9055\u3044\u3001 \u5b9f\u884c\u6642\u306e\u578b\u306e\u60c5\u5831\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001 \u6b21\u306e\u3088\u3046\u306a\u5371\u967a\u306a\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3082\u51fa\u6765\u3066\u3057\u307e\u3044\u307e\u3059\u3002 <code>static_cast</code> \u306e\u5834\u5408\u3001\u30ad\u30e3\u30b9\u30c8\u304c\u6210\u529f\u3057\u3066\u3082\u52d5\u4f5c\u306f\u4fdd\u8a3c\u3055\u308c\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code>class Base {\npublic:\nvirtual ~Base(){}\n};\nclass Sub1 : public Base {\npublic:\nint x_;\n};\nclass Sub2 : public Base {}\n\nBase* base = new Sub2();  // Sub2 \u304b\u3089\u306e\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\nSub1* sub1 = static_cast&lt;Sub1*&gt;(base);  // Sub1 \u3078\u306e\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\n\nsub1-&gt;x_ = 100;  // sub1 \u306f Sub2 \u306e\u30e1\u30e2\u30ea\u9818\u57df\u3092\u6307\u3057\u305f\u30dd\u30a4\u30f3\u30bf\n// Sub2 \u306b\u306f\u5b58\u5728\u3057\u306a\u3044\u9818\u57df x_ \u3092\u53c2\u7167\u3057\u3088\u3046\u3068\u3057\u3066\u4e0d\u6b63\u306a\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306b\u306a\u308b\n</code></pre>"},{"location":"appendix-malloc-and-free/","title":"malloc/free","text":"<p>C\u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u95a2\u6570 <code>malloc/free</code> \u3092\u5229\u7528\u3057\u3066\u3001\u30d2\u30fc\u30d7\u306b\u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd/\u89e3\u653e\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002</p>"},{"location":"appendix-malloc-and-free/#sizeof","title":"sizeof","text":"<p><code>sizeof</code> \u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3084\u578b\u306e\u30d0\u30a4\u30c8\u5358\u4f4d\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u64cd\u4f5c\u3059\u308b\u30e1\u30e2\u30ea\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002</p> <p>\u74b0\u5883\u4f9d\u5b58</p> <p>\u51fa\u529b\u3055\u308c\u308b\u30b5\u30a4\u30ba\u306f\u5b9f\u884c\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\ndouble x = 3.14;\nstd::cout &lt;&lt; sizeof(3) &lt;&lt; std::endl;    // 4\nstd::cout &lt;&lt; sizeof(int) &lt;&lt; std::endl;  // 4\nstd::cout &lt;&lt; sizeof(x) &lt;&lt; std::endl;    // 8\nstd::cout &lt;&lt; sizeof(&amp;x) &lt;&lt; std::endl;   // 8\n</code></pre>"},{"location":"appendix-malloc-and-free/#malloc","title":"malloc","text":"<p>\u30d2\u30fc\u30d7\u306b\u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd\u3059\u308b\u5834\u5408\u306f <code>malloc</code> \u3092\u5229\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;cstdlib&gt;\n\nint* p1 = (int*)malloc(sizeof(int));      // (\u578b\u540d*)malloc(\u78ba\u4fdd\u3059\u308b\u9818\u57df\u306e\u30b5\u30a4\u30ba)\nint* p2 = (int*)malloc(sizeof(int) * 5);  // int[5] \u306e\u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b\u5834\u5408\n</code></pre>"},{"location":"appendix-malloc-and-free/#free","title":"free","text":"<p>\u30d2\u30fc\u30d7\u306b\u52d5\u7684\u306b\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u3092\u89e3\u653e\u3059\u308b\u5834\u5408\u306f <code>free</code> \u3092\u5229\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;cstdlib&gt;\n\nint* p = (int*)malloc(sizeof(int) * 5);\n\nfree(p);  // \u30e1\u30e2\u30ea\u306e\u89e3\u653e\n</code></pre> <p><code>malloc</code> \u3092\u5229\u7528\u3057\u3066\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u306e\u89e3\u653e\u3092\u5fd8\u308c\u308b\u3068\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306b\u306a\u308a\u307e\u3059\u3002 <code>malloc</code> \u3068 <code>free</code> \u306f\u5fc5\u305a\u30bb\u30c3\u30c8\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"appendix-malloc-and-free/#newdelete","title":"new/delete\u3068\u306e\u9055\u3044","text":"<p><code>new/delete</code> \u3068\u9055\u3044\u3001 <code>malloc/free</code> \u3067\u751f\u6210\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fb\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u547c\u3073\u51fa\u3057\u304c\u884c\u308f\u308c\u307e\u305b\u3093\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4e88\u671f\u305b\u306c\u52d5\u4f5c\u3092\u3059\u308b\u539f\u56e0\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3001\u57fa\u672c\u7684\u306b <code>new/delete</code> \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002</p> \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9 <pre><code>#include &lt;cstdlib&gt;\n\nclass MyClass {\npublic:\nMyClass() {\nstd::cout &lt;&lt; \"MyClass' constructor is called.\" &lt;&lt; std::endl;\n}\n~MyClass() {\nstd::cout &lt;&lt; \"MyClass' destructor is called.\" &lt;&lt; std::endl;\n}\n};\n\nint main() {\nstd::cout &lt;&lt; \"---new/delete---\" &lt;&lt; std::endl;\n\nMyClass* mc1 = new MyClass();\ndelete mc1;\n\nstd::cout &lt;&lt; \"---malloc/free---\" &lt;&lt; std::endl;\n\nMyClass* mc2 = (MyClass*)malloc(sizeof(MyClass));\nfree(mc2);\n\nreturn 0;\n}\n</code></pre> \u5b9f\u884c\u7d50\u679c <pre><code>---new/delete---\nMyClass' constructor is called.\nMyClass' destructor is called.\n---malloc/free---\n</code></pre>"},{"location":"appendix-preprocessor-directives/","title":"\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u53f8\u4ee4","text":"<p>\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u884c\u3046\u524d\u306b\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u63db\u306a\u3069\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002</p>"},{"location":"appendix-preprocessor-directives/#_2","title":"\u30a4\u30f3\u30af\u30eb\u30fc\u30c9","text":"<p><code>#include</code> \u3067\u6307\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u305d\u306e\u5834\u306b\u5c55\u958b\u3057\u307e\u3059\u3002 \u5358\u7d14\u306a\u30d5\u30a1\u30a4\u30eb\u5c55\u958b\u3067\u3042\u308b\u305f\u3081\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u306a\u3069\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002</p> <p>\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u306b\u306f <code>\"...\"</code> \u3068 <code>&lt;...&gt;</code> \u306e2\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002</p> <p><code>&lt;...&gt;</code> \u306f\u6a19\u6e96\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\u3057\u307e\u3059\u3002 \u6a19\u6e96\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u4e00\u822c\u306b\u6b21\u306e\u3082\u306e\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002</p> <ul> <li><code>C</code> \u304a\u3088\u3073 <code>C++</code> \u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea</li> <li>\u51e6\u7406\u7cfb\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea (Windows \u306b\u304a\u3051\u308b <code>windows.h</code> \u306a\u3069)</li> <li>\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea (\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069)</li> </ul> <p><code>\"...\"</code> \u306f\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\u3057\u307e\u3059\u3002 \u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f <code>&lt;...&gt;</code> \u3068\u540c\u69d8\u306b\u6a19\u6e96\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\u3057\u307e\u3059\u3002</p>"},{"location":"appendix-preprocessor-directives/#_3","title":"\u30de\u30af\u30ed","text":"<p><code>#define</code> \u3067\u30de\u30af\u30ed\u3092\u5b9a\u7fa9\u3057\u3066\u6587\u5b57\u5217\u7f6e\u63db\u3092\u884c\u3044\u307e\u3059\u3002</p> <p>\u5b9a\u7fa9\u3055\u308c\u305f\u30de\u30af\u30ed\u306f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u672b\u5c3e\u307e\u3067\u6709\u52b9\u3067\u3059\u3002 \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u9014\u4e2d\u3067\u7121\u52b9\u5316\u3059\u308b\u306b\u306f <code>#undef</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"appendix-preprocessor-directives/#_4","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5f62\u5f0f","text":"<p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5f62\u5f0f\u306e\u30de\u30af\u30ed\u306f\u56fa\u5b9a\u306e\u6587\u5b57\u5217\u3078\u7f6e\u63db\u3055\u308c\u307e\u3059\u3002</p> <p>\u4e00\u822c\u306b\u5b9a\u6570\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u307e\u3059\u304c\u3001 \u7279\u5225\u306a\u7406\u7531\u304c\u306a\u3044\u9650\u308a <code>constexpr</code> \u5909\u6570\u306e\u4f7f\u7528\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <pre><code>#define BUFFER_SIZE 256\n\nint main() {\n// `char buffer[256];` \u306b\u7f6e\u63db\u3055\u308c\u308b\nchar buffer[BUFFER_SIZE];\n\nreturn 0;\n}\n</code></pre>"},{"location":"appendix-preprocessor-directives/#_5","title":"\u95a2\u6570\u5f62\u5f0f","text":"<p>\u95a2\u6570\u5f62\u5f0f\u306e\u30de\u30af\u30ed\u306f\u5f15\u6570\u3092\u4f7f\u7528\u3057\u3066\u6587\u5b57\u5217\u3078\u7f6e\u63db\u3055\u308c\u307e\u3059\u3002</p> <p>\u4e00\u822c\u306b\u578b\u306b\u4f9d\u5b58\u3057\u306a\u3044\u95a2\u6570\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\u304c\u3001 \u7279\u5225\u306a\u7406\u7531\u304c\u306a\u3044\u9650\u308a\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4f7f\u7528\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\n#define ECHO(VALUE) VALUE\n\nint main() {\n// `std::cout &lt;&lt; 2 &lt;&lt; std::endl;` \u306b\u7f6e\u63db\u3055\u308c\u308b\nstd::cout &lt;&lt; ECHO(2) &lt;&lt; std::endl;\n\n// `std::cout &lt;&lt; \"abc\" &lt;&lt; std::endl;` \u306b\u7f6e\u63db\u3055\u308c\u308b\nstd::cout &lt;&lt; ECHO(\"abc\") &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre> <p>\u610f\u56f3\u3057\u306a\u3044\u6319\u52d5\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u7f6e\u63db\u5185\u5bb9\u306e\u5de5\u592b\u304c\u5fc5\u8981\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\n// VALUE1 \u3068 VALUE2 \u306e\u548c\n#define SUM(VALUE1, VALUE2) VALUE1 + VALUE2\n\nint main() {\n// `1 + 2` \u306b\u7f6e\u63db\u3055\u308c\u308b\nint a = SUM(1, 2);\n\n// `1 + 2 * 3` \u306b\u7f6e\u63db\u3055\u308c\u308b\nint b = SUM(1, 2) * 3;\n\nstd::cout &lt;&lt; a &lt;&lt; std::endl;  // 3\nstd::cout &lt;&lt; b &lt;&lt; std::endl;  // 7 (9 \u306b\u306a\u3089\u306a\u3044)\n\nreturn 0;\n}\n</code></pre> <p>\u610f\u56f3\u901a\u308a\u306e\u6319\u52d5\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u62ec\u5f27\u3067\u56f2\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// VALUE1 \u3068 VALUE2 \u306e\u548c\n#define SUM(VALUE1, VALUE2) (VALUE1 + VALUE2)\n</code></pre> <p>\u4ed6\u306b\u3082\u6b21\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\n// \u6761\u4ef6 EXPECTED \u304c\u6e80\u305f\u3055\u308c\u3066\u3044\u306a\u3044\u6642\u306b MESSAGE \u3092\u51fa\u529b\n// `\\` \u3067\u6539\u884c\u3067\u304d\u308b\n#define ERROR_LOG(EXPECTED, MESSAGE)       \\\n    if (!(EXPECTED)) {                     \\\n        std::cout &lt;&lt; MESSAGE &lt;&lt; std::endl; \\\n    }\n\nint main() {\n// \u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\nERROR_LOG(1 &gt; 0, \"message1\");  // true \u306a\u306e\u3067\u5b9f\u884c\u3055\u308c\u306a\u3044\nERROR_LOG(1 &lt; 0, \"message2\");  // false \u306a\u306e\u3067\u5b9f\u884c\u3055\u308c\u308b\n\n// \u5c55\u958b\u3055\u308c\u308b\u3068\u30d6\u30ed\u30c3\u30af\u6709\u308a if \u6587\u306a\u306e\u3067\u30bb\u30df\u30b3\u30ed\u30f3\u304c\u306a\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\nERROR_LOG(false, \"message3\")\n\n// \u30d6\u30ed\u30c3\u30af\u7121\u3057 if \u6587\u3067\u306f\u5236\u5fa1\u69cb\u9020\u304c\u5909\u5316\u3057\u3066\u3057\u307e\u3046\nif (false)\nERROR_LOG(false, \"message4\")\nelse\nERROR_LOG(false, \"message5\")  // \u5b9f\u884c\u3055\u308c\u306a\u3044\n\nreturn 0;\n}\n</code></pre> <p>\u30d6\u30ed\u30c3\u30af\u7121\u3057 if \u6587\u3067\u306f\u6b21\u306e\u3088\u3046\u306b\u5c55\u958b\u3055\u308c\u307e\u3059\u3002</p> <pre><code>if (false)\nif (!(false)) { std::cout &lt;&lt; \"message4\" &lt;&lt; std::endl; }\nelse\nif (!(false)) { std::cout &lt;&lt; \"message5\" &lt;&lt; std::endl; }\n</code></pre> <p>\u5206\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u6574\u5f62\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>if (false)\nif (!(false)) {\nstd::cout &lt;&lt; \"message4\" &lt;&lt; std::endl;\n} else if (!(false)) {\nstd::cout &lt;&lt; \"message5\" &lt;&lt; std::endl;\n}\n</code></pre> <p><code>else</code> \u304c <code>if</code> \u306e\u4e2d\u306b\u5165\u3063\u3066\u3057\u307e\u3044\u3001\u6b21\u306e <code>if</code> \u3068\u3064\u306a\u304c\u3063\u3066 <code>else if</code> \u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u306f \u8907\u6587\u30de\u30af\u30ed \u3068\u547c\u3070\u308c\u308b\u30a4\u30c7\u30a3\u30aa\u30e0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#define ERROR_LOG(EXPECTED, MESSAGE)           \\\n    do {                                       \\\n        if (!(EXPECTED)) {                     \\\n            std::cout &lt;&lt; MESSAGE &lt;&lt; std::endl; \\\n        }                                      \\\n    } while (false)\n</code></pre>"},{"location":"appendix-preprocessor-directives/#_6","title":"\u5b9a\u7fa9\u6e08\u307f\u30de\u30af\u30ed","text":"<p>\u5b9a\u7fa9\u6e08\u307f\u30de\u30af\u30ed\u306e\u4e00\u90e8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p> <p>\u4e00\u89a7\u306f \u30c6\u30ad\u30b9\u30c8\u30de\u30af\u30ed\u306e\u7f6e\u63db - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"appendix-preprocessor-directives/#_7","title":"\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u884c\u756a\u53f7","text":"<p>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3084\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u3068\u3057\u3066 <code>__FILE__</code> \u3067\u30d5\u30a1\u30a4\u30eb\u540d\u3001 <code>__LINE__</code> \u3067\u884c\u756a\u53f7\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30ed\u30b0\u51fa\u529b\u3067\u306f\u3053\u308c\u3089\u306e\u5024\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u3001 \u30ed\u30b0\u51fa\u529b\u95a2\u6570\u3092\u95a2\u6570\u5f62\u5f0f\u306e\u30de\u30af\u30ed\u3067\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002</p>"},{"location":"appendix-preprocessor-directives/#c","title":"C++ \u30d0\u30fc\u30b8\u30e7\u30f3","text":"<p><code>__cplusplus</code> \u3067\u4f7f\u7528\u3057\u3066\u3044\u308b C++ \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8868\u3059\u6570\u5024\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 C++11 \u3067\u3042\u308c\u3070 <code>201103L</code> \u3068\u3044\u3046\u5024\u306b\u7f6e\u63db\u3055\u308c\u307e\u3059\u3002</p> <p>C++ \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u5fdc\u3058\u3066\u6709\u52b9/\u7121\u52b9\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"appendix-preprocessor-directives/#_8","title":"\u6761\u4ef6","text":"<p>\u6b21\u306e\u53f8\u4ee4\u3067\u6761\u4ef6\u306b\u5fdc\u3058\u3066\u30b3\u30fc\u30c9\u306e\u6709\u52b9/\u7121\u52b9\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <ul> <li><code>#if</code></li> <li><code>#elif</code></li> <li><code>#else</code></li> <li><code>#endif</code></li> </ul> <pre><code>#include &lt;iostream&gt;\n\nint main() {\n#if true\nstd::cout &lt;&lt; \"true\" &lt;&lt; std::endl;  // \u6709\u52b9 (\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b)\n#endif\n\n#if false\nstd::cout &lt;&lt; \"false\" &lt;&lt; std::endl;  // \u7121\u52b9 (\u30b3\u30f3\u30d1\u30a4\u30eb\u524d\u306b\u524a\u9664\u3055\u308c\u308b)\n#endif\n\n#if false\nstd::cout &lt;&lt; \"1\" &lt;&lt; std::endl;  // \u7121\u52b9\n#elif true\nstd::cout &lt;&lt; \"2\" &lt;&lt; std::endl;  // \u6709\u52b9\n#else\nstd::cout &lt;&lt; \"3\" &lt;&lt; std::endl;  // \u7121\u52b9\n#endif\n\nreturn 0;\n}\n</code></pre> <p><code>defined</code> \u306b\u3088\u3063\u3066\u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u6761\u4ef6\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\n// \u6761\u4ef6\u3060\u3051\u306b\u4f7f\u7528\u3059\u308b\u30de\u30af\u30ed\u306f\u7f6e\u63db\u6587\u5b57\u5217\u3092\u7a7a\u306b\u3059\u308b\n#define SAMPLE_A\n\nint main() {\n#if defined SAMPLE_A\nstd::cout &lt;&lt; \"A\" &lt;&lt; std::endl;  // \u6709\u52b9\n#endif\n\n#if defined SAMPLE_B\nstd::cout &lt;&lt; \"B\" &lt;&lt; std::endl;  // \u7121\u52b9\n#endif\n\nreturn 0;\n}\n</code></pre>"},{"location":"appendix-preprocessor-directives/#ifdef-ifndef","title":"#ifdef \u3068 #ifndef","text":"<p>\u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u6761\u4ef6\u306f\u591a\u7528\u3055\u308c\u308b\u305f\u3081\u3001 <code>#if defined</code> \u306e\u77ed\u7e2e\u3068\u3057\u3066 <code>#ifdef</code>\u3001 \u5426\u5b9a <code>#if !defined</code> \u306e\u77ed\u7e2e\u3068\u3057\u3066 <code>#ifndef</code> \u3068\u3044\u3046\u53f8\u4ee4\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u3053\u308c\u3089\u3092\u6d3b\u7528\u3057\u3066\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u306f\u5b9f\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <pre><code>#ifndef SAMPLE_H_\n#define SAMPLE_H_\n\n// \u5185\u5bb9\n\n#endif  // SAMPLE_H_\n</code></pre>"},{"location":"appendix-void-pointer/","title":"void \u30dd\u30a4\u30f3\u30bf","text":"<p>\u578b\u3092\u3082\u305f\u306a\u3044\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3046\u5834\u5408\u306b void \u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u3042\u3089\u3086\u308b\u30dd\u30a4\u30f3\u30bf\u306f void \u30dd\u30a4\u30f3\u30bf\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001 \u578b\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u5b89\u5168\u3067\u306a\u3044\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"appendix-void-pointer/#_1","title":"\u578b\u306e\u975e\u516c\u958b","text":"<p>void \u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3068 \u578b\u3092\u516c\u958b\u305b\u305a\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> integer.h <pre><code>#ifndef INTEGER_H_\n#define INTEGER_H_\n\nvoid* integer_create(int v);\nint integer_get(const void* instance);\nvoid integer_destroy(void* instance);\n\n#endif  // INTEGER_H_\n</code></pre> integer.cc <pre><code>#include \"integer.h\"\n\nnamespace {\n\nclass Integer {\npublic:\nexplicit Integer(int x) : x_(x) {}\n\nint Get() const {\nreturn x_;\n}\n\nprivate:\nint x_;\n};\n\n}  // namespace\n\nvoid* integer_create(int v) {\nreturn new Integer(v);\n}\n\nint integer_get(const void* instance) {\nreturn reinterpret_cast&lt;const Integer*&gt;(instance)-&gt;Get();\n}\n\nvoid integer_destroy(void* instance) {\ndelete reinterpret_cast&lt;Integer*&gt;(instance);\n}\n</code></pre> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"integer.h\"\n\nint main() {\nvoid* obj = integer_create(5);\nstd::cout &lt;&lt; integer_get(obj) &lt;&lt; std::endl;\ninteger_destroy(obj);\nobj = nullptr;\n\nreturn 0;\n}\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f <code>Integer</code> \u30af\u30e9\u30b9\u3092\u516c\u958b\u305b\u305a\u306b void \u30dd\u30a4\u30f3\u30bf\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"appendix-void-pointer/#static_cast","title":"static_cast \u306b\u3088\u308b\u30ad\u30e3\u30b9\u30c8","text":"<p>void \u30dd\u30a4\u30f3\u30bf\u306f\u30dd\u30a4\u30f3\u30bf\u306e\u4e00\u7a2e\u3067\u3059\u304c\u3001 <code>reinterpret_cast</code> \u3067\u306f\u306a\u304f <code>static_cast</code> \u3067\u3082\u30ad\u30e3\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int integer_get(const void* const instance) {\nreturn static_cast&lt;const Integer* const&gt;(instance)-&gt;Get();\n}\n\nvoid integer_destroy(void* instance) {\ndelete static_cast&lt;Integer*&gt;(instance);\n}\n</code></pre>"},{"location":"appendix-void-pointer/#c","title":"C \u306b\u304a\u3051\u308b\u578b\u975e\u4f9d\u5b58\u306e\u51e6\u7406","text":"<p>C \u306b\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u306a\u3044\u305f\u3081\u3001 \u578b\u306b\u4f9d\u5b58\u3057\u306a\u3044\u51e6\u7406\u3092\u884c\u3046\u5834\u5408\u306b\u3082 void \u30dd\u30a4\u30f3\u30bf\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <p>\u305f\u3068\u3048\u3070\u3001\u4efb\u610f\u306e\u578b\u306e\u914d\u5217\u3092\u30bd\u30fc\u30c8\u3059\u308b C \u306e qsort \u306f\u6b21\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;stdlib.h&gt;\n\nint cmp_int(const void *a, const void *b) {\nint a_val = *(const int *)a;\nint b_val = *(const int *)b;\n\nif (a_val &lt; b_val) {\nreturn -1;\n}\nif (a_val &gt; b_val) {\nreturn 1;\n}\nreturn 0;\n}\n\nint main() {\nint x[5] = {1, 5, 2, 4, 3};\nqsort(x, 5, sizeof(int), cmp_int);\n\nreturn 0;\n}\n</code></pre> <p>C++ \u3067\u306f\u3053\u306e\u7528\u9014\u3067 void \u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u7528\u305b\u305a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch01-01-installation/","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":""},{"location":"ch01-01-installation/#_2","title":"\u30b3\u30f3\u30d1\u30a4\u30e9","text":"<p>C++ \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u591a\u304f\u306e\u30d9\u30f3\u30c0\u304c\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002 \u4ee3\u8868\u7684\u306a\u3082\u306e\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> \u30b3\u30f3\u30d1\u30a4\u30e9 Linux macOS Windows GCC \ufe0f Clang Visual C++ <p>GCC \u306f Linux \u3092\u30e1\u30a4\u30f3\u306b\u4f7f\u7528\u3055\u308c\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u304c\u3001 Linux \u4ee5\u5916\u306e\u4e3b\u8981\u306a\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001 \u4e00\u756a\u5b9f\u7e3e\u306e\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002 Clang \u306f\u8fd1\u5e74\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3001 \u4eca\u5f8c\u306f GCC \u306b\u53d6\u3063\u3066\u4ee3\u308f\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002</p> <p>\u672c\u66f8\u3067\u306f Windows \u7248\u306e GCC \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 GCC \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f msys2 \u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 msys2 \u306f Linux \u3067\u4f7f\u7528\u3067\u304d\u308b\u30b3\u30de\u30f3\u30c9\u306e\u4e00\u90e8\u3092 Windows \u306b\u79fb\u690d\u3057\u305f\u30c4\u30fc\u30eb\u30bb\u30c3\u30c8\u3067\u3059\u3002</p>"},{"location":"ch01-01-installation/#msys2","title":"msys2 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>\u4e0b\u8a18\u306e msys2 \u306e\u516c\u5f0f\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002</p> <pre><code>https://www.msys2.org/\n</code></pre> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u306f <code>msys2-i386-yyyymmdd.exe, msys2-x86_64-yyyymmdd.exe</code> \u306e 2 \u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u524d\u8005\u304c 32 \u30d3\u30c3\u30c8\u7248\u3067\u5f8c\u8005\u304c 64 \u30d3\u30c3\u30c8\u7248\u306b\u306a\u308a\u307e\u3059\u3002 \u672c\u66f8\u3067\u306f 64 \u30d3\u30c3\u30c8\u7248\u3092\u3082\u3068\u306b\u8aac\u660e\u3059\u308b\u306e\u3067\u300164 \u30d3\u30c3\u30c8\u7248\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch01-01-installation/#gcc","title":"GCC \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p> <pre><code>$ pacman -S gcc\n</code></pre>"},{"location":"ch01-01-installation/#ide","title":"IDE","text":"<p>C++ \u7528\u306e IDE \u3068\u3057\u3066\u306f Visual Studio Code \u304c\u4eba\u6c17\u3067\u3059\u3002 Visual Studio Code \u81ea\u4f53\u306f\u30a8\u30c7\u30a3\u30bf\u306a\u306e\u3067\u3059\u304c\u3001\u62e1\u5f35\u6a5f\u80fd\u3092\u5165\u308c\u308b\u3053\u3068\u3067 C++ \u5411\u3051\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>\u4e0b\u8a18\u30b5\u30a4\u30c8\u3088\u308a Visual Studio Code \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>https://code.visualstudio.com/\n</code></pre> <p>Visual Studio Code \u306e\u62e1\u5f35\u6a5f\u80fd\u3067\u3042\u308b C/C++ \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Visual Studio Code \u3092\u8d77\u52d5\u3057\u305f\u5f8c\u3001<code>Ctrl+Shift+X</code> \u3092\u62bc\u3059\u3068 \u62e1\u5f35\u6a5f\u80fd\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u753b\u9762\u306b\u5207\u308a\u66ff\u308f\u308b\u306e\u3067\u3001 C/C++ \u3092\u691c\u7d22\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch01-02-hello-world/","title":"Hello, World!","text":"<p>Visual Studio Code \u4e0a\u3067 <code>main.cc</code> \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066 \u4e0b\u8a18\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p>main.cc</p> <pre><code>#include &lt;iostream&gt;\n\nint main() {\nstd::cout &lt;&lt; \"Hello, World!\" &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre> <p>msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 main.cc\n</code></pre> <p>\u6210\u529f\u3059\u308b\u3068 <code>a.exe</code> \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002 \u3053\u308c\u304c\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308b\u306e\u3067\u3001\u5b9f\u884c\u3059\u308b\u3068 <code>Hello, World!</code> \u3068\u3044\u3046 \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <pre><code>$ ./a.exe\nHello, World!\n</code></pre>"},{"location":"ch02-01-variables/","title":"\u5909\u6570","text":"<p>C++ \u3067\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u6574\u6570\u5024\u306e\u5909\u6570\u3092\u5ba3\u8a00\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>int x = 5;\n</code></pre> <p><code>int</code> \u306f\u6574\u6570\u3092\u8868\u73fe\u3059\u308b\u578b\u3067\u3059\u3002 \u5ba3\u8a00\u6642\u306b\u521d\u671f\u5316\u3092\u305b\u305a\u306b\u3042\u3068\u3067\u5024\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int x;\nx = 5;\n</code></pre> <p>\u521d\u671f\u5024\u3092\u8a2d\u5b9a\u3057\u306a\u3044\u307e\u307e\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u4e0d\u5b9a\u306a\u5024\u304c\u5165\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002</p> <pre><code>int x;\n\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // \u4e0d\u5b9a\u306a\u5024\u304c\u51fa\u529b\u3055\u308c\u308b\n</code></pre>"},{"location":"ch02-01-variables/#const","title":"const","text":"<p><code>const</code> \u3092\u4ed8\u3051\u308b\u3068\u5024\u306e\u66f8\u304d\u63db\u3048\u304c\u7981\u6b62\u3067\u304d\u307e\u3059\u3002</p> <pre><code>const int x = 5;\nx = 10;  // \u30a8\u30e9\u30fc\n</code></pre>"},{"location":"ch02-01-variables/#constexpr","title":"constexpr","text":"<p><code>constexpr</code> \u3092\u4ed8\u3051\u308b\u3068\u5b9a\u6570\u306b\u3067\u304d\u307e\u3059\u3002</p> <pre><code>constexpr int x = 5;\n</code></pre> <p><code>const</code> \u306e\u5024\u306f\u5b9f\u884c\u6642\u306b\u6c7a\u5b9a\u3057\u307e\u3059\u304c <code>constexpr</code> \u306e\u5024\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6c7a\u5b9a\u3057\u307e\u3059\u3002</p>"},{"location":"ch02-01-variables/#_2","title":"\u578b\u63a8\u8ad6","text":"<p>\u5909\u6570\u306e\u5ba3\u8a00\u6642\u306b\u306f\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082 <code>auto</code> \u3092\u4f7f\u3046\u3068 \u53f3\u8fba\u306e\u5024\u304b\u3089\u578b\u3092\u63a8\u8ad6\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>auto x = 5;  // x \u306f int \u3068\u63a8\u8ad6\n</code></pre>"},{"location":"ch02-02-primitive-types/","title":"\u57fa\u672c\u578b","text":"<p>C++ \u3067\u306f\u3058\u3081\u304b\u3089\u4f7f\u7528\u3067\u304d\u308b\u57fa\u672c\u578b\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p>"},{"location":"ch02-02-primitive-types/#bool","title":"bool","text":"<p><code>bool</code> \u306f\u771f\u507d\u5024\u3092\u8868\u3059\u578b\u3067 <code>true</code> \u307e\u305f\u306f <code>false</code> \u304c\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <pre><code>bool ok = true;\n</code></pre>"},{"location":"ch02-02-primitive-types/#char","title":"char","text":"<p><code>char</code> \u306f\u30a2\u30b9\u30ad\u30fc\u6587\u5b571\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u578b\u3067\u3059\u3002 \u305f\u3060\u3057\u5185\u90e8\u8868\u73fe\u306f\u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\u306e\u6574\u6570\u5024\u3068\u3057\u3066\u6271\u308f\u308c\u3001 \u6a19\u6e96\u51fa\u529b\u306a\u3069\u306b\u51fa\u529b\u3059\u308b\u969b\u306b\u6587\u5b57\u306b\u5909\u63db\u3055\u308c\u3066\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</p> <pre><code>char x = 'x';\n</code></pre>"},{"location":"ch02-02-primitive-types/#_2","title":"\u6570\u5024","text":"<p>\u6570\u5024\u3092\u8868\u73fe\u3059\u308b\u578b\u306f\u8907\u6570\u7a2e\u985e\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch02-02-primitive-types/#_3","title":"\u6574\u6570\u578b","text":"<p>\u6574\u6570\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306e\u578b\u3067\u3059\u3002</p> <ul> <li><code>char</code></li> <li><code>short</code></li> <li><code>int</code></li> <li><code>long</code></li> </ul> <p>\u4e0b\u306b\u884c\u304f\u306b\u9023\u308c\u3066\u5927\u304d\u306a\u5024\u304c\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5909\u6570\u306e\u30b5\u30a4\u30ba\u3082\u5897\u5927\u3057\u307e\u3059\u3002 \u5177\u4f53\u7684\u306a\u30b5\u30a4\u30ba\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u304c GCC \u3067\u306f 8, 16, 32, 64 \u30d3\u30c3\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u4e00\u822c\u7684\u306b\u306f <code>int</code> \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ch02-02-primitive-types/#_4","title":"\u7b26\u53f7\u4ed8\u304d\u30fb\u7b26\u53f7\u306a\u3057\u6574\u6570\u578b","text":"<p>\u5404\u6574\u6570\u578b\u306b <code>unsigned</code> \u3092\u4ed8\u3051\u308b\u3068\u6b63\u306e\u6570\u3057\u304b\u8868\u73fe\u3067\u304d\u306a\u304f\u306a\u308b\u4ee3\u308f\u308a\u306b \u5927\u304d\u306a\u5024\u304c\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>unsigned int x = 4000000000;\n</code></pre> <p><code>signed</code> \u3092\u4ed8\u3051\u308b\u3068\u6b63\u8ca0\u4e21\u65b9\u306e\u5024\u304c\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 \u660e\u793a\u7684\u306b\u4ed8\u3051\u306a\u304f\u3066\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u306f <code>signed</code> \u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>char</code> \u306f <code>signed char</code> \u3058\u3083\u306a\u3044\uff1f</p> <p>C++ \u3067\u306f <code>char, signed char, unsigned char</code> \u306f\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u578b\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff08C\u8a00\u8a9e\u3082\u540c\u69d8\u3067\u3059\uff09\u3002 \u30d7\u30ec\u30fc\u30f3\u306a <code>char</code> \u578b\u304c\u7b26\u53f7\u4ed8\u304d\u30fb\u7b26\u53f7\u306a\u3057\u306e\u3044\u305a\u308c\u306b\u306a\u308b\u304b\u306f\u3001\u4ed5\u69d8\u4e0a\u306f\u51e6\u7406\u7cfb\u5b9a\u7fa9(implementation-defined)\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u5b9f\u969b\u306b\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u7b26\u53f7\u6709\u7121\u3092\u9078\u629e\u3067\u304d\u305f\u308a\u3001\u5bfe\u8c61\u30d7\u30ed\u30bb\u30c3\u30b5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306a\u3069\u304b\u3089\u6c7a\u307e\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002 \u79fb\u690d\u6027\u306e\u3042\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5834\u5408\u306f\u5341\u5206\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002</p>"},{"location":"ch02-02-primitive-types/#_5","title":"\u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b","text":"<p>\u4e0a\u8ff0\u306e\u6574\u6570\u578b\u306f\u578b\u306e\u30b5\u30a4\u30ba\u304c\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u307e\u3061\u307e\u3061\u306a\u306e\u3067 \u8907\u6570\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u304d\u306f \u79fb\u690d\u6027\u306e\u9762\u3067\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u3088\u3046\u306a\u3068\u304d\u306f\u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <ul> <li><code>std::int8_t</code></li> <li><code>std::int16_t</code></li> <li><code>std::int32_t</code></li> <li><code>std::int64_t</code></li> <li><code>std::uint8_t</code></li> <li><code>std::uint16_t</code></li> <li><code>std::uint32_t</code></li> <li><code>std::uint64_t</code></li> </ul> <p>\u6570\u5024\u306f\u578b\u306e\u30d3\u30c3\u30c8\u30b5\u30a4\u30ba\u3092\u8868\u3057\u3066\u304a\u308a\u3001u \u306f <code>unsigned</code> \u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002 \u30b5\u30a4\u30ba\u6307\u5b9a\u4ed8\u304d\u6574\u6570\u578b\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f <code>#include &lt;cstdint&gt;</code> \u3068\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;cstdint&gt;\n\nstd::int32_t x = 5;\n</code></pre>"},{"location":"ch02-02-primitive-types/#_6","title":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b","text":"<p>\u5c0f\u6570\u3092\u8868\u73fe\u3059\u308b\u578b\u306f\u6b21\u306e2\u3064\u306e\u578b\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li><code>float</code></li> <li><code>double</code></li> </ul> <p><code>float</code> \u306f 32 \u30d3\u30c3\u30c8\u306e\u5927\u304d\u3055\u3092\u6301\u3061\u3001<code>double</code> \u306f 64 \u30d3\u30c3\u30c8\u306e\u5927\u304d\u3055\u3092\u6301\u3061\u307e\u3059\u3002 \u307e\u305f <code>double</code> \u306e\u65b9\u304c <code>float</code> \u306b\u6bd4\u3079\u3066\u8a08\u7b97\u7cbe\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u304c\u6570\u5024\u8a08\u7b97\u306e \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u4f4e\u3044\u3067\u3059\u3002</p>"},{"location":"ch02-02-primitive-types/#_7","title":"\u5217\u6319\u578b","text":"<p>\u5217\u6319\u578b\u306f\u3001\u540d\u524d\u3092\u4ed8\u3051\u305f\u5b9a\u6570\uff08\u5217\u6319\u5b50\uff09\u306e\u96c6\u5408\u3092\u6271\u3046\u578b\u3067\u3059\u3002</p>"},{"location":"ch02-02-primitive-types/#enum","title":"enum","text":"<p>\u5217\u6319\u578b\u3067\u3042\u308b <code>enum</code> \u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>enum Day {\nSun,  // 0\nMon,  // 1\nTue,  // 2\nWed,  // 3\nThu,  // 4\nFri,  // 5\nSat   // 6\n};\n</code></pre> <p><code>enum</code> \u306e\u5404\u5217\u6319\u5b50\u306f\u3001\u5185\u90e8\u3067\u306f\u6574\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3044\u307e\u3059\u3002 \u5404\u5217\u6319\u5b50\u306e\u5b9a\u7fa9\u306e\u969b\u306b\u5024\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3001 <code>0</code> \u304b\u3089\u9806\u306b\u5024\u304c\u5272\u308a\u632f\u3089\u308c\u307e\u3059\u3002</p> <p><code>\u5217\u6319\u5b50 = \u6574\u6570</code> \u3068\u66f8\u304f\u3053\u3068\u3067\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5024\u304c\u6307\u5b9a\u3055\u308c\u305f\u5217\u6319\u5b50\u4ee5\u964d\u306f\u3001\u9806\u306b\u6574\u6570\u304c\u5272\u308a\u632f\u3089\u308c\u307e\u3059\u3002</p> <pre><code>enum Day {\nSun = 1,  // 1\nMon,      // 2\nTue,      // 3\nWed = 8,  // 8\nThu,      // 9\nFri,      // 10\nSat       // 11\n};\n</code></pre> <p><code>enum</code> \u3092\u6271\u3046\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Day day = Fri;\n</code></pre> <p>\u6570\u5024\u578b\u306b <code>enum</code> \u306e\u5024\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3059\u304c\u3001 <code>enum</code> \u306b\u6570\u5024\u3092\u76f4\u63a5\u4ee3\u5165\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u305b\u3093\u3002</p> <pre><code>int x = Fri;  // OK\nDay day = 5;  // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n</code></pre> <p>\u5217\u6319\u5b50\u306e\u540d\u524d\u306f\u88ab\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>enum Day {\nSun,\nMon,\nTue,\nWed,\nThu,\nFri,\nSat\n};\n\nenum SolarSystem {\nSun,  // Sun \u306f enum Day \u5185\u3067\u5b9a\u7fa9\u6e08\u307f\u306e\u305f\u3081\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\nMercury,\nVenus,\nEarth,\nMars,\nJupiter,\nSaturn,\nUranus,\nNeptune\n};\n</code></pre>"},{"location":"ch02-02-primitive-types/#enum-class","title":"enum class","text":"<p><code>enum class</code> \u3067\u5217\u6319\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code>enum class Day {\nSun,\nMon,\nTue,\nWed,\nThu,\nFri,\nSat\n};\n</code></pre> <p>\u57fa\u672c\u7684\u306b\u306f <code>enum</code> \u3068\u540c\u3058\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u70b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002</p> <p><code>enum class</code> \u3092\u6271\u3046\u306b\u306f <code>\u578b\u540d::\u5217\u6319\u5b50\u540d</code> \u3068\u3057\u307e\u3059\u3002</p> <pre><code>Day day = Day::Fri;  // OK\nDay day = Fri;       // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n</code></pre> <p>\u660e\u793a\u7684\u306b\u578b\u5909\u63db\u3092\u3057\u306a\u3044\u9650\u308a\u3001\u6570\u5024\u578b\u306b <code>enum class</code> \u306e\u5024\u306e\u4ee3\u5165\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code>int x = Day::Fri;  // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n</code></pre> <p>\u660e\u793a\u7684\u306a\u578b\u5909\u63db</p> <p>\u660e\u793a\u7684\u306b\u578b\u5909\u63db \u3092\u884c\u3046\u3053\u3068\u3067\u3001\u6570\u5024\u578b\u306a\u3069\u306b <code>enum class</code> \u306e\u5024\u306e\u4ee3\u5165\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>int x = static_cast&lt;int&gt;(Day::Fri);\n</code></pre> <p><code>enum class</code> \u306e\u5834\u5408\u3001\u5217\u6319\u5b50\u306e\u540d\u524d\u306f\u578b\u3054\u3068\u306b\u533a\u5225\u3055\u308c\u308b\u305f\u3081\u3001 \u4ed6\u306e\u5217\u6319\u578b\u306e\u5217\u6319\u5b50\u3068\u540d\u524d\u304c\u88ab\u3063\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>enum class Day {\nSun,  // Day::Sun\nMon,\nTue,\nWed,\nThu,\nFri,\nSat\n};\n\nenum class SolarSystem {\nSun,  // Day::Sun \u3068 SolarSystem::Sun \u306f\u533a\u5225\u3055\u308c\u308b\u305f\u3081OK\nMercury,\nVenus,\nEarth,\nMars,\nJupiter,\nSaturn,\nUranus,\nNeptune\n};\n</code></pre>"},{"location":"ch02-03-literals/","title":"\u30ea\u30c6\u30e9\u30eb","text":"<p>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4e2d\u306b\u8a18\u8ff0\u3055\u308c\u308b\u5b9a\u6570\u5024\u306e\u3053\u3068\u3092\u30ea\u30c6\u30e9\u30eb\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u672c\u9805\u3067\u306f\u6574\u6570\u30ea\u30c6\u30e9\u30eb\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\u4ed6\u306e\u30ea\u30c6\u30e9\u30eb\u306b\u3064\u3044\u3066\u306f \u5f0f - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch02-03-literals/#_2","title":"\u6574\u6570\u30ea\u30c6\u30e9\u30eb","text":"<p>\u6570\u5b57\u306e\u5148\u982d\u306b\u7279\u5b9a\u306e\u6587\u5b57\u3092\u52a0\u3048\u308b\u3053\u3068\u3067\u6574\u6570\u306e\u57fa\u6570\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>26   // 10\u9032\u6574\u6570\u30ea\u30c6\u30e9\u30eb\n032  // \u5148\u982d\u306b0\u3092\u4ed8\u3051\u308b\u30688\u9032\u6574\u6570\u30ea\u30c6\u30e9\u30eb\n0x1a // \u5148\u982d\u306b0x\u3092\u4ed8\u3051\u308b\u306816\u9032\u6574\u6570\u30ea\u30c6\u30e9\u30eb\n0x1A // 16\u9032\u6574\u6570\u30ea\u30c6\u30e9\u30eb\u5185\u306e\u6587\u5b57\u306f\u5c0f\u6587\u5b57\u3067\u3082\u5927\u6587\u5b57\u3067\u3082\u533a\u5225\u3055\u308c\u306a\u3044\u306e\u30670x1a\u3068\u540c\u3058\n</code></pre> <p>\u6570\u5b57\u306e\u672b\u5c3e\u306b\u6587\u5b57\u3092\u52a0\u3048\u308b\u3053\u3068\u3067\u6b21\u306e\u3088\u3046\u306a\u578b\u3092\u8868\u73fe\u3067\u304d\u307e\u3059\u3002</p> <pre><code>26u    // unsigned\u578b\u306e26\n26l    // long\u578b\u306e26\n26ul   // unsigned long\u578b\u306e26\n0x1Aul // unsigned long\u578b\u306e0x1A\n</code></pre>"},{"location":"ch02-04-pointers-and-references/","title":"\u30dd\u30a4\u30f3\u30bf\u3068\u53c2\u7167","text":""},{"location":"ch02-04-pointers-and-references/#_2","title":"\u30dd\u30a4\u30f3\u30bf","text":"<p>\u30dd\u30a4\u30f3\u30bf\u3068\u3044\u3046\u306e\u306f\u4ed6\u306e\u5909\u6570\u3092\u53c2\u7167\u3059\u308b\u4ed5\u7d44\u307f\u306e1\u3064\u3067\u3059\u3002 Windows \u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3084 Linux \u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3068\u540c\u3058\u3088\u3046\u306a\u6a5f\u80fd\u3067\u3059\u3002</p> <pre><code>int x = 5;\nint* p = &amp;x;\n</code></pre> <p><code>int*</code> \u3068\u66f8\u304f\u3068 <code>int</code> \u578b\u306e\u5909\u6570\u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u578b\u3068\u306a\u308a\u307e\u3059\u3002 <code>&amp;x</code> \u3068\u3044\u3046\u306e\u306f <code>x</code> \u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\u3092\u5f97\u308b\u305f\u3081\u306e\u6f14\u7b97\u3067\u3059\u3002</p>"},{"location":"ch02-04-pointers-and-references/#nullptr","title":"nullptr","text":"<p>\u3069\u306e\u5909\u6570\u3082\u53c2\u7167\u3057\u3066\u3044\u306a\u3044\u30dd\u30a4\u30f3\u30bf\u306e\u3053\u3068\u3092\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3068\u547c\u3073\u307e\u3059\u3002C++\u3067\u306f\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3092\u8868\u3059\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u3057\u3066 <code>nullptr</code> \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <pre><code>int* p = nullptr;\n</code></pre> <p>NULL \u30de\u30af\u30ed</p> <p>C++11 \u3088\u308a\u524d\u306f\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3092\u8868\u3059\u306e\u306b <code>nullptr</code> \u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u306f\u306a\u304fC\u8a00\u8a9e\u304b\u3089\u53d7\u3051\u7d99\u3044\u3060 <code>NULL</code> \u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3057\u305f\u3002 C\u8a00\u8a9e\u306e\u51e6\u7406\u7cfb\u3067\u306f\u3001 <code>void*</code> \u578b\u306e\u5909\u6570\u306f\u4efb\u610f\u306e\u30dd\u30a4\u30f3\u30bf\u578b\u306b\u6697\u9ed9\u5909\u63db\u3055\u308c\u308b\u4ed5\u69d8\u304c\u3042\u308b\u305f\u3081\u3001 <code>NULL</code> \u3092 <code>(void*)0</code> \u306a\u3069\u3068\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u4f8b\u304c\u898b\u3089\u308c\u307e\u3057\u305f\u3002 C++\u3067\u306f\u305d\u306e\u3088\u3046\u306a\u6697\u9ed9\u5909\u63db\u306f\u8a31\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001 <code>NULL</code> \u306f\u5358\u306b <code>0</code> \u3068\u5b9a\u7fa9\u3055\u308c\u308b\u4f8b\u304c\u898b\u3089\u308c\u307e\u3057\u305f\u3002 \u3057\u304b\u3057 <code>0</code> \u3068\u3044\u3046\u30ea\u30c6\u30e9\u30eb\u306f\u6587\u8108\u306b\u3088\u3063\u3066\u30cc\u30eb\u30dd\u30a4\u30f3\u30bf\u3068\u89e3\u91c8\u3055\u308c\u305f\u308a <code>int</code> \u578b\u3068\u89e3\u91c8\u3055\u308c\u305f\u308a\u3059\u308b\u305f\u3081\u4e0d\u90fd\u5408\u304c\u751f\u3058\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\u3002</p> <p>C++11 \u3067\u306f\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b <code>nullptr</code> \u304c\u5c0e\u5165\u3055\u308c\u307e\u3057\u305f\u3002 \u305d\u306e\u305f\u3081 C++11 \u4ee5\u964d\u3067\u306f <code>NULL</code> \u3067\u306f\u306a\u304f <code>nullptr</code> \u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002</p> <p>\u8a73\u7d30\u306f nullptr - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch02-04-pointers-and-references/#_3","title":"\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\uff08\u9006\u53c2\u7167\uff09","text":"<p>\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3059\u5909\u6570\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002</p> <pre><code>int x = 5;\nint* p = &amp;x;\nint y = *p;\n</code></pre> <p>\u5909\u6570\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u5f97\u308b\u3068\u304d\u306b\u306f <code>&amp;</code> \u3092\u4ed8\u3051\u3001\u30dd\u30a4\u30f3\u30bf\u304b\u3089\u5024\u3092\u5f97\u308b\u306b\u306f <code>*</code> \u3092\u4ed8\u3051\u307e\u3059\u3002</p>"},{"location":"ch02-04-pointers-and-references/#const","title":"const\u30dd\u30a4\u30f3\u30bf","text":"<p>\u30dd\u30a4\u30f3\u30bf\u578b\u306b <code>const</code> \u3092\u4ed8\u3051\u308b\u5834\u5408\u3001 <code>const</code> \u306e\u4ed8\u3051\u308b\u4f4d\u7f6e\u306b\u3088\u3063\u3066\u610f\u5473\u5408\u3044\u304c\u5909\u308f\u308a\u307e\u3059\u3002</p> <p><code>*</code> \u306e\u524d\u306b <code>const</code> \u3092\u4ed8\u3051\u308b\u3068\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u5024\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int x = 123;\nconst int* p = &amp;x;\n*p = 456; // \u30a8\u30e9\u30fc\n</code></pre> <p><code>*</code> \u306e\u5f8c\u306b <code>const</code> \u3092\u4ed8\u3051\u308b\u3068\u3001\u30dd\u30a4\u30f3\u30bf\u81ea\u8eab\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int x = 123;\nint* const p = &amp;x;\np = nullptr; // \u30a8\u30e9\u30fc\n</code></pre> <p>\u4f75\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>const int* const p = &amp;x;\n</code></pre>"},{"location":"ch02-04-pointers-and-references/#_4","title":"\u53c2\u7167","text":"<p>\u30dd\u30a4\u30f3\u30bf\u306b\u4f3c\u305f\u4ed5\u7d44\u307f\u3068\u3057\u3066\u53c2\u7167\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>int x = 100;\nint* p = &amp;x; // p\u306f\u30dd\u30a4\u30f3\u30bf\u578b\nint&amp; r = x; // r\u306f\u53c2\u7167\u578b\n\n*p = 200;\nr = 200;\n</code></pre> <p><code>int&amp;</code> \u3068\u66f8\u304f\u3068 <code>int</code> \u306e\u53c2\u7167\u578b\u3068\u306a\u308a\u307e\u3059\u3002</p> <p>\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u5024\u3092\u6271\u3046\u306b\u306f <code>*</code> \u3092\u4ed8\u3051\u3066\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001 \u53c2\u7167\u3067\u306f\u4f55\u3082\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081\u3001\u898b\u305f\u76ee\u4e0a\u3067\u306f\u5024\u578b\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p>"},{"location":"ch02-05-comments/","title":"\u30b3\u30e1\u30f3\u30c8","text":"<p>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5185\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>// '//' \u3067\u59cb\u307e\u308b\u884c\u306f\u30b3\u30e1\u30f3\u30c8\u3068\u898b\u306a\u3055\u308c\u307e\u3059\n\nint x = 5;\n\n// \u3053\u306e\u3088\u3046\u306b\n// \u8907\u6570\u884c\u306b\u307e\u305f\u304c\u3063\u3066\n// \u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\n</code></pre> <p><code>/* ... */</code> \u3067\u56f2\u307e\u308c\u305f\u884c\u3082\u30b3\u30e1\u30f3\u30c8\u3068\u898b\u306a\u3055\u308c\u307e\u3059\u3002 \u8907\u6570\u884c\u306b\u307e\u305f\u304c\u308b\u30b3\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u6642\u306b\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code>/*\n * \u9593\u306b\u73fe\u308c\u308b '*' \u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u3044\u3044\u3067\u3059\u304c\n * \u7fd2\u6163\u7684\u306b\u66f8\u304f\u3053\u3068\u306e\u307b\u3046\u304c\u591a\u3044\u3067\u3059\n */\n</code></pre> <p><code>/* ... */</code> \u306f\u5165\u308c\u5b50\u306b\u3057\u3066\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002</p> <pre><code>/* /* \u3053\u308c\u306f\u4e0d\u6b63\u306a\u30b3\u30e1\u30f3\u30c8\u3067\u3059 */ */\n</code></pre>"},{"location":"ch02-06-control-flow/","title":"\u5236\u5fa1\u6587","text":""},{"location":"ch02-06-control-flow/#if","title":"if","text":"<p>\u6761\u4ef6\u5206\u5c90\u3092\u3057\u305f\u3044\u6642\u306b\u306f <code>if</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>int x = 5;\n\nif (x == 5) {\n...\n}\n</code></pre> <p><code>if</code> \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u4f55\u304b\u51e6\u7406\u3092\u3057\u305f\u3051\u308c\u3070 <code>else</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>int x = 5;\n\nif (x == 5) {\n...\n} else {\n...\n}\n</code></pre> <p>\u3055\u3089\u306b\u5225\u306e\u6761\u4ef6\u3067\u51e6\u7406\u3092\u5206\u5c90\u3057\u305f\u3051\u308c\u3070 <code>else if</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>int x = 5;\n\nif (x == 5) {\n...\n} else if (x == 6) {\n...\n} else {\n...\n}\n</code></pre>"},{"location":"ch02-06-control-flow/#switch","title":"switch","text":"<p>\u4e00\u3064\u306e\u5909\u6570\u306e\u5024\u3092\u8abf\u3079\u306a\u304c\u3089\u5206\u5c90\u3059\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u5834\u5408\u306f <code>switch</code> \u6587\u3092\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code>switch (x) {\ncase 0:\n// x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406\nbreak;\ncase 1:\n// x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406\nbreak;\ndefault:\n// x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406\nbreak;\n}\n</code></pre> <p>\u305f\u3060\u3057 <code>switch</code> \u6587\u304c\u4f7f\u7528\u3067\u304d\u308b\u306e\u306f\u4e0b\u8a18\u306e\u3044\u305a\u308c\u304b\u306e\u5834\u5408\u306b\u9650\u308a\u307e\u3059\u3002</p> <ul> <li>\u6574\u6570\u578b</li> <li>\u5217\u6319\u578b</li> <li>\u6574\u6570\u578b\u304b\u5217\u6319\u578b\u3078\u6697\u9ed9\u306b\u5909\u63db\u3067\u304d\u308b\u30af\u30e9\u30b9\u578b</li> </ul> <p>\u4e0a\u8a18\u306e\u69cb\u6587\u306f <code>if</code> \u3067\u66f8\u304d\u76f4\u3059\u3068\u6b21\u3068\u7b49\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>if (x == 0) {\n// x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406\n} else if (x == 1) {\n// x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406\n} else {\n// x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406\n}\n</code></pre> <p>\u305f\u3060\u3057 <code>switch</code> \u6587\u306e\u307b\u3046\u304c <code>if</code> \u3088\u308a\u3082\u6bd4\u8f03\u56de\u6570\u304c\u5c11\u306a\u3044\u305f\u3081\u52b9\u7387\u7684\u3067\u3059\u3002 <code>if</code> \u306f\u307e\u305a\u306f\u3058\u3081\u306b <code>x == 0</code> \u304c <code>true</code> \u304b\u3069\u3046\u304b\u3092\u8abf\u3079 <code>false</code> \u3067\u3042\u308c\u3070 \u6b21\u306b <code>x == 1</code> \u3092\u8a55\u4fa1\u3057\u307e\u3059\u304c\u3001<code>switch</code> \u6587\u306f\u3044\u304d\u306a\u308a\u7279\u5b9a\u306e <code>case</code> \u306b\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3002</p>"},{"location":"ch02-06-control-flow/#_2","title":"\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc","text":"<p><code>switch</code> \u306e\u5404 <code>case</code> \u5185\u306b\u66f8\u304b\u308c\u3066\u3044\u308b <code>break</code> \u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u3088\u3044\u306e\u3067\u3059\u304c\u3001 \u305d\u306e\u5834\u5408\u632f\u308b\u821e\u3044\u304c\u5909\u308f\u308a\u307e\u3059\u3002</p> <pre><code>switch (x) {\ncase 0:\n// x == 0 \u306e\u3068\u304d\u306e\u51e6\u7406\ncase 1:\n// x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406\ndefault:\n// x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406\n}\n</code></pre> <p><code>break</code> \u3092\u66f8\u3044\u305f\u5834\u5408\u306f <code>switch</code> \u6587\u306e\u51e6\u7406\u306f\u305d\u3053\u3067\u7d42\u308f\u308a\u307e\u3059\u304c\u3001 <code>break</code> \u3092\u66f8\u304b\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u4e0b\u306e <code>case</code> \u306b\u51e6\u7406\u304c\u6d41\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u3064\u307e\u308a\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f <code>x == 0</code> \u3067\u3042\u308c\u3070 <code>case 0</code> \u5185\u306e\u51e6\u7406\u3092\u884c\u3063\u305f\u5f8c\u306b <code>case 1</code> \u5185\u306e\u51e6\u7406\u3092\u884c\u3044\u3001\u6700\u5f8c\u306b <code>default</code> \u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002 <code>x == 1</code> \u3067\u3042\u308c\u3070\u540c\u69d8\u306e\u632f\u308b\u821e\u3044\u304c <code>case 1</code> \u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306a <code>switch</code> \u6587\u306e\u4ed5\u69d8\u3092\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\u3068\u8a00\u3044\u307e\u3059\u3002 \u3053\u308c\u306f <code>case 0</code> \u3068 <code>case 1</code> \u306e\u51e6\u7406\u304c\u540c\u3058\u3082\u306e\u306b\u306a\u308b\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002</p> <pre><code>switch (x) {\ncase 0:\ncase 1:\n// x == 0 \u307e\u305f\u306f x == 1 \u306e\u3068\u304d\u306e\u51e6\u7406\ndefault:\n// x \u304c\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306e\u51e6\u7406\n}\n</code></pre> <p>\u305d\u308c\u4ee5\u5916\u306e\u30b1\u30fc\u30b9\u3067\u30d5\u30a9\u30fc\u30eb\u30b9\u30eb\u30fc\u3092\u3055\u305b\u308b\u30b7\u30fc\u30f3\u306f\u307e\u305a\u306a\u3044\u305f\u3081\u3001 <code>break</code> \u3092\u5fd8\u308c\u305a\u306b\u4ed8\u3051\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch02-06-control-flow/#while","title":"while","text":"<p><code>while</code> \u306f <code>()</code> \u306b\u6e21\u3055\u308c\u305f\u6761\u4ef6\u304c <code>true</code> \u3067\u3042\u308b\u9650\u308a <code>{ ... }</code> \u5185\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3057\u7d9a\u3051\u307e\u3059\u3002</p> <pre><code>int x = 5;\nbool done = false;\n\nwhile (!done) {\nx += x - 3;\n\nstd::cout &lt;&lt; x &lt;&lt; std::endl;\n\nif (x % 5 == 0) {\ndone = true;\n}\n}\n</code></pre>"},{"location":"ch02-06-control-flow/#do-while","title":"do-while","text":"<p>\u6700\u521d\u306e1\u56de\u306f\u7121\u6761\u4ef6\u3067 <code>do { ... }</code> \u5185\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3001 2\u56de\u76ee\u4ee5\u964d\u306f <code>while ()</code> \u306b\u6e21\u3055\u308c\u305f\u6761\u4ef6\u304c <code>true</code> \u3067\u3042\u308b\u9650\u308a <code>do { ... }</code> \u5185\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3057\u7d9a\u3051\u307e\u3059\u3002</p> <pre><code>int x = 5;\nbool done = false;\n\ndo {\nx += x - 3;\n\nstd::cout &lt;&lt; x &lt;&lt; std::endl;\n\nif (x % 5 == 0) {\ndone = true;\n}\n} while (!done);\n</code></pre>"},{"location":"ch02-06-control-flow/#for","title":"for","text":"<p><code>for</code> \u306f\u30eb\u30fc\u30d7\u3059\u308b\u305f\u3073\u306b\u5909\u5316\u3059\u308b\u5909\u6570\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>for (int i = 0; i &lt; 10; ++i) {\nstd::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n</code></pre> <p><code>i</code> \u306f\u30eb\u30fc\u30d7\u3059\u308b\u305f\u3073\u306b <code>0, 1, 2, ..., 9</code> \u3068\u5024\u304c\u5909\u5316\u3057\u7d9a\u3051\u307e\u3059\u3002 <code>for (int i = 0; i &lt; 10; ++i)</code> \u3068\u3044\u3046\u306e\u306f <code>i</code> \u306b <code>0</code> \u3092\u8a2d\u5b9a\u3057\u3066 <code>i &lt; 10</code> \u3092\u6e80\u305f\u3059\u307e\u3067 <code>i</code> \u3092 <code>+1</code> \u3057\u306a\u304c\u3089\u30eb\u30fc\u30d7\u3092\u7d99\u7d9a\u3059\u308b\u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>for</code> \u306f\u3053\u306e\u66f8\u304d\u65b9\u4ee5\u5916\u306b <code>\u7bc4\u56f2 for</code> \u3068\u3044\u3046\u66f8\u304d\u65b9\u3082\u3042\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306f 3.9. \u7bc4\u56f2 for \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch02-06-control-flow/#_3","title":"\u30eb\u30fc\u30d7\u51e6\u7406\u306e\u4e2d\u65ad","text":"<p>\u30eb\u30fc\u30d7\u6587 <code>while</code>\u3001 <code>do-while</code>\u3001 <code>for</code> \u306e\u30eb\u30fc\u30d7\u51e6\u7406\u306f <code>break</code> \u307e\u305f\u306f <code>continue</code> \u3067\u4e2d\u65ad\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ch02-06-control-flow/#break","title":"break","text":"<p>\u73fe\u5728\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u4e2d\u65ad\u3057\u3066\u30eb\u30fc\u30d7\u6587\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <pre><code>int x = 5;\n\nwhile (true) {\nx += x - 3;\n\nstd::cout &lt;&lt; x &lt;&lt; std::endl;\n\nif (x % 5 == 0) {\nbreak;  // while \u6587\u3092\u629c\u3051\u308b\n}\n}\n</code></pre> <p>\u30eb\u30fc\u30d7\u6587\u304c\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u6700\u3082\u5185\u5074\u306b\u3042\u308b\u6587\u306e\u307f\u304c\u5bfe\u8c61\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>for (int i = 0; i &lt; 3; ++i) {\nfor (int j = 0; j &lt; 3; ++j) {\nif (i == j) {\nbreak;  // j \u306e\u30eb\u30fc\u30d7\u6587\u3092\u629c\u3051\u308b\n}\n\nstd::cout &lt;&lt; i &lt;&lt; \",\" &lt;&lt; j &lt;&lt; std::endl;\n}\n}\n</code></pre>"},{"location":"ch02-06-control-flow/#continue","title":"continue","text":"<p>\u73fe\u5728\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u4e2d\u65ad\u3057\u3066\u3001\u6b21\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002</p> <pre><code>for (int i = 0; i &lt; 10; ++i) {\nif (i == 5) {\ncontinue;  // 5 \u3060\u3051\u30b9\u30ad\u30c3\u30d7\n}\n\nstd::cout &lt;&lt; i &lt;&lt; std::endl;\n}\n</code></pre> <p>\u30eb\u30fc\u30d7\u6587\u304c\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u6700\u3082\u5185\u5074\u306b\u3042\u308b\u6587\u306e\u307f\u304c\u5bfe\u8c61\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>for (int i = 0; i &lt; 3; ++i) {\nfor (int j = 0; j &lt; 3; ++j) {\nif (i == j) {\ncontinue;  // j \u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\n}\n\nstd::cout &lt;&lt; i &lt;&lt; \",\" &lt;&lt; j &lt;&lt; std::endl;\n}\n}\n</code></pre> <p><code>contiune</code> \u3067\u306f\u6b21\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u3001 <code>do-while</code> \u3067\u306f\u5148\u982d\u306b\u623b\u308b\u306e\u3067\u306f\u306a\u304f\u672b\u5c3e\u3078\u79fb\u52d5\u3059\u308b\u52d5\u4f5c\u3068\u306a\u308a\u307e\u3059\u3002</p> <pre><code>do {\nstd::cout &lt;&lt; \"done\" &lt;&lt; std::endl;\ncontinue;  // \u30eb\u30fc\u30d7\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7 (\u5148\u982d\u306b\u623b\u308b\u52d5\u4f5c\u306a\u3089\u7121\u9650\u30eb\u30fc\u30d7\u3068\u306a\u308b)\n\nstd::cout &lt;&lt; \"never reached\" &lt;&lt; std::endl;  // \u5b9f\u884c\u3055\u308c\u306a\u3044\n} while (false);  // \u6761\u4ef6\u304c false \u3067\u3042\u308b\u305f\u30811\u56de\u76ee\u3067\u7d42\u4e86\n</code></pre>"},{"location":"ch02-07-operators/","title":"\u6f14\u7b97\u5b50","text":"<p>\u7b97\u8853\u6f14\u7b97\u5b50\u3092\u4e2d\u5fc3\u306b\u3001C++ \u3067\u5229\u7528\u3067\u304d\u308b\u6f14\u7b97\u5b50\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u672c\u9805\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u306a\u3044\u6f14\u7b97\u5b50\u306b\u3064\u3044\u3066\u306f \u5f0f - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch02-07-operators/#_2","title":"\u56db\u5247\u6f14\u7b97\u3068\u5270\u4f59","text":"<p>\u57fa\u672c\u7684\u306a\u6f14\u7b97\u306f\u6b21\u306e\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3053\u3068\u3067\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>x + y;  // \u52a0\u7b97\nx - y;  // \u6e1b\u7b97\nx * y;  // \u4e57\u7b97\nx / y;  // \u9664\u7b97\nx % y;  // \u5270\u4f59\n</code></pre> <p><code>0</code> \u3067\u9664\u7b97(\u5270\u4f59)\u3092\u884c\u3046\u3068\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u306a\u308b\u305f\u3081\u3001\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u30bc\u30ed\u9664\u7b97</p> <pre><code>int div = 100 / 0; // \u5b9f\u884c\u6642\u30a8\u30e9\u30fc\nint mod = 100 % 0; // \u5b9f\u884c\u6642\u30a8\u30e9\u30fc\n</code></pre> <p>\u6f14\u7b97\u306e\u5bfe\u8c61\u3068\u306a\u308b\u3044\u305a\u308c\u304b\u306e\u5024\u304c <code>double</code> ( <code>float</code> )\u306e\u5834\u5408\u3001 \u4ed6\u65b9\u306e\u5024\u3082 <code>double</code> ( <code>float</code> ) \u3068\u3057\u3066\u5909\u63db\u3055\u308c\u305f\u4e0a\u3067\u6f14\u7b97\u304c\u884c\u308f\u308c\u307e\u3059\u3002</p> <pre><code>int ix = 100;\nint iy = 50;\ndouble dx = 100.0;\ndouble dy = 50.0;\n\nauto a = ix / iy;  // int = int / int\nauto b = ix / dy;  // double = double(int\u304b\u3089\u5909\u63db) / double\nauto c = dx / iy;  // double = double / double(int\u304b\u3089\u5909\u63db)\nauto d = dx / dy;  // double = double / double\n</code></pre>"},{"location":"ch02-07-operators/#_3","title":"\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8/\u30c7\u30af\u30ea\u30e1\u30f3\u30c8","text":"<pre><code>++x;  // \u524d\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\nx++;  // \u5f8c\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n--x;  // \u524d\u7f6e\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\nx--;  // \u5f8c\u7f6e\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\n</code></pre> <p>\u524d\u7f6e\u306e\u5834\u5408\u306f\u3001\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8/\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u306e\u6f14\u7b97\u304c\u5148\u306b\u884c\u308f\u308c\u307e\u3059\u3002</p> <pre><code>int a = 5;\nint b = 0;\n\nb = ++a;  // a\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u3066\u304b\u3089\u3001b\u306b\u4ee3\u5165\u3059\u308b\nstd::cout &lt;&lt; a &lt;&lt; std::endl;  // 6\nstd::cout &lt;&lt; b &lt;&lt; std::endl;  // 6\n</code></pre> <p>\u5bfe\u3057\u3066\u3001\u5f8c\u7f6e\u306e\u5834\u5408\u306f\u3001\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8/\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u306e\u6f14\u7b97\u4ee5\u5916\u306e\u51e6\u7406\u304c\u5148\u306b\u884c\u308f\u308c\u307e\u3059\u3002</p> <pre><code>int a = 5;\nint b = 0;\n\nb = a++;  // a\u3092b\u306b\u4ee3\u5165\u3057\u3066\u304b\u3089\u3001a\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\nstd::cout &lt;&lt; a &lt;&lt; std::endl;  // 6\nstd::cout &lt;&lt; b &lt;&lt; std::endl;  // 5\n</code></pre> <p>\u4f7f\u7528\u3059\u308b\u72b6\u6cc1\u306b\u3082\u4f9d\u308a\u307e\u3059\u304c\u3001 \u5f8c\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8/\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3088\u308a\u3082\u524d\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8/\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u306e\u307b\u3046\u304c\u52b9\u7387\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch02-07-operators/#_4","title":"\u30d3\u30c3\u30c8\u306e\u6f14\u7b97","text":"<p>\u30d3\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u6f14\u7b97\u306f\u6b21\u306e\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3053\u3068\u3067\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>~x      // \u5426\u5b9a\nx &lt;&lt; y  // \u5de6\u30b7\u30d5\u30c8\nx &gt;&gt; b  // \u53f3\u30b7\u30d5\u30c8\nx &amp; y   // \u8ad6\u7406\u7a4d\nx | y   // \u8ad6\u7406\u548c\nx ^ y   // \u6392\u4ed6\u7684\u8ad6\u7406\u548c\n</code></pre> <p><code>std::bitset</code> \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30d3\u30c3\u30c8\u5217(2\u9032\u6570)\u3067\u306e\u8868\u8a18\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;bitset&gt;\n#include &lt;iostream&gt;\n\nauto bits_a = std::bitset&lt;8&gt;(\"00001111\");  // 15\u30928\u30d3\u30c3\u30c8\u3067\u8868\u3059: 00001111\nstd::cout &lt;&lt; ~bits_a &lt;&lt; std::endl;         // \u5426\u5b9a: 11110000\nstd::cout &lt;&lt; (bits_a &lt;&lt; 2) &lt;&lt; std::endl;   // \u5de6\u306b2\u30b7\u30d5\u30c8: 00111100\nstd::cout &lt;&lt; (bits_a &gt;&gt; 2) &lt;&lt; std::endl;   // \u53f3\u306b2\u30b7\u30d5\u30c8: 00000011\n\nauto bits_b = std::bitset&lt;8&gt;(\"00111100\");     // 60\u30928\u30d3\u30c3\u30c8\u3067\u8868\u3059: 00111100\nstd::cout &lt;&lt; (bits_a &amp; bits_b) &lt;&lt; std::endl;  // \u8ad6\u7406\u7a4d: 00001100\nstd::cout &lt;&lt; (bits_a | bits_b) &lt;&lt; std::endl;  // \u8ad6\u7406\u548c: 00111111\nstd::cout &lt;&lt; (bits_a ^ bits_b) &lt;&lt; std::endl;  // \u6392\u4ed6\u7684\u8ad6\u7406\u548c: 00110011\n</code></pre> <p>\u6570\u5024\u578b\u3067\u3082\u30d3\u30c3\u30c8\u6f14\u7b97\u306f\u884c\u306a\u3048\u307e\u3059\u3002 \u30d3\u30c3\u30c8\u3092\u53d6\u308a\u6271\u3046\u969b\u306f\u3001 <code>unsigned</code> \u304c\u4ed8\u3044\u305f\u7b26\u53f7\u306a\u3057\u6574\u6570\u578b\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <pre><code>unsigned int a = 0x0000000f;            // 15\nstd::cout &lt;&lt; std::showbase &lt;&lt; std::hex; // \u57fa\u6570\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u51fa\u529b + 16\u9032\u6cd5\u3067\u51fa\u529b\nstd::cout &lt;&lt; ~a &lt;&lt; std::endl;           // 0xfffffff0\nstd::cout &lt;&lt; (a &lt;&lt; 2) &lt;&lt; std::endl;     // 0x3c\nstd::cout &lt;&lt; (a &gt;&gt; 2) &lt;&lt; std::endl;     // 0x3\n\nunsigned int b = 0x0000003c;        // 60\nstd::cout &lt;&lt; (a &amp; b) &lt;&lt; std::endl;  // 0xc\nstd::cout &lt;&lt; (a | b) &lt;&lt; std::endl;  // 0x3f\nstd::cout &lt;&lt; (a ^ b) &lt;&lt; std::endl;  // 0x33\n</code></pre> \u30d3\u30c3\u30c8\u6f14\u7b97\u3067\u7b26\u53f7\u3042\u308a\u6574\u6570\u578b\u3092\u907f\u3051\u308b\u7406\u7531 <p>\u7b26\u53f7\u3042\u308a\u6574\u6570\u578b\u306e\u30b7\u30d5\u30c8\u6f14\u7b97\u306e\u52d5\u4f5c\u306f\u8a00\u8a9e\u4ed5\u69d8\u3067\u672a\u5b9a\u7fa9\u3084\u51e6\u7406\u7cfb\u5b9a\u7fa9\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u308c\u3089\u3092\u8003\u616e\u3057\u306a\u3044\u3067\u6e08\u3080\u3088\u3046\u306b\u3001\u30d3\u30c3\u30c8\u6f14\u7b97\u3067\u306f\u7b26\u53f7\u306a\u3057\u6574\u6570\u578b\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <pre><code>// 2\u306e\u88dc\u6570\u8868\u73fe\u306e\u5834\u5408\u306e\u4f8b\n\n// 0\u4ee5\u4e0a\u306e\u6570\u5024\u306e\u5de6\u30b7\u30d5\u30c8\nint8_t a1 = 0x40;        // 01000000\nint8_t s11 = (a1 &lt;&lt; 1);  // \u672a\u5b9a\u7fa9 (C++14 \u4ee5\u4e0a\u3067\u306f 10000000)\nint8_t s12 = (a1 &lt;&lt; 2);  // \u672a\u5b9a\u7fa9 (C++20 \u4ee5\u4e0a\u3067\u306f 00000000)\n\n// 0\u672a\u6e80\u306e\u6570\u5024\u306e\u5de6\u30b7\u30d5\u30c8\nint8_t a2 = 0x80;       // 10000000\nint8_t s2 = (a2 &lt;&lt; 1);  // \u672a\u5b9a\u7fa9 (C++20 \u4ee5\u4e0a\u3067\u306f 00000000)\n\n// 0\u4ee5\u4e0a\u306e\u6570\u5024\u306e\u53f3\u30b7\u30d5\u30c8\nint8_t a3 = 0x41;       // 01000000\nint8_t s3 = (a3 &gt;&gt; 1);  // 00100000\n\n// 0\u672a\u6e80\u306e\u6570\u5024\u306e\u53f3\u30b7\u30d5\u30c8\nint8_t a4 = 0x80;       // 10000000\nint8_t s4 = (a4 &gt;&gt; 1);  // \u51e6\u7406\u7cfb\u5b9a\u7fa9 (C++20 \u4ee5\u4e0a\u3067\u306f 11000000)\n</code></pre> <p>\u8a73\u7d30\u306f \u7b97\u8853\u6f14\u7b97\u5b50 - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch02-07-operators/#_5","title":"\u8907\u5408\u4ee3\u5165","text":"<p>\u7b97\u8853\u6f14\u7b97\u5b50\u3068\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u7b97\u8853\u3068\u4ee3\u5165\u3092\u540c\u6642\u306b\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>a += b   // a = a + b \u3068\u540c\u3058\na -= b   // a = a - b\na *= b   // a = a * b\na /= b   // a = a / b\na %= b   // a = a % b\na &amp;= b   // a = a &amp; b\na |= b   // a = a | b\na ^= b   // a = a ^ b\na &lt;&lt;= b  // a = a &lt;&lt; b\na &gt;&gt;= b  // a = a &gt;&gt; b\n</code></pre> <p>\u4ee3\u5165\u6f14\u7b97\u5b50\u306f\u7b97\u8853\u6f14\u7b97\u5b50\u3088\u308a\u3082\u5f8c\u306b\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 \u8907\u5408\u4ee3\u5165\u3082\u3001\u4ee3\u5165\u6f14\u7b97\u5b50\u3068\u540c\u69d8\u306b\u7b97\u8853\u6f14\u7b97\u5b50\u3088\u308a\u3082\u5f8c\u306b\u89e3\u91c8\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int x = 2;\nx *= 4 + 3;\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // 14\n\nint y = 2;\ny = y * 4 + 3;\nstd::cout &lt;&lt; y &lt;&lt; std::endl;  // 11\n</code></pre> <p>\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d</p> <p>\u6f14\u7b97\u5b50\u3054\u3068\u306b\u89e3\u91c8\u3055\u308c\u308b\u512a\u5148\u9806\u4f4d\u306f\u6c7a\u307e\u3063\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306f C++\u306e\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch02-08-functions/","title":"\u95a2\u6570","text":"<p>C++\u3067\u306e\u95a2\u6570\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002</p> <p>\u95a2\u6570<code>HelloWorld()</code>\u3092\u4f5c\u6210\u3057\u3001<code>main()</code>\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p>main.cc</p> <pre><code>#include &lt;iostream&gt;\n\nvoid HelloWorld(int n) {\nfor (int i = 0; i &lt; n; ++i) {\nstd::cout &lt;&lt; \"[\" &lt;&lt; i &lt;&lt; \"] \" &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\n}\nint main() {\nHelloWorld(10);\nreturn 0;\n}\n</code></pre> <p>\u3053\u3053\u3067\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u3001\u95a2\u6570<code>HelloWorld()</code>\u304c\u3001\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b10\u884c\u76ee\u3088\u308a\u4e0a\u306e\u884c\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u70b9\u3067\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4e0a\u304b\u3089\u9806\u306b\u89e3\u91c8\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u5bfe\u3057\u3066<code>HelloWorld()</code>\u304c\u4f55\u8005\u306a\u306e\u304b\u3092\u4e8b\u524d\u306b\u6559\u3048\u308b\u3053\u3068\u3067\u3001<code>HelloWorld()</code>\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u884c\u306a\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u8a66\u3057\u306b<code>HelloWorld()</code>\u3092<code>main()</code>\u3088\u308a\u3082\u4e0b\u306e\u884c\u306b\u8a18\u8ff0\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3057\u307e\u3059\u3002</p> <p>main.cc</p> <pre><code>#include &lt;iostream&gt;\n\nint main() {\nHelloWorld(10);  // \u3053\u3053\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\nreturn 0;\n}\n\nvoid HelloWorld(int n) {\nfor (int i = 0; i &lt; n; ++i) {\nstd::cout &lt;&lt; \"[\" &lt;&lt; i &lt;&lt; \"] \" &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\n}\n</code></pre> <p>4\u884c\u76ee\u306e\u6642\u70b9\u3067\u306f\u3001<code>HelloWorld()</code>\u304c\u4f55\u8005\u306a\u306e\u304b\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u306f\u7406\u89e3\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002</p>"},{"location":"ch02-08-functions/#_2","title":"\u95a2\u6570\u306e\u524d\u65b9\u5ba3\u8a00","text":"<p>\u95a2\u6570\u306e\u5ba3\u8a00\u306e\u307f\u3092\u547c\u3073\u51fa\u3057\u7b87\u6240\u3088\u308a\u3082\u4e0a\u306e\u884c\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u6570\u306e\u5b58\u5728\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6559\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p>main.cc</p> <pre><code>#include &lt;iostream&gt;\n\nvoid HelloWorld(int n);  // \u524d\u65b9\u5ba3\u8a00\nint main() {\nHelloWorld(10);\n\nreturn 0;\n}\n\nvoid HelloWorld(int n) {\nfor (int i = 0; i &lt; n; ++i) {\nstd::cout &lt;&lt; \"[\" &lt;&lt; i &lt;&lt; \"] \" &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\n}\n</code></pre> <p><code>HelloWorld()</code>\u306e\u672c\u4f53\u306f<code>main()</code>\u306e\u547c\u3073\u51fa\u3057\u7b87\u6240\u3088\u308a\u3082\u4e0b\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u524d\u65b9\u5ba3\u8a00\u304c\u3042\u308b\u3053\u3068\u3067\u554f\u984c\u306a\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u3059\u3002</p> <p>\u5ba3\u8a00\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f\u30014.1. \u5ba3\u8a00\u3068\u5b9a\u7fa9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch02-08-functions/#main","title":"main\u95a2\u6570","text":"<p>\u3053\u308c\u307e\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u5ea6\u3005\u73fe\u308c\u305f<code>main()</code>\u3092main\u95a2\u6570\u3068\u547c\u3073\u307e\u3059\u3002</p> <p>C++\u3067\u751f\u6210\u3055\u308c\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001main\u95a2\u6570\u3092\u8d77\u70b9\u306b\u51e6\u7406\u304c\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"ch02-08-functions/#_3","title":"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570","text":"<p>main\u95a2\u6570\u306b\u3082\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002main\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\u5f15\u6570\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3068\u547c\u3073\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u7d9a\u3051\u3066\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code># \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u540d &lt;\u5f15\u65701&gt; &lt;\u5f15\u65702&gt; &lt;\u5f15\u65703&gt; ...\n$ ./a.exe XXX YYY ZZZ\n</code></pre> <p>\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u5834\u5408\u3001main\u95a2\u6570\u306e\u5f15\u6570\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>int main(int argc, char* argv[]);\n</code></pre> <ul> <li><code>int argc</code>: \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u500b\u6570\u3092\u8868\u3059</li> <li><code>char* argv[]</code>: \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u304c\u683c\u7d0d\u3055\u308c\u308b</li> </ul> <p>main.cc</p> <pre><code>#include &lt;iostream&gt;\n\nint main(int argc, char* argv[]) {\nfor (int i = 0; i &lt; argc; ++i) {\nstd::cout &lt;&lt; \"argv[\" &lt;&lt; i &lt;&lt; \"]: \" &lt;&lt; argv[i] &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre> <pre><code># \u5b9f\u884c\u7d50\u679c\n$ ./a.exe Hello World!\nargv[0]: ./a.exe\nargv[1]: Hello\nargv[2]: World!\n</code></pre>"},{"location":"ch02-08-functions/#_4","title":"\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9","text":"<p>\u95a2\u6570\u306e\u5f15\u6570\u306e\u500b\u6570\u3084\u578b\u304c\u7570\u306a\u308b\u5834\u5408\u3001\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u3053\u308c\u3092\uff08\u95a2\u6570\u306e\uff09\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u547c\u3073\u307e\u3059\u3002\u5f15\u6570\u306e\u500b\u6570\u3084\u578b\u306e\u60c5\u5831\u3092\u5143\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>main.cc</p> <pre><code>#include &lt;iostream&gt;\n\nvoid Print(int x) {\nstd::cout &lt;&lt; \"int: \" &lt;&lt; x &lt;&lt; std::endl;\n}\n\nvoid Print(double x) {\nstd::cout &lt;&lt; \"double: \" &lt;&lt; x &lt;&lt; std::endl;\n}\n\nint main() {\nPrint(2);\nPrint(2.1);\n\nreturn 0;\n}\n</code></pre> <pre><code># \u5b9f\u884c\u7d50\u679c\n$ ./a.exe\nint: 2\ndouble: 2.1\n</code></pre>"},{"location":"ch02-08-functions/#_5","title":"\u95a2\u6570\u30dd\u30a4\u30f3\u30bf","text":"<p>\u95a2\u6570\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>// \u623b\u308a\u5024\u306e\u578b (*\u5909\u6570\u540d)(\u5f15\u6570\u306e\u578b);\nint (*f1)(double);    // double \u3092\u5f15\u6570\u3068\u3057\u3066 int \u3092\u8fd4\u3059\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf f1\nint (*f2)(int, int);  // 2\u3064\u306e int \u3092\u5f15\u6570\u3068\u3057\u3066 int \u3092\u8fd4\u3059\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf f2\n</code></pre> <p>\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u306f\u3001\u623b\u308a\u5024\u306e\u578b\u3068\u5f15\u6570\u306e\u578b\u30fb\u6570\u30fb\u9806\u756a\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u95a2\u6570\u306e\u30a2\u30c9\u30ec\u30b9\u304c\u4ee3\u5165\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint Add(int x, int y) {\nreturn x + y;\n}\n\nint main() {\nint (*fp)(int, int) = Add;  // \u95a2\u6570 Add \u306e\u30a2\u30c9\u30ec\u30b9\u3092\u4fdd\u6301\u3059\u308b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf fp\nint result = fp(3, 5);      // \u95a2\u6570\u30dd\u30a4\u30f3\u30bf fp \u3092\u4ecb\u3057\u3066\u95a2\u6570 Add \u304c\u5b9f\u884c\u3055\u308c\u308b\nstd::cout &lt;&lt; result &lt;&lt; std::endl;  // 8\n\nreturn 0;\n}\n</code></pre> <p>\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u969b\u306f\u3001 <code>auto</code> \u3092\u4f7f\u3046\u3053\u3068\u3067\u8907\u96d1\u306a\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u578b\u3092\u66f8\u304f\u5fc5\u8981\u304c\u7121\u304f\u306a\u308a\u7c21\u6f54\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>auto fp = Add;\n</code></pre>"},{"location":"ch02-09-lambda-expressions/","title":"\u30e9\u30e0\u30c0\u5f0f","text":"<p>\u30e9\u30e0\u30c0\u5f0f\u306f\u3001\u7c21\u6f54\u306b\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u5f0f\u3067\u3059\u3002 \u30e9\u30e0\u30c0\u5f0f\u3067\u751f\u6210\u3055\u308c\u308b\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f <code>auto</code> \u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p>\u30e9\u30e0\u30c0\u5f0f\u306e\u69cb\u6587\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>// auto \u5909\u6570\u540d = [ \u30ad\u30e3\u30d7\u30c1\u30e3 ]( \u5f15\u6570\u30ea\u30b9\u30c8 ) -&gt; \u623b\u308a\u5024\u306e\u578b { \u51e6\u7406\u5185\u5bb9 };\nauto func = [](int a, int b) -&gt; int { return a + b; };  // int \u30922\u3064\u53d7\u3051\u53d6\u308a\u3001\u8db3\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u30e9\u30e0\u30c0\u5f0f\n\nint result = func(4, 6);\nstd::cout &lt;&lt; result &lt;&lt; std::endl;  // 10\n</code></pre>"},{"location":"ch02-09-lambda-expressions/#_2","title":"\u30ad\u30e3\u30d7\u30c1\u30e3","text":"<p>\u30e9\u30e0\u30c0\u5f0f\u306e\u5916\u306b\u3042\u308b\u5909\u6570\u3092\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001 \u30e9\u30e0\u30c0\u5f0f\u5148\u982d\u306e <code>[]</code> \u5185\u3067\u30ad\u30e3\u30d7\u30c1\u30e3\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u30ad\u30e3\u30d7\u30c1\u30e3\u306b\u306f\u3001\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u3068\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\u306e2\u7a2e\u985e\u304c\u5b58\u5728\u3057\u307e\u3059\u3002</p> \u8a18\u8ff0\u4f8b \u5185\u5bb9 <code>[=]</code> \u30e9\u30e0\u30c0\u5f0f\u5b9a\u7fa9\u6642\u306b\u5b58\u5728\u3059\u308b\u5168\u3066\u306e\u5909\u6570\u3092\u30b3\u30d4\u30fc\u3057\u3066\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3046 <code>[&amp;]</code> \u30e9\u30e0\u30c0\u5f0f\u5b9a\u7fa9\u6642\u306b\u5b58\u5728\u3059\u308b\u5168\u3066\u306e\u5909\u6570\u3092\u53c2\u7167\u3057\u3066\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3046 <code>[a]</code> \u5909\u6570 <code>a</code> \u3092\u30b3\u30d4\u30fc\u3057\u3066\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3046 <code>[&amp;a]</code> \u5909\u6570 <code>a</code> \u3092\u53c2\u7167\u3057\u3066\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3046 <code>[&amp;a, b]</code> \u5909\u6570 <code>a</code> \u306f\u53c2\u7167\u3057\u3001\u5909\u6570 <code>b</code> \u306f\u30b3\u30d4\u30fc\u3057\u3066\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3046 <code>[=, &amp;a]</code> \u5909\u6570 <code>a</code> \u306f\u53c2\u7167\u3057\u3001\u305d\u308c\u4ee5\u5916\u306f\u30b3\u30d4\u30fc\u3057\u3066\u30e9\u30e0\u30c0\u5f0f\u306e\u4e2d\u3067\u4f7f\u3046 <pre><code>int init = 5;\n\n// \u30ad\u30e3\u30d7\u30c1\u30e3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067 {} \u5185\u3067\u5909\u6570 init \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\nauto f = [init](int a, int b) { return init + a * b; };   // \u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\nauto g = [&amp;init](int a, int b) { return init + a * b; };  // \u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\n\ninit = 0;\n\n// \u3010\u30b3\u30d4\u30fc\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u5834\u5408\u3011\n//    \u30e9\u30e0\u30c0\u5f0f\u306e\u5b9a\u7fa9\u6642\u70b9\u3067 init \u304c\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30e9\u30e0\u30c0\u5f0f\u5185\u306e init \u306f 5\nint result_copy = f(2, 4);\nstd::cout &lt;&lt; result_copy &lt;&lt; std::endl;  // 13\n\n// \u3010\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u5834\u5408\u3011\n//    \u30e9\u30e0\u30c0\u5f0f\u5b9f\u884c\u6642\u306e init \u306e\u5024\u304c\u53c2\u7167\u3055\u308c\u308b\u306e\u3067\u3001\u30e9\u30e0\u30c0\u5f0f\u5185\u306e init \u306f 0\nint result_ref = g(2, 4);\nstd::cout &lt;&lt; result_ref &lt;&lt; std::endl;   // 8\n</code></pre>"},{"location":"ch02-09-lambda-expressions/#_3","title":"\u5f15\u6570\u30ea\u30b9\u30c8","text":"<p><code>( \u5f15\u6570\u30ea\u30b9\u30c8 )</code> \u306f\u3001\u901a\u5e38\u306e\u95a2\u6570\u3068\u540c\u3058\u3088\u3046\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>auto func1 = [](int x) -&gt; int { return x * x; };  // int \u3092\u5f15\u6570\u3068\u3059\u308b\nauto func2 = []() -&gt; int { return 400; };         // \u5f15\u6570\u306a\u3057\nauto func3 = [] { return 400; };                  // \u623b\u308a\u5024\u306e\u578b\u306e\u8a18\u8ff0\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u3001 () \u3054\u3068\u7701\u7565\u53ef\u80fd\n</code></pre>"},{"location":"ch02-09-lambda-expressions/#_4","title":"\u623b\u308a\u5024\u306e\u578b\u306e\u7701\u7565","text":"<p><code>-&gt; \u623b\u308a\u5024\u306e\u578b</code> \u306f\u3001 \u30e9\u30e0\u30c0\u5f0f\u5185\u306e\u578b\u63a8\u8ad6\u306b\u4efb\u305b\u308b\u5834\u5408\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>auto func = [](int a, int b) { return a + b; };  // a, b \u306f\u5171\u306b int \u306a\u306e\u3067\u3001\u623b\u308a\u5024\u3082 int \u3068\u63a8\u8ad6\u3055\u308c\u308b\n</code></pre>"},{"location":"ch02-09-lambda-expressions/#_5","title":"\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3078\u306e\u5909\u63db","text":"<p>\u30ad\u30e3\u30d7\u30c1\u30e3\u3092\u6301\u305f\u306a\u3044\u30e9\u30e0\u30c0\u5f0f\u3067\u3042\u308c\u3070\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u6697\u9ed9\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>int (*fp)(int, int) = [](int x, int y) { return x + y; };\n</code></pre>"},{"location":"ch02-09-lambda-expressions/#stdfunction","title":"<code>std::function</code>","text":"<p><code>std::function</code> \u3067\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3084\u30e9\u30e0\u30c0\u5f0f\uff08\u30ad\u30e3\u30d7\u30c1\u30e3\u3092\u6301\u3064\u30e9\u30e0\u30c0\u5f0f\u3082\u542b\u3080\uff09\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 <code>std::function</code> \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u69cb\u6587\u304c\u7c21\u6f54\u306b\u306a\u308b\u3068\u3044\u3046\u5229\u70b9\u3082\u3042\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;functional&gt;\n\nint Add(int x, int y) {\nreturn x + y;\n}\n\nint main() {\nstd::function&lt;int(int, int)&gt; f = Add;  // std::function&lt;\u623b\u308a\u5024\u306e\u578b(\u5f15\u6570\u306e\u578b)&gt; \u5909\u6570\u540d\nint result = f(3, 5);                  // f \u3092\u4ecb\u3057\u3066\u95a2\u6570 Add \u304c\u5b9f\u884c\u3055\u308c\u308b\nstd::cout &lt;&lt; result &lt;&lt; std::endl;      // 8\n\nf = [](int x, int y) { return x * y; };  // \u30e9\u30e0\u30c0\u5f0f\u3082\u4fdd\u6301\u53ef\u80fd\nstd::cout &lt;&lt; f(4, 7) &lt;&lt; std::endl;       // 28\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch03-01-arrays/","title":"\u914d\u5217","text":"<p>\u914d\u5217\u306f\u540c\u4e00\u306e\u578b\u3092\u6301\u3064\u8907\u6570\u306e\u5024\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u578b\u3067\u3059\u3002 \u4f7f\u3044\u65b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002</p> <pre><code>int x[5] = {0, 1, 2, 3, 4};\n</code></pre> <p>\u3053\u308c\u3067 5 \u8981\u7d20\u306e\u5024\u3092\u6301\u3064\u914d\u5217\u304c\u5ba3\u8a00\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ch03-01-arrays/#_2","title":"\u8981\u7d20\u53c2\u7167","text":"<p>\u914d\u5217\u306e\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u914d\u5217\u306e\u4f55\u756a\u76ee\u306e\u8981\u7d20\u306a\u306e\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u6570\u3048\u306e\u59cb\u307e\u308a\u306f 0 \u304b\u3089\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int x[5] = {0, 1, 2, 3, 4};\nint y = x[2];  // 2\n</code></pre>"},{"location":"ch03-01-arrays/#_3","title":"\u521d\u671f\u5316\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3","text":"<p>\u914d\u5217\u306e\u5ba3\u8a00\u3068\u540c\u6642\u306b\u8981\u7d20\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u8981\u7d20\u6570\u306e\u6307\u5b9a\u304c\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int x[] = {0, 1, 2, 3, 4, 5};\n</code></pre> <p>\u914d\u5217\u306e\u5ba3\u8a00\u5f8c\u306b\u8981\u7d20\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u8981\u7d20\u6570\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code>int x[5];\n\nx[0] = 0;\nx[1] = 1;\nx[2] = 2;\nx[3] = 3;\nx[4] = 4;\n</code></pre> <p>\u8981\u7d20\u6570\u306b\u6bd4\u3079\u3066\u8a2d\u5b9a\u3057\u305f\u8981\u7d20\u306e\u500b\u6570\u304c\u5c11\u306a\u3044\u5834\u5408\u306f\u6b8b\u308a\u306e\u8981\u7d20\u304c\u30bc\u30ed\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int x[5] = {0, 1, 2};  // x[3], x[4] \u306f\u30bc\u30ed\u3067\u521d\u671f\u5316\n</code></pre> <p>\u8981\u7d20\u3092\u5168\u304f\u6307\u5b9a\u3057\u306a\u3044\u3068\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u30bc\u30ed\u3067\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int x[5] = {};\n</code></pre> <p>\u3053\u308c\u304c\u4e00\u756a\u624b\u8efd\u306a\u521d\u671f\u5316\u65b9\u6cd5\u3067\u3059\u3002</p>"},{"location":"ch03-01-arrays/#_4","title":"\u914d\u5217\u3068\u30dd\u30a4\u30f3\u30bf","text":"<p>\u914d\u5217\u306f\u3044\u304f\u3064\u304b\u306e\u4f8b\u5916\u3092\u9664\u3044\u3066\u5e38\u306b\u30dd\u30a4\u30f3\u30bf\u578b\u306b\u6697\u9ed9\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u305f\u3081\u914d\u5217\u3092\u53c2\u7167\u3059\u308b\u6642\u306b\u3001 <code>[]</code> \u3092\u7701\u7565\u3059\u308b\u3068\u3001\u914d\u5217\u306e\u5148\u982d\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 \u5148\u982d\u306e\u30dd\u30a4\u30f3\u30bf\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8db3\u3059\u3053\u3068\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u306b\u5bfe\u5fdc\u3057\u305f\u30dd\u30a4\u30f3\u30bf\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint x[] = {2, 4, 6, 8, 10};\nint* p = x;\nstd::cout &lt;&lt; *p &lt;&lt; std::endl;        // 2\nstd::cout &lt;&lt; *(p + 1) &lt;&lt; std::endl;  // 4\nstd::cout &lt;&lt; *(p + 2) &lt;&lt; std::endl;  // 6\nstd::cout &lt;&lt; *(p + 3) &lt;&lt; std::endl;  // 8\nstd::cout &lt;&lt; *(p + 4) &lt;&lt; std::endl;  // 10\n</code></pre>"},{"location":"ch03-01-arrays/#_5","title":"\u95a2\u6570\u306b\u914d\u5217\u3092\u6e21\u3059","text":"<p>\u914d\u5217\u304c\u30dd\u30a4\u30f3\u30bf\u578b\u306b\u6697\u9ed9\u5909\u63db\u3055\u308c\u308b\u4ed5\u69d8\u304c\u3042\u308b\u3053\u3068\u306b\u52a0\u3048\u3066\u3082\u3046\u4e00\u3064\u6ce8\u610f\u3059\u308b\u3079\u304d\u4ed5\u69d8\u304c\u3042\u308a\u307e\u3059\u3002\u95a2\u6570\u306e\u5f15\u6570\u5ba3\u8a00\u3067\u914d\u5217\u578b\u3092\u3064\u304b\u3046\u3068\u304d\u3001\u30dd\u30a4\u30f3\u30bf\u578b\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067\u3059\u3002\u3064\u307e\u308a\u6b21\u306e\u4f8b\u3067\u306f\u898b\u305f\u76ee\u306b\u53cd\u3057\u3066 <code>PrintArray1</code> \u3068 <code>PrintArray2</code> \u306f\u5b8c\u5168\u306b\u540c\u4e00\u3067\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nvoid PrintArray1(const int x[5]) {\nstatic_assert(sizeof(x)==sizeof(int*), \"\");\nfor (int i = 0; i &lt; 5; ++i) {\nstd::cout &lt;&lt; x[i] &lt;&lt; std::endl;\n}\n}\n\nvoid PrintArray2(const int* x) {\nfor (int i = 0; i &lt; 5; ++i) {\nstd::cout &lt;&lt; x[i] &lt;&lt; std::endl;\n}\n}\n\nint main() {\nint x[5] = {0, 1, 2, 3, 4};\n\nPrintArray1(x);\nPrintArray2(x);\n\nreturn 0;\n}\n</code></pre> <p>\u3064\u307e\u308a\u3001\u95a2\u6570\u306b\u914d\u5217\u3092\u6e21\u3059\u3068\u3044\u3046\u306e\u306f\u914d\u5217\u306e\u5148\u982d\u8981\u7d20\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3059\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002<code>int [5]</code>\u3068\u3044\u3046\u578b\u304c<code>int*</code>\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u914d\u5217\u306e\u8981\u7d20\u6570\u306e\u60c5\u5831\u304c\u6b20\u843d\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u305d\u306e\u305f\u3081\u3001\u95a2\u6570\u306b\u914d\u5217\u3092\u6e21\u3059\u5834\u5408\u306f\u3001\u914d\u5217\u306e\u5148\u982d\u8981\u7d20\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3068\u8981\u7d20\u6570\u3092\u30bb\u30c3\u30c8\u3067\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nvoid PrintArray(const int* x, std::size_t num) {\nfor (std::size_t i = 0; i &lt; num; ++i) {\nstd::cout &lt;&lt; x[i] &lt;&lt; std::endl;\n}\n}\n\nint main() {\nconstexpr std::size_t num = 5;\nint x[num] = {0, 1, 2, 3, 4};\n\nPrintArray(x, num);\n\nreturn 0;\n}\n</code></pre> \u306a\u305c\u95a2\u6570\u306e\u5f15\u6570\u5ba3\u8a00\u3067\u914d\u5217\u578b\u3092\u3064\u304b\u3046\u3068\u304d\u3001\u30dd\u30a4\u30f3\u30bf\u578b\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u4ed5\u69d8\u304c\u3042\u308b\u306e\u304b <p>\u305d\u3082\u305d\u3082\u3053\u306e\u4ed5\u69d8\u306fC\u8a00\u8a9e\u304b\u3089\u53d7\u3051\u7d99\u3044\u3060\u3082\u306e\u3067\u3059\u3002C\u8a00\u8a9e\u306b\u306f\u95a2\u6570\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3082template\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3093\u306a\u306a\u304b\u3067\u4efb\u610f\u306e\u8981\u7d20\u6570\u306e\u914d\u5217\u3092\u6e21\u3059\u3068\u304d\u3053\u306e\u4ed5\u69d8\u304c\u306a\u3044\u3068\u3001\u60f3\u5b9a\u3057\u3046\u308b\u3059\u3079\u3066\u306e\u8981\u7d20\u6570\u306b\u3064\u3044\u3066\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3068\u3066\u3082\u9762\u5012\u306a\u3053\u3068\u3067\u3059\u3002\u307e\u305f\u5f8c\u306b\u5b66\u3076\u52d5\u7684\u78ba\u4fdd\u3055\u308c\u305f\u914d\u5217\u3068\u51e6\u7406\u304c\u5171\u901a\u5316\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>\u914d\u5217\u306e\u8981\u7d20\u6570\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u3068\u3057\u3066C++11\u3088\u308a\u524d\u3067\u306f\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u30de\u30af\u30ed\u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3057\u305f\u304c\u3001C++11\u304b\u3089\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306fC++17\u4ee5\u964d\u3067\u306f <code>std::size</code> \u3068\u3044\u3046\u95a2\u6570\u3068\u3057\u3066\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5b58\u5728\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;cstddef&gt;\ntemplate &lt;class T, std::size_t N&gt;\nconstexpr std::size_t size(const T (&amp;)[N]) noexcept { return N; }\n\nint main() {\nint arr[3];\nstatic_assert(size(arr) == 3, \"\");\n}\n</code></pre>"},{"location":"ch03-01-arrays/#stdarray","title":"std::array","text":"<p>\u3088\u308a\u9ad8\u6a5f\u80fd\u306a\u914d\u5217\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306f <code>std::array</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u305f\u3060\u3057C++11\u3067\u306f\u521d\u671f\u5316\u306e\u6642\u306b\u4e8c\u91cd\u306b\u6ce2\u62ec\u5f27\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code>#include &lt;array&gt;\n\nstd::array&lt;int, 5&gt; x = {{0, 1, 2, 3, 4}};\n//std::array&lt;int, 5&gt; x = {0, 1, 2, 3, 4}; // C++14\uff5e\n</code></pre> <p><code>x</code> \u306f\u8981\u7d20\u6570\u304c 5 \u3067\u3042\u308b\u3088\u3046\u306a <code>int</code> \u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002 <code>std::array</code> \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <code>&lt;array&gt;</code> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u8981\u7d20\u53c2\u7167\u306f\u901a\u5e38\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002</p> <pre><code>x[2] = 10;\n</code></pre> <p><code>x.size()</code> \u3068\u3059\u308b\u3068\u8981\u7d20\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002C++17\u304b\u3089\u306f <code>std::size</code> \u95a2\u6570\u3092\u7528\u3044\u3066\u3082\u8981\u7d20\u6570\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>auto size = x.size();  // 5\n//auto size = std::size(x);  // C++17\uff5e\n</code></pre> <p>\u914d\u5217\u3068\u8981\u7d20\u6570\u3092\u4fdd\u5b58\u3057\u305f\u5909\u6570\u306e2\u3064\u3092\u6301\u3061\u56de\u3059\u5fc5\u8981\u304c\u3067\u3066\u304d\u305f\u3068\u304d\u3001<code>std::array</code> \u3092\u4f7f\u3048\u3070\u305d\u308c\u3089\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u3066\u6271\u3048\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002</p> <p>\u307e\u305f\u3001\u914d\u5217\u3068\u306f\u7570\u306a\u308a <code>std::array</code> \u306f <code>int</code> \u578b\u306a\u3069\u3068\u540c\u3058\u611f\u899a\u3067\u6271\u3048\u308b\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u914d\u5217\u306e\u30b3\u30d4\u30fc\u3092\u4f8b\u306b\u4e0a\u3052\u308b\u3068\u5358\u306a\u308b\u4ee3\u5165\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u3067\u30b3\u30d4\u30fc\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int arr1_1[3] = {};\n//int arr1_2[3] = arr1_1;//NG\nstd::array&lt;int, 3&gt; arr2_1{};\nstd::array&lt;int, 3&gt; arr2_2 = arr2_1;//OK\n</code></pre>"},{"location":"ch03-02-strings/","title":"\u6587\u5b57\u5217","text":"<p>\u6587\u5b57\u5217\u3092\u6271\u3046\u306b\u306f <code>std::string</code> \u3068\u3044\u3046\u578b\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;string&gt;\n\nstd::string s = \"Hello\";\n</code></pre> <p><code>std::string</code> \u306f\u6587\u5b57\u5217\u30c7\u30fc\u30bf\u3092 <code>char</code> \u306e\u914d\u5217\u3068\u3057\u3066\u6271\u3046\u305f\u3081 \u914d\u5217\u306e\u3088\u3046\u306b\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>std::string s = \"Hello\";\n\ns[0];   // 'H'\ns[1];   // 'e'\ns[2];   // 'l'\ns[3];   // 'l'\ns[4];   // 'o'\n</code></pre> <p><code>s.size()</code> \u3068\u3059\u308b\u3068\u6587\u5b57\u5217\u6570\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>s.size();   // 5\n</code></pre> <p>Info</p> <p><code>std::string</code> \u306f\u30d0\u30a4\u30c8\u5217\u3092\u4fdd\u6301\u3057\u3066\u304a\u308a <code>s.size()</code> \u304c\u8fd4\u3059\u5024\u306f\u30d0\u30a4\u30c8\u6570\u3067\u3059\u3002\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u3092\u4fdd\u6301\u3059\u308b\u5834\u5408\u3001<code>s.size()</code> \u304c\u8fd4\u3059\u5024\u306f\u6587\u5b57\u5217\u6570\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002</p>"},{"location":"ch03-03-tuples/","title":"\u30bf\u30d7\u30eb","text":"<p>\u30bf\u30d7\u30eb\u306f\u8907\u6570\u306e\u5024\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u578b\u3067\u3059\u3002 \u914d\u5217\u3068\u4f3c\u305f\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u914d\u5217\u3068\u7570\u306a\u308a\u5404\u8981\u7d20\u306f\u540c\u3058\u578b\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30bf\u30d7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;tuple&gt;\n\nstd::tuple&lt;std::string, int&gt; person { \"Bob\", 20 };\n</code></pre> <p><code>&lt; ... &gt;</code> \u306e\u90e8\u5206\u306b\u5404\u8981\u7d20\u306e\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u8981\u7d20\u6570\u306f\u3044\u304f\u3064\u3067\u3082\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>std::tuple&lt;std::string, int, std::string&gt; person { \"Bob\", 20, \"USA\" };\n</code></pre>"},{"location":"ch03-03-tuples/#_2","title":"\u8981\u7d20\u53c2\u7167","text":"<p>\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u30bf\u30d7\u30eb\u3082\u8981\u7d20\u53c2\u7167\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>std::get&lt;0&gt;(person);    // \"Bob\"\nstd::get&lt;1&gt;(person);    // 20\n</code></pre>"},{"location":"ch03-03-tuples/#_3","title":"\u521d\u671f\u5316\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3","text":"<p>\u30bf\u30d7\u30eb\u306f\u521d\u671f\u5316\u65b9\u6cd5\u306b\u5e7e\u3064\u304b\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>std::tuple&lt;std::string, int&gt; person { \"Bob\", 20 };\nstd::tuple&lt;std::string, int&gt; person(\"Bob\", 20);\nstd::tuple&lt;std::string, int&gt; person = std::make_tuple(\"Bob\", 20);\n</code></pre>"},{"location":"ch03-03-tuples/#stdtie","title":"<code>std::tie()</code>","text":"<p><code>std::tie()</code> \u3068\u3044\u3046\u95a2\u6570\u3092\u4f7f\u3046\u3068\u30bf\u30d7\u30eb\u306e\u8981\u7d20\u3092\u500b\u5225\u306e\u5909\u6570\u306b \u307e\u3068\u3081\u3066\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>std::tuple&lt;std::string, int, std::string&gt; person { \"Bob\", 20, \"USA\" };\n\nstd::string name;\nint age;\nstd::string country;\n\nstd::tie(name, age, country) = person;  // name: \"Bob\", age: 20, country: \"USA\"\n</code></pre>"},{"location":"ch03-04-pairs/","title":"\u30da\u30a2","text":"<p>\u30da\u30a2\u306f2\u3064\u306e\u5024\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u578b\u3067\u3059\u3002 \u8981\u7d20\u6570\u304c2\u3064\u306e\u30bf\u30d7\u30eb\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30da\u30a2\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;utility&gt;\n\nstd::pair&lt;std::string, int&gt; person {\"Bob\", 20};\n</code></pre>"},{"location":"ch03-04-pairs/#_2","title":"\u8981\u7d20\u53c2\u7167","text":"<p>\u30bf\u30d7\u30eb\u3068\u540c\u69d8\u306b\u8981\u7d20\u53c2\u7167\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>std::get&lt;0&gt;(person);    // \"Bob\"\nstd::get&lt;1&gt;(person);    // 20\n</code></pre> <p>\u30da\u30a2\u3067\u306f0\u756a\u76ee\u306e\u8981\u7d20\u3092 <code>first</code>\u3001 1\u756a\u76ee\u306e\u8981\u7d20\u3092 <code>second</code> \u3067\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>person.first;     // \"Bob\"\nperson.second;    // 20\n</code></pre>"},{"location":"ch03-04-pairs/#_3","title":"\u521d\u671f\u5316\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3","text":"<p>\u30bf\u30d7\u30eb\u3068\u540c\u69d8\u306b\u521d\u671f\u5316\u65b9\u6cd5\u306b\u5e7e\u3064\u304b\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>std::pair&lt;std::string, int&gt; person { \"Bob\", 20 };\nstd::pair&lt;std::string, int&gt; person(\"Bob\", 20);\nstd::pair&lt;std::string, int&gt; person = std::make_pair(\"Bob\", 20);\n</code></pre>"},{"location":"ch03-04-pairs/#stdtie","title":"<code>std::tie()</code>","text":"<p><code>std::tie()</code> \u3092\u4f7f\u3046\u3068\u30da\u30a2\u306e\u8981\u7d20\u3092\u500b\u5225\u306e\u5909\u6570\u306b\u307e\u3068\u3081\u3066\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 <code>std::tie()</code> \u3092\u4f7f\u3046\u306b\u306f <code>&lt;tuple&gt;</code> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code>#include &lt;tuple&gt;\n\nstd::pair&lt;std::string, int&gt; person { \"Bob\", 20 };\n\nstd::string name;\nint age;\n\nstd::tie(name, age) = person;  // name: \"Bob\", age: 20\n</code></pre>"},{"location":"ch03-05-vectors/","title":"\u30d9\u30af\u30bf","text":"<p>\u8981\u7d20\u6570\u3092\u5b9f\u884c\u6642\u306b\u5909\u66f4\u3067\u304d\u308b\u914d\u5217\u3092\u6271\u3046\u306b\u306f <code>std::vector</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;vector&gt;\n\nstd::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\n</code></pre> <p><code>x</code> \u306f\u8981\u7d20\u6570\u304c 5 \u3067\u3042\u308b\u3088\u3046\u306a <code>int</code> \u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002 <code>std::vector</code> \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <code>&lt;vector&gt;</code> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u8981\u7d20\u53c2\u7167\u306f\u901a\u5e38\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002</p> <pre><code>x[2] = 10;\n</code></pre> <p><code>x.size()</code> \u3068\u3059\u308b\u3068\u8981\u7d20\u6570\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>auto size = x.size();  // 5\n</code></pre>"},{"location":"ch03-05-vectors/#_2","title":"\u672b\u5c3e\u3078\u8981\u7d20\u8ffd\u52a0","text":"<p><code>x.emplace_back()</code> \u3068\u3059\u308b\u3068\u672b\u5c3e\u3078\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;vector&gt;\n\nstd::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\nauto size1 = x.size();  // 5\n\nx.emplace_back(5);\nauto size2 = x.size();  // 6\n</code></pre> <p><code>emplace_back</code> \u3068 <code>push_back</code></p> <p>C++11 \u3088\u308a\u524d\u306f <code>push_back</code> \u3068\u3044\u3046\u95a2\u6570\u306e\u307f\u304c\u672b\u5c3e\u3078\u306e\u8981\u7d20\u8ffd\u52a0\u3092\u62c5\u3063\u3066\u3044\u307e\u3057\u305f\u3002 C++11 \u3067\u8ffd\u52a0\u3055\u308c\u305f <code>emplace_back</code> \u306f\u8981\u7d20\u578b\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b \u76f4\u63a5\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067 <code>push_back</code> \u3068\u540c\u3058\u304b \u305d\u308c\u4ee5\u4e0a\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5f97\u3089\u308c\u308b\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002 \u4e21\u8005\u306e\u6700\u9069\u306a\u4f7f\u3044\u5206\u3051\u306f\u9ad8\u5ea6\u306a\u30c8\u30d4\u30c3\u30af\u3068\u306a\u308b\u305f\u3081\u3001 \u8a73\u7d30\u306f \u66f8\u7c4d Effective Modern C++ \u3067\u7d39\u4ecb\u3055\u308c\u308b \u300c\u9805\u76ee42\uff1a\u8981\u7d20\u306e\u633f\u5165\u306e\u4ee3\u308f\u308a\u306b\u76f4\u63a5\u914d\u7f6e\u3092\u691c\u8a0e\u3059\u308b\u300d\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch03-05-vectors/#_3","title":"\u672b\u5c3e\u304b\u3089\u8981\u7d20\u524a\u9664","text":"<p><code>x.pop_back()</code> \u3068\u3059\u308b\u3068\u672b\u5c3e\u304b\u3089\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;vector&gt;\n\nstd::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\nauto size1 = x.size();  // 5\n\nx.pop_back();\nauto size2 = x.size();  // 4\n</code></pre>"},{"location":"ch03-05-vectors/#_4","title":"\u914d\u5217\u306e\u5148\u982d\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97","text":"<p><code>x.data()</code> \u3068\u3059\u308b\u3068\u914d\u5217\u306e\u5148\u982d\u30dd\u30a4\u30f3\u30bf\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;vector&gt;\n\nstd::vector&lt;int&gt; x = {4, 3, 2, 1, 0};\nauto px = x.data();  // \u5148\u982d\u30dd\u30a4\u30f3\u30bf\nauto num = *px;  // 4\n</code></pre>"},{"location":"ch03-05-vectors/#bool","title":"bool \u306b\u5bfe\u3059\u308b\u7279\u6b8a\u5316","text":"<p><code>std::vector</code> \u306f <code>bool</code> \u306b\u5bfe\u3057\u3066\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7279\u6b8a\u5316\u3055\u308c\u3066\u304a\u308a\u3001 <code>std::vector&lt;bool&gt;</code> \u306f <code>bool</code> \u4ee5\u5916\u306e <code>std::vector</code> \u3068\u306f\u52d5\u4f5c\u304c\u7570\u306a\u308a\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306f vector - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch03-06-maps/","title":"\u30de\u30c3\u30d7","text":"<p>\u914d\u5217\u3067\u306f\u8981\u7d20\u53c2\u7167\u306e\u305f\u3081\u306b\u4f55\u756a\u76ee\u306e\u8981\u7d20\u3068\u6307\u5b9a\u3057\u307e\u3059\u304c\u3001 <code>std::map</code> \u307e\u305f\u306f <code>std::unordered_map</code> \u3068\u3044\u3046\u578b\u3092\u4f7f\u7528\u3059\u308b\u3068 \u4f55\u756a\u76ee\u3068\u3044\u3046\u6307\u5b9a\u306e\u4ee3\u308f\u308a\u306b\u4efb\u610f\u306e\u578b\u3092\u30ad\u30fc\u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</p> <p>\u3053\u306e\u6a5f\u80fd\u306f\u9023\u60f3\u914d\u5217\u3084\u8f9e\u66f8\u3068\u3082\u547c\u3070\u308c\u307e\u3059\u3002</p> <pre><code>#include &lt;map&gt;\n\nstd::map&lt;std::string, int&gt; persons = {\n{\"Alice\", 18},\n{\"Bob\", 20}\n};\n</code></pre> <pre><code>#include &lt;unordered_map&gt;\n\nstd::unordered_map&lt;std::string, int&gt; persons = {\n{\"Alice\", 18},\n{\"Bob\", 20}\n};\n</code></pre> <p>\u8981\u7d20\u53c2\u7167\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>persons[\"Alice\"];  // 18\npersons[\"Bob\"];    // 20\n</code></pre>"},{"location":"ch03-06-maps/#_2","title":"\u8981\u7d20\u8ffd\u52a0","text":"<p><code>insert()</code> \u3067\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>persons.insert({\"Eve\", 19});\n</code></pre>"},{"location":"ch03-06-maps/#_3","title":"\u8981\u7d20\u524a\u9664","text":"<p><code>erase()</code> \u3067\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>persons.erase(\"Bob\");\n</code></pre>"},{"location":"ch03-06-maps/#stdmap-stdunordered_map","title":"<code>std::map</code> \u3068 <code>std::unordered_map</code> \u306e\u9055\u3044","text":"<p><code>std::map</code> \u306f\u30ad\u30fc\u3067\u30bd\u30fc\u30c8\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 <code>std::unordered_map</code> \u306f\u30ad\u30fc\u304b\u3089\u8a08\u7b97\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u3068\u547c\u3070\u308c\u308b\u5024\u3067\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002</p> <p>\u30ad\u30fc\u306e\u9806\u756a\u3092\u4fdd\u6301\u3057\u305f\u3044\u5834\u5408\u3092\u9664\u3044\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u5e38\u306b <code>std::unordered_map</code> \u306e\u65b9\u304c\u512a\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch03-07-sets/","title":"\u30bb\u30c3\u30c8","text":"<p><code>std::set</code> \u307e\u305f\u306f <code>std::unordered_set</code> \u3068\u3044\u3046\u578b\u3092\u4f7f\u7528\u3059\u308b\u3068 \u4efb\u610f\u306e\u578b\u306e\u96c6\u5408\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;set&gt;\n\nstd::set&lt;std::string&gt; persons = {\n\"Alice\",\n\"Bob\"\n};\n</code></pre> <pre><code>#include &lt;unordered_set&gt;\n\nstd::unordered_set&lt;std::string&gt; persons = {\n\"Alice\",\n\"Bob\"\n};\n</code></pre>"},{"location":"ch03-07-sets/#_2","title":"\u8981\u7d20\u8ffd\u52a0","text":"<p><code>insert()</code> \u3067\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>persons.insert(\"Eve\");\n</code></pre>"},{"location":"ch03-07-sets/#_3","title":"\u8981\u7d20\u524a\u9664","text":"<p><code>erase()</code> \u3067\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>persons.erase(\"Bob\");\n</code></pre>"},{"location":"ch03-07-sets/#stdset-stdunordered_set","title":"std::set \u3068 std::unordered_set \u306e\u9055\u3044","text":"<p><code>std::set</code> \u306f\u30ad\u30fc\u3067\u30bd\u30fc\u30c8\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 <code>std::unordered_set</code> \u306f\u30ad\u30fc\u304b\u3089\u8a08\u7b97\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u3068\u547c\u3070\u308c\u308b\u5024\u3067\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002</p> <p>\u30ad\u30fc\u306e\u9806\u756a\u3092\u4fdd\u6301\u3057\u305f\u3044\u5834\u5408\u3092\u9664\u3044\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u5e38\u306b <code>std::unordered_set</code> \u306e\u65b9\u304c\u512a\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch03-08-iterators/","title":"\u30a4\u30c6\u30ec\u30fc\u30bf","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u306f\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u306e\u8981\u7d20\u306e\u4f4d\u7f6e\u3092\u6307\u3059\u3082\u306e\u3067\u3001 \u30dd\u30a4\u30f3\u30bf\u306e\u3088\u3046\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067 \u30b3\u30f3\u30c6\u30ca\u306e\u7a2e\u985e\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3067\u51e6\u7406\u3092\u5171\u901a\u5316\u3067\u304d\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\n\n// begin() \u3067\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u5148\u982d\u8981\u7d20\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u53d6\u5f97\nauto it = x.begin();\n\n// \u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u8981\u7d20\u3092\u51fa\u529b\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 0\n\n// \u30a4\u30c6\u30ec\u30fc\u30bf\u30921\u3064\u9032\u3081\u308b\n++it;\n\n// \u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u8981\u7d20\u3092\u51fa\u529b\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 1\n</code></pre> <p>\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u6307\u3059\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u306b\u306f \u30dd\u30a4\u30f3\u30bf\u306e\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u540c\u69d8\u306b <code>*</code> \u3092\u3064\u3051\u307e\u3059\u3002</p> <p>\u30a4\u30c6\u30ec\u30fc\u30bf\u306f\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u30671\u3064\u9032\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\n\n// end() \u3067\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u6700\u7d42\u8981\u7d20\u306e1\u3064\u5148\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u53d6\u5f97\nfor (auto it = x.begin(); it != x.end(); ++it) {\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n}\n</code></pre> <p><code>end()</code> \u3067\u53d6\u5f97\u3059\u308b\u30a4\u30c6\u30ec\u30fc\u30bf\u306f\u6700\u7d42\u8981\u7d20\u3067\u306f\u306a\u304f\u3001 \u6700\u7d42\u8981\u7d20\u306e1\u3064\u5148\u3067\u3042\u308b\u305f\u3081\u30eb\u30fc\u30d7\u306e\u7d42\u4e86\u6761\u4ef6\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <p>\u30a4\u30c6\u30ec\u30fc\u30bf\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u7a2e\u985e\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3067\u51e6\u7406\u3092\u884c\u3048\u308b\u305f\u3081\u3001 \u6b21\u306e\u3088\u3046\u306b <code>std::set</code> \u306b\u5909\u66f4\u3057\u3066\u3082\u305d\u306e\u307e\u307e\u52d5\u4f5c\u3057\u307e\u3059\u3002</p> <pre><code>std::set&lt;int&gt; x = {0, 1, 2, 3, 4};\n\nfor (auto it = x.begin(); it != x.end(); ++it) {\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n}\n</code></pre> <p>\u3053\u306e\u6027\u8cea\u306b\u3088\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u7a2e\u985e\u306b\u4f9d\u5b58\u305b\u305a <code>&lt;algorithm&gt;</code> \u3067\u63d0\u4f9b\u3055\u308c\u308b\u6a5f\u80fd\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;algorithm&gt;\n\nstd::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\n\n// std::count_if \u306f\u6761\u4ef6\u3092\u6e80\u305f\u3059\u30b3\u30f3\u30c6\u30ca\u8981\u7d20\u306e\u500b\u6570\u3092\u6570\u3048\u308b\u51e6\u7406\n//   - \u7b2c1\u5f15\u6570\u3068\u7b2c2\u5f15\u6570\u3067\u7bc4\u56f2\u3092\u6307\u5b9a\n//   - \u7b2c3\u5f15\u6570\u3067\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u6761\u4ef6\u3092\u6307\u5b9a\nauto n = std::count_if(x.begin(), x.end(), [](const int v) {\n// 0 \u3088\u308a\u5927\u304d\u3044 2 \u306e\u500d\u6570\nif (v &lt;= 0) {\nreturn false;\n}\nif (v % 2 != 0) {\nreturn false;\n}\nreturn true;\n});\nstd::cout &lt;&lt; n &lt;&lt; std::endl;  // 2\n</code></pre>"},{"location":"ch03-08-iterators/#_2","title":"\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3067\u304d\u308b\u30b3\u30f3\u30c6\u30ca","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3067\u304d\u308b\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u3001\u4ee3\u8868\u7684\u306a\u3082\u306e\u306f\u30b3\u30f3\u30c6\u30ca\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u63d0\u4f9b\u3055\u308c\u308b\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002 \u30b3\u30f3\u30c6\u30ca\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u63d0\u4f9b\u3055\u308c\u308b\u30b3\u30f3\u30c6\u30ca\u306f STL \u30b3\u30f3\u30c6\u30ca\u3068\u547c\u3070\u308c\u3001\u672c\u66f8\u3067\u7d39\u4ecb\u3057\u305f\u4ee5\u4e0b\u3082\u306e\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002</p> <ul> <li><code>std::array</code></li> <li><code>std::vector</code></li> <li><code>std::map</code></li> <li><code>std::set</code></li> <li><code>std::unordered_map</code></li> <li><code>std::unordered_set</code></li> </ul> <p>STL \u30b3\u30f3\u30c6\u30ca\u306e\u4e00\u89a7\u306f \u30b3\u30f3\u30c6\u30ca\u30e9\u30a4\u30d6\u30e9\u30ea - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>STL \u30b3\u30f3\u30c6\u30ca\u4ee5\u5916\u306b\u3082 <code>std::string</code> \u306a\u3069\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u306f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ch03-08-iterators/#_3","title":"\u30de\u30c3\u30d7\u306e\u30a4\u30c6\u30ec\u30fc\u30bf","text":"<p><code>std::map</code> \u3084 <code>std::unordered_map</code> \u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u6307\u3059\u8981\u7d20\u306f\u30da\u30a2\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u30da\u30a2\u306f <code>first</code> \u304c\u30ad\u30fc\u3067 <code>second</code> \u304c\u5024\u3067\u3059\u3002</p> <pre><code>std::map&lt;std::string, int&gt; persons = {\n{\"Alice\", 18},\n{\"Bob\", 20}\n};\n\nfor (auto it = persons.begin(); it != persons.end(); ++it) {\nconst auto&amp; person = *it;  // std::pair&lt;std::string, int&gt;\nconst std::string&amp; name = person.first;\nconst int age = person.second;\nstd::cout &lt;&lt; name &lt;&lt; \": \" &lt;&lt; age &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"ch03-08-iterators/#_4","title":"\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u7a2e\u985e","text":"<p>\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u306f5\u7a2e\u985e\u3042\u308a\u307e\u3059\u304c\u3001 \u672c\u66f8\u3067\u306f\u305d\u306e\u3046\u3061\u4ee5\u4e0b3\u7a2e\u985e\u3060\u3051\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p> <ul> <li>\u524d\u65b9\u5411\u30a4\u30c6\u30ec\u30fc\u30bf (Forward Iterator)</li> <li>\u53cc\u65b9\u5411\u30a4\u30c6\u30ec\u30fc\u30bf (Bidirectional Iterator)</li> <li>\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u30a4\u30c6\u30ec\u30fc\u30bf (Random Access Iterator)</li> </ul> <p>\u3053\u306e3\u7a2e\u985e\u306f\u6b21\u306e\u3088\u3046\u306a is-a \u95a2\u4fc2\u304c\u3042\u308a\u307e\u3059\u3002</p> <p></p>"},{"location":"ch03-08-iterators/#_5","title":"\u524d\u65b9\u5411\u30a4\u30c6\u30ec\u30fc\u30bf","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u52d5\u304b\u3059\u5834\u5408\u306b\u524d\u306b\u9032\u3081\u308b\u3053\u3068\u3060\u3051\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>std::unordered_map</code> \u3084 <code>std::unordered_set</code> \u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002</p> <pre><code>std::unordered_set&lt;int&gt; x = {0, 1, 2, 3, 4};\n\nauto it = x.begin();\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n\n++it;  // \u524d\u306b\u9032\u3081\u308b\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n</code></pre>"},{"location":"ch03-08-iterators/#_6","title":"\u53cc\u65b9\u5411\u30a4\u30c6\u30ec\u30fc\u30bf","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u52d5\u304b\u3059\u5834\u5408\u306b\u524d\u306b\u9032\u3081\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u5f8c\u308d\u3078\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>std::map</code> \u3084 <code>std::set</code> \u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002</p> <pre><code>std::set&lt;int&gt; x = {0, 1, 2, 3, 4};\n\nauto it = x.begin();\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 0\n\n++it;  // \u524d\u306b\u9032\u3081\u308b\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 1\n\n--it;  // \u5f8c\u308d\u3078\u623b\u3059\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 0\n</code></pre>"},{"location":"ch03-08-iterators/#_7","title":"\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u30a4\u30c6\u30ec\u30fc\u30bf","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u52d5\u304b\u3059\u5834\u5408\u306b\u4efb\u610f\u306e\u4f4d\u7f6e\u3078\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>std::array</code> \u3084 <code>std::vector</code> \u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\n\nauto it = x.begin();\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 0\n\n++it;  // \u524d\u306b\u9032\u3081\u308b\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 1\n\n--it;  // \u5f8c\u308d\u3078\u623b\u3059\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 0\n\nit = it + 3;  // 3\u3064\u524d\u306b\u9032\u3081\u308b\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 3\n\n// it \u306f\u5909\u66f4\u305b\u305a\u306b it \u304b\u30892\u3064\u5f8c\u308d\u3078\u623b\u3057\u305f\u8981\u7d20\u3092\u53c2\u7167\nstd::cout &lt;&lt; it[-2] &lt;&lt; std::endl;  // 1 (it \u304b\u30892\u3064\u5f8c\u308d\u3078\u623b\u3057\u305f\u8981\u7d20)\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;  // 3 (it \u306f\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044)\n</code></pre>"},{"location":"ch03-08-iterators/#_8","title":"\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u53c2\u7167\u306e\u7121\u52b9\u5316","text":"<p>\u8981\u7d20\u306e\u8ffd\u52a0\u3084\u524a\u9664\u3092\u884c\u3046\u3068 \u65e2\u5b58\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3084\u8981\u7d20\u3078\u306e\u53c2\u7167\u304c\u7121\u52b9\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u7121\u52b9\u5316\u3055\u308c\u305f\u30a4\u30c6\u30ec\u30fc\u30bf\u3084\u53c2\u7167\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u306e\u6319\u52d5\u306f\u672a\u5b9a\u7fa9\u52d5\u4f5c (\u4fdd\u8a3c\u3055\u308c\u306a\u3044) \u3067\u3059\u3002</p> <p>\u305f\u3068\u3048\u3070 <code>std::vector</code> \u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3068\u3001 \u524a\u9664\u3057\u305f\u8981\u7d20\u306e\u4f4d\u7f6e\u3068\u305d\u308c\u4ee5\u964d\u306e\u4f4d\u7f6e\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u53c2\u7167\u304c\u7121\u52b9\u5316\u3055\u308c\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt; x = {0, 1, 2, 3, 4, 5, 6};\nauto it1 = x.begin() + 2;\nauto it2 = x.begin() + 3;\nauto it3 = x.begin() + 4;\nstd::cout &lt;&lt; *it1 &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; *it2 &lt;&lt; std::endl;  // 3\nstd::cout &lt;&lt; *it3 &lt;&lt; std::endl;  // 4\n\nx.erase(x.begin() + 3);  // index=3 \u306e\u8981\u7d20\u3092\u524a\u9664\n\nstd::cout &lt;&lt; *it1 &lt;&lt; std::endl;  // 2 (\u6709\u52b9\u306a\u307e\u307e)\nstd::cout &lt;&lt; *it2 &lt;&lt; std::endl;  // \u672a\u5b9a\u7fa9\u52d5\u4f5c (\u7121\u52b9\u5316\u3055\u308c\u308b)\nstd::cout &lt;&lt; *it3 &lt;&lt; std::endl;  // \u672a\u5b9a\u7fa9\u52d5\u4f5c (\u7121\u52b9\u5316\u3055\u308c\u308b)\n</code></pre>"},{"location":"ch03-09-range-based-for/","title":"\u7bc4\u56f2 for","text":""},{"location":"ch03-09-range-based-for/#_1","title":"\u30b3\u30f3\u30c6\u30ca","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u306e\u30eb\u30fc\u30d7</p> <pre><code>std::vector&lt;int&gt; x = {0, 1, 2, 3, 4};\n\nfor (auto it = x.begin(); it != x.end(); ++it) {\nstd::cout &lt;&lt; *it &lt;&lt; std::endl;\n}\n</code></pre> <p>\u306f\u7bc4\u56f2 for \u6587\u3068\u3044\u3046\u69cb\u6587\u3092\u4f7f\u3063\u3066\u4e0b\u8a18\u306e\u69d8\u306b\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>for (auto&amp;&amp; e : x) {\nstd::cout &lt;&lt; e &lt;&lt; std::endl;\n}\n</code></pre> <p><code>&amp;&amp;</code> \u3068\u3044\u3046\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f 6.4. \u30e0\u30fc\u30d6\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9 \u306e\u7ae0\u3067\u8aac\u660e\u3057\u307e\u3059\u306e\u3067\u3001 \u4eca\u306f\u304a\u307e\u3058\u306a\u3044\u3060\u3068\u601d\u3063\u3066\u4e0b\u3055\u3044\u3002</p>"},{"location":"ch03-09-range-based-for/#_2","title":"\u914d\u5217","text":"<p>\u914d\u5217\u306b\u5bfe\u3057\u3066\u3082\u7bc4\u56f2 for \u6587\u306f\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int x[] = {0, 1, 2, 3, 4};\n\nfor (auto&amp;&amp; e : x) {\nstd::cout &lt;&lt; e &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"ch04-01-declarations-and-definitions/","title":"\u5ba3\u8a00\u3068\u5b9a\u7fa9","text":"<p>\u95a2\u6570\u3084\u5909\u6570\u306f\u3001\u5ba3\u8a00\u3068\u5b9a\u7fa9\u3092\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u5ba3\u8a00\u3068\u5b9a\u7fa9\u306f\u3001\u533a\u5225\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"ch04-01-declarations-and-definitions/#_2","title":"\u5ba3\u8a00","text":"<p>\u5ba3\u8a00\u306f\u3001\u578b\u306e\u60c5\u5831\u3084\u540d\u524d\u306a\u3069\u306e\u30b7\u30f3\u30dc\u30eb\u306e\u6982\u8981\u3092\u793a\u3059\u3053\u3068\u3067\u3059\u3002</p> <p>\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002</p> <pre><code>void HelloWorld() {\nstd::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u3053\u306e\u95a2\u6570\u306e\u5ba3\u8a00\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002</p> <pre><code>void HelloWorld();\n</code></pre> <p>\u95a2\u6570\u306e <code>{}</code> \u306e\u524d\u306b\u66f8\u3044\u3066\u3042\u308b\u8fd4\u308a\u5024\u306e\u578b\u30fb\u95a2\u6570\u540d\u30fb\u5f15\u6570\u30ea\u30b9\u30c8\u3092\u66f8\u304f\u3060\u3051\u3067\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002 \u95a2\u6570\u306e\u5ba3\u8a00\u306f\u3001\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002</p> <p>\u5ba3\u8a00\u306f\u91cd\u8907\u3057\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>void HelloWorld();  // \u5ba3\u8a00\nvoid HelloWorld();  // \u91cd\u8907\u3057\u3066\u3082OK\n</code></pre> \u5909\u6570\u306e\u5ba3\u8a00 <p>\u95a2\u6570\u3068\u9055\u3044\u3001\u5909\u6570\u306e\u5ba3\u8a00\u3092\u3059\u308b\u5834\u5408\u306f <code>extern</code> \u6307\u5b9a\u5b50\u3092\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>extern int x;  // \u5ba3\u8a00\nextern int x;  // \u91cd\u8907\u3057\u3066\u3082OK\n</code></pre> <p><code>extern</code> \u6307\u5b9a\u5b50\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f \u8a18\u61b6\u57df\u30af\u30e9\u30b9\u6307\u5b9a\u5b50 - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch04-01-declarations-and-definitions/#_3","title":"\u5b9a\u7fa9","text":"<p>\u5b9a\u7fa9\u306f\u3001\u30b7\u30f3\u30dc\u30eb\u306e\u8a73\u7d30\u3092\u793a\u3059\u3053\u3068\u3067\u3059\u3002 \u5b9a\u7fa9\u304c\u3042\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30b7\u30f3\u30dc\u30eb\u304c\u5177\u4f53\u7684\u306b\u3069\u3046\u3044\u3046\u3082\u306e\u306a\u306e\u304b\u5206\u304b\u308a\u307e\u3059\u3002 \u5b9a\u7fa9\u3092\u3057\u305f\u5834\u5408\u306f\u3001\u5408\u308f\u305b\u3066\u5ba3\u8a00\u304c\u884c\u308f\u308c\u305f\u3053\u3068\u306b\u3082\u306a\u308a\u307e\u3059\u3002</p> <p>\u95a2\u6570\u306e\u5834\u5408\u306f\u3001\u5b9f\u88c5\u305d\u306e\u3082\u306e\u304c\u5b9a\u7fa9\u3068\u3057\u3066\u307f\u306a\u3055\u308c\u307e\u3059\u3002</p> <pre><code>// \u95a2\u6570\u306e\u5b9a\u7fa9\u3002\u5ba3\u8a00\u3082\u517c\u306d\u3066\u3044\u308b\u3002\nvoid HelloWorld() {\nstd::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u5909\u6570\u306e\u5834\u5408\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3060\u3051\u3067\u5b9a\u7fa9\u304c\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int x;  // \u5909\u6570\u306e\u5b9a\u7fa9\u3002\u5ba3\u8a00\u3082\u517c\u306d\u3066\u3044\u308b\u3002\nint x = 100;  // \u5b9a\u7fa9\u3092\u3057\u3064\u3064\u521d\u671f\u5316\u3002\u5ba3\u8a00\u3082\u517c\u306d\u3066\u3044\u308b\u3002\n</code></pre> <p>\u5b9a\u7fa9\u306f\u91cd\u8907\u304c\u8a31\u3055\u308c\u307e\u305b\u3093\u3002 \u5b9a\u7fa9\u3055\u308c\u305f\u30b7\u30f3\u30dc\u30eb\u3092\u5229\u7528\u3059\u308b\u5074\u304c\u3001\u3069\u308c\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u304b\u5224\u5225\u3067\u304d\u306a\u304f\u306a\u308b\u305f\u3081\u3001\u30ea\u30f3\u30af\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int x;\nint x;  // \u91cd\u8907\u306e\u305f\u3081\u30a8\u30e9\u30fc\n\nvoid HelloWorld() {\nstd::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\n\nvoid HelloWorld() {  // \u91cd\u8907\u306e\u305f\u3081\u30a8\u30e9\u30fc\nstd::cout &lt;&lt; \"Hello World!!!!!!\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u5ba3\u8a00\u3055\u308c\u305f\u30b7\u30f3\u30dc\u30eb\u3092\u5229\u7528\u3059\u308b\u30b3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u5b9a\u7fa9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 \u5ba3\u8a00\u306e\u307f\u3060\u3068\u3001\u305d\u306e\u95a2\u6570\u3084\u5909\u6570\u304c\u5177\u4f53\u7684\u306b\u3069\u306e\u3088\u3046\u306a\u3082\u306e\u306a\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u305f\u3081\u3067\u3059\u3002</p> <pre><code>void HelloWorld();  // \u5ba3\u8a00\n\nint main() {\nHelloWorld();  // \u5b9a\u7fa9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u305f\u3081\u30a8\u30e9\u30fc\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch04-02-multiple-files/","title":"\u8907\u6570\u30d5\u30a1\u30a4\u30eb","text":""},{"location":"ch04-02-multiple-files/#_2","title":"\u30d5\u30a1\u30a4\u30eb\u306e\u7a2e\u985e","text":"<p>C++ \u3067\u306f2\u7a2e\u985e\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3044\u307e\u3059\u3002</p> <ul> <li>\u30d8\u30c3\u30c0 (\u62e1\u5f35\u5b50: <code>.h</code> , <code>.hpp</code> )<ul> <li>\u95a2\u6570\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002</li> </ul> </li> <li>\u30bd\u30fc\u30b9 (\u62e1\u5f35\u5b50: <code>.cpp</code> , <code>.cc</code> , <code>.cxx</code> )<ul> <li>\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002</li> </ul> </li> </ul>"},{"location":"ch04-02-multiple-files/#_3","title":"\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u308b","text":"<p>1 \u3064\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u7d9a\u3051\u3066\u3044\u308b\u3068\u3001 \u30b3\u30fc\u30c9\u306e\u91cf\u304c\u591a\u304f\u306a\u3063\u305f\u6642\u306b\u3001\u8aad\u307f\u306b\u304f\u304f\u306a\u3063\u305f\u308a\u3001\u66f8\u304d\u306b\u304f\u304f\u306a\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001 \u9069\u5ea6\u306b\u30b3\u30fc\u30c9\u3092\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8de8\u3044\u3060\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002 <code>main.cc</code> \u5185\u3067 <code>a.cc</code> \u306e\u95a2\u6570\u3092\u4f7f\u3046\u305f\u3081\u306b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3092\u3057\u3066\u3044\u307e\u3059\u3002</p> main.cc <pre><code>void DoSomething();   // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething2();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething3();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething4();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething5();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nint main() {\nDoSomething();\nDoSomething2();\nDoSomething3();\nDoSomething4();\nDoSomething5();\n\nreturn 0;\n}\n</code></pre> a.cc <pre><code>void DoSomething() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething2() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething3() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething4() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething5() { /* \u5b9f\u88c5\u7701\u7565 */ }\n</code></pre> <p>\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30f3\u30d1\u30a4\u30eb</p> <p>\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u5834\u5408\u306f\u3001 \u6b21\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u3044\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4e26\u3079\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 main.cc a.cc\n</code></pre> <p>\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3082\u52d5\u4f5c\u306f\u3057\u307e\u3059\u304c\u3001 <code>a.cc</code> \u306b\u8a18\u8ff0\u3057\u3066\u3044\u308b\u95a2\u6570\u3092\u4ed6\u306e\u69d8\u3005\u306a\u30bd\u30fc\u30b9\u304b\u3089\u5229\u7528\u3057\u305f\u3044\u3068\u306a\u3063\u305f\u5834\u5408\u306b\u3001 \u305d\u306e\u90fd\u5ea6\u3001\u305d\u308c\u305e\u308c\u306e\u30bd\u30fc\u30b9\u306b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u3001\u624b\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002</p>"},{"location":"ch04-02-multiple-files/#_4","title":"\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b","text":"<p>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u308b\u3060\u3051\u3067\u306f\u3001\u624b\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u5408\u308f\u305b\u3066\u30d8\u30c3\u30c0\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u6f54\u306b\u306a\u308a\u307e\u3059\u3002 \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3060\u3051\u30d8\u30c3\u30c0\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u3001\u5ba3\u8a00\u3092 1 \u56de\u66f8\u304f\u3060\u3051\u3067\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> main.cc <pre><code>#include \"a.h\"\nint main() {\nDoSomething();\nDoSomething2();\nDoSomething3();\nDoSomething4();\nDoSomething5();\n\nreturn 0;\n}\n</code></pre> a.h <pre><code>void DoSomething();   // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething2();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething3();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething4();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\nvoid DoSomething5();  // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\n</code></pre> a.cc <pre><code>void DoSomething() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething2() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething3() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething4() { /* \u5b9f\u88c5\u7701\u7565 */ }\nvoid DoSomething5() { /* \u5b9f\u88c5\u7701\u7565 */ }\n</code></pre> <p><code>main.cc</code> \u5185\u3067 <code>a.cc</code> \u306e\u95a2\u6570\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b</p> <ol> <li><code>a.h</code> \u3067 <code>a.cc</code> \u306e\u95a2\u6570\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3092\u3057\u307e\u3059\u3002</li> <li><code>main.cc</code> \u3067 <code>a.h</code> \u3092\u53d6\u308a\u8fbc\u3080\u305f\u3081\u306b <code>#include \"a.h\"</code> \u3068\u8a18\u8ff0\u3057\u307e\u3059\u3002</li> </ol> <p>\u3053\u308c\u3067 <code>main.cc</code> \u304b\u3089 <code>a.cc</code> \u306e\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u4f8b\u3048\u3001\u4ed6\u306e\u30bd\u30fc\u30b9\u304b\u3089 <code>a.cc</code> \u306e\u95a2\u6570\u3092\u5229\u7528\u3057\u305f\u3044\u3068\u306a\u3063\u3066\u3082\u3001\u305d\u306e\u30bd\u30fc\u30b9\u6bce\u306b <code>#include \"a.h\"</code> \u3092\u8a18\u8ff0\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\u3002</p> <p>\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u306f\u3001\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code># a.h \u306f\u6307\u5b9a\u3057\u306a\u304f\u3066\u826f\u3044\ng++ -std=c++11 main.cc a.cc\n</code></pre>"},{"location":"ch04-02-multiple-files/#_5","title":"\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9","text":"<p>\u30d8\u30c3\u30c0\u306b\u306f\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002</p> a.h <pre><code>#ifndef A_H_\n#define A_H_\nvoid DoSomething();\nvoid DoSomething2();\n\n#endif  // A_H_\n</code></pre> <p>\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u304c\u3042\u308b\u3053\u3068\u3067\u3001\u30bd\u30fc\u30b9\u304c\u540c\u3058\u30d8\u30c3\u30c0\u3092\u8907\u6570\u56de\u53d6\u308a\u8fbc\u3080\u4e8b\u304c\u306a\u304f\u306a\u308a\u3001 \u5909\u6570\u3084\u95a2\u6570\u306e\u5b9a\u7fa9\u304c\u91cd\u8907\u3059\u308b\u3053\u3068\u3092\u9632\u3052\u307e\u3059\u3002</p> <p>\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u306f\u4e00\u822c\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3054\u3068\u306b\u547d\u540d\u898f\u5247\u3092\u8a2d\u3051\u307e\u3059\u3002</p> <p>\u4f7f\u7528\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u540d\u524d</p> <p><code>_</code> \u3067\u59cb\u307e\u308b\u540d\u524d\u3084 <code>__</code> \u3092\u542b\u3080\u3088\u3046\u306a\u540d\u524d\u306f\u3001 \u30b3\u30f3\u30d1\u30a4\u30e9\u3084\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3066\u4e88\u7d04\u3055\u308c\u3066\u3044\u308b\u8b58\u5225\u5b50\u3068\u540d\u524d\u304c\u88ab\u308b\u6050\u308c\u304c\u3042\u308b\u305f\u3081\u4f7f\u3063\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p> <pre><code>#define _A_H_  //  _ \u3067\u59cb\u307e\u308b\u306e\u3067NG\n#define A__H_  // __ \u3092\u542b\u3080\u306e\u3067NG\n</code></pre> <p>\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30ac\u30fc\u30c9\u306f\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u53f8\u4ee4\u306e\u4ed5\u7d44\u307f\u3092\u7528\u3044\u3066\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002 \u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u53f8\u4ee4\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001 \u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u53f8\u4ee4 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch04-03-scopes/","title":"\u30b9\u30b3\u30fc\u30d7","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u7279\u5b9a\u306e\u7bc4\u56f2\u6bce\u306b\u30b7\u30f3\u30dc\u30eb\u3092\u8b58\u5225\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u7bc4\u56f2\u306e\u3053\u3068\u3092 \u30b9\u30b3\u30fc\u30d7 \u3068\u8a00\u3044\u307e\u3059\u3002 \u540c\u4e00\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u306b\u540c\u540d\u306e\u30b7\u30f3\u30dc\u30eb\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\u3001\u30b7\u30f3\u30dc\u30eb\u3092\u4e00\u610f\u306b\u8b58\u5225\u3059\u308b\u4e8b\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u30ea\u30f3\u30af\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u307e\u305f\u3001\u30b9\u30b3\u30fc\u30d7\u3092\u6c7a\u3081\u308b\u7bc4\u56f2\u306e\u3053\u3068\u3092\u30d6\u30ed\u30c3\u30af\u3068\u8a00\u3044\u307e\u3059\u3002 <code>{}</code> \u3067\u62ec\u3089\u308c\u305f\u7bc4\u56f2\u304c\u4e00\u3064\u306e\u30d6\u30ed\u30c3\u30af\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u540d\u524d\u4fee\u98fe\uff08\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\uff09</p> <p>C++ \u3067\u306f\u540c\u4e00\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u306b\u540c\u540d\u306e\u95a2\u6570\u304c\u3042\u3063\u3066\u3082\u3001\u5f15\u6570\u306e\u578b\u304c\u7570\u306a\u308c\u3070\u5ba3\u8a00\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\uff08\u95a2\u6570\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\uff09</p> <p>\u3053\u308c\u306f\u3001\u30b7\u30f3\u30dc\u30eb\u306b\u5f15\u6570\u306e\u578b\u306e\u60c5\u5831\u306a\u3069\u3082\u542b\u3081\u308b\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u3092\u884c\u306a\u3063\u305f\u4e0a\u3067\u95a2\u6570\u3092\u4e00\u610f\u306b\u8b58\u5225\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306f 11.4 \u52d5\u7684\u30ed\u30fc\u30c9\u3068\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch04-03-scopes/#_2","title":"\u540d\u524d\u7a7a\u9593\u30b9\u30b3\u30fc\u30d7","text":"<p><code>namespace \u540d\u524d {}</code> \u3067\u540d\u524d\u7a7a\u9593\u306e\u5b9a\u7fa9\u3092\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 <code>namespace</code> \u30d6\u30ed\u30c3\u30af\u3067\u62ec\u3089\u308c\u305f\u30b7\u30f3\u30dc\u30eb\u306f\u3001\u305d\u306e\u540d\u524d\u7a7a\u9593\u306b\u5c5e\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>namespace A {\nint count = 2;  // \u540d\u524d\u7a7a\u9593 A \u306b\u5c5e\u3059\u308b\u5909\u6570\n}  // namespace A\n\nnamespace B {\nint count = 4;  // \u540d\u524d\u7a7a\u9593 B \u306b\u5c5e\u3059\u308b\u5909\u6570\u3002\u540d\u524d\u7a7a\u9593 A \u3068\u306f\u5225\u30b9\u30b3\u30fc\u30d7\u306a\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\u3002\n}  // namespace B\n</code></pre> <p>\u30b9\u30b3\u30fc\u30d7\u89e3\u6c7a\u6f14\u7b97\u5b50 <code>::</code> \u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u3001\u540d\u524d\u7a7a\u9593\u5185\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u5229\u7528\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nnamespace A {\nint count = 2;\n}  // namespace A\n\nnamespace B {\nint count = 4;\n}  // namespace B\n\nint main() {\nstd::cout &lt;&lt; A::count &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; B::count &lt;&lt; std::endl;  // 4\n\nreturn 0;\n}\n</code></pre> <p>\u540c\u4e00\u306e\u540d\u524d\u7a7a\u9593\u306b\u5c5e\u3059\u308b\u5834\u5408\u306f\u3001\u30b9\u30b3\u30fc\u30d7\u89e3\u6c7a\u6f14\u7b97\u5b50 <code>::</code> \u306b\u3088\u308b\u540d\u524d\u7a7a\u9593\u306e\u6307\u5b9a\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>namespace A {\nint count = 2;\n\nint GetCount() {\nreturn count;  // A::count \u3068\u540c\u3058\n}\n}  // namespace A\n</code></pre> <p>\u540d\u524d\u7a7a\u9593\u306f\u5165\u308c\u5b50\u306b\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nnamespace A {\nint count = 2;  // A::count\n\nnamespace P {\nint count = 4;  // A::P::count\n\nint GetCount() {\nreturn count;\n}\n}  // namespace P\n}  // namespace A\n\nint main() {\nstd::cout &lt;&lt; A::P::GetCount() &lt;&lt; std::endl;  // 4;\n\nreturn 0;\n}\n</code></pre> <p>\u540c\u4e00\u306e\u540d\u524d\u7a7a\u9593\u5185\u306b\u6307\u5b9a\u3057\u305f\u30b7\u30f3\u30dc\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30b7\u30f3\u30dc\u30eb\u3092\u63a2\u3059\u7bc4\u56f2\u3092 <code>namespace</code> \u30d6\u30ed\u30c3\u30af\u6bce\u306b\u5916\u306b\u5e83\u3052\u3066\u3044\u304d\u3001\u6700\u521d\u306b\u898b\u3064\u304b\u3063\u305f\u3082\u306e\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nnamespace A {\nint count = 2;  // A::count\n\nnamespace P {\nnamespace X {\nint GetCount() {\n/*\n                 * A::P::X::count \u306f\u5b58\u5728\u3057\u306a\u3044\n                 * -&gt; A::P::count \u306f\u5b58\u5728\u3057\u306a\u3044\n                 *    -&gt; A::count \u304c\u5229\u7528\u3055\u308c\u308b\n                 */\nreturn count;\n}\n}  // namespace X\n}  // namespace P\n}  // namespace A\n\nint main() {\nstd::cout &lt;&lt; A::P::X::GetCount() &lt;&lt; std::endl;  // 2;\n\nreturn 0;\n}\n</code></pre> <p>std \u540d\u524d\u7a7a\u9593</p> <p>\u3053\u308c\u307e\u3067\u306b\u51fa\u3066\u304d\u305f\u3001 <code>std::cout</code> \u3084 <code>std::vector</code> \u7b49\u306e <code>std::</code> \u306f std \u540d\u524d\u7a7a\u9593\u306e\u4e8b\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002 C++ \u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6a5f\u80fd\u306f\u3001\u307b\u3068\u3093\u3069\u304c std \u540d\u524d\u7a7a\u9593\u306b\u5c5e\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch04-03-scopes/#_3","title":"\u95a2\u6570\u30b9\u30b3\u30fc\u30d7","text":"<p>\u95a2\u6570\u5185\u3067\u5ba3\u8a00\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u305d\u306e\u95a2\u6570\u5185\u3067\u306e\u307f\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint GetCount() {\nint x = 5;  // GetCount() \u5185\u306e x \u306e\u6709\u52b9\u7bc4\u56f2\u306f\u3053\u3053\u304b\u3089\nreturn x;\n}  // \u3053\u3053\u307e\u3067\nint main() {\nint x = GetCount();  // main() \u306e x \u3068 GetCount() \u306e x \u306f\u5225\u30b9\u30b3\u30fc\u30d7\nstd::cout &lt;&lt; x &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch04-03-scopes/#_4","title":"\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7","text":"<p>\u30d6\u30ed\u30c3\u30af\u5185\u3082\u30b9\u30b3\u30fc\u30d7\u306e\u4e00\u3064\u3067\u3059\u3002 <code>if</code> \u6587\u3092\u59cb\u3081\u3068\u3057\u305f\u5236\u5fa1\u6587\u3067\u4f7f\u308f\u308c\u308b <code>{}</code> \u3082\u30d6\u30ed\u30c3\u30af\u30b9\u30b3\u30fc\u30d7\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002</p> <p>\u540d\u524d\u7a7a\u9593\u540c\u69d8\u3001\u540c\u4e00\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306b\u6307\u5b9a\u3057\u305f\u30b7\u30f3\u30dc\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u30b7\u30f3\u30dc\u30eb\u3092\u63a2\u3059\u7bc4\u56f2\u3092\u30d6\u30ed\u30c3\u30af\u6bce\u306b\u5916\u306b\u5e83\u3052\u3066\u3044\u304d\u3001\u6700\u521d\u306b\u898b\u3064\u304b\u3063\u305f\u3082\u306e\u304c\u5229\u7528\u3055\u308c\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint main() {\nint x = 3;\n\n{\nint x = 5;\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // 5\n}\n\n{\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // 3\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch04-03-scopes/#_5","title":"\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7","text":"<p>\u540d\u524d\u7a7a\u9593\u3084\u95a2\u6570\u306b\u5c5e\u3055\u306a\u3044\u5834\u6240\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7\u3068\u8a00\u3044\u307e\u3059\u3002 \u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7\u306b\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u3084\u95a2\u6570\u306f\u3001\u5ba3\u8a00\u4ee5\u964d\u3067\u3042\u308c\u3070\u3069\u3053\u304b\u3089\u3067\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u307e\u305f\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7\u306b\u5ba3\u8a00\u3057\u305f\u5909\u6570\u30fb\u95a2\u6570\u306e\u3053\u3068\u3092\u4e00\u822c\u7684\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u30fb\u95a2\u6570\u3068\u8a00\u3044\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint x = 100;  // \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\nint main() {\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // 100\n\nreturn 0;\n}\n</code></pre> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306f\u300c\u3069\u3053\u304b\u3089\u3067\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u300d\u3068\u3044\u3046\u6027\u8cea\u4e0a\u3001\u3069\u3053\u304b\u3089\u3067\u3082\u5024\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u3069\u3053\u3067\u5909\u6570\u306e\u5024\u304c\u66f8\u304d\u63db\u3048\u3089\u308c\u305f\u306e\u304b\u7279\u5b9a\u3057\u3065\u3089\u304f\u306a\u308b\u305f\u3081\u3001\u53ef\u80fd\u306a\u9650\u308a\u4f7f\u308f\u306a\u3044\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7\u306f\u3001\u4e00\u756a\u5916\u5074\u306e\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u6349\u3048\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002 \u305d\u306e\u305f\u3081\u3001\u30b9\u30b3\u30fc\u30d7\u89e3\u6c7a\u6f14\u7b97\u5b50 <code>::</code> \u3092\u5229\u7528\u3057\u3066\u3001\u660e\u793a\u7684\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u30b9\u30b3\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint x = 20;\n\nint main() {\nint x = 40;\n\nstd::cout &lt;&lt; x &lt;&lt; std::endl;    // 40\nstd::cout &lt;&lt; ::x &lt;&lt; std::endl;  // 20\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch04-04-internal-linkages/","title":"\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8","text":"<p>\u5ba3\u8a00\u3055\u308c\u305f\u540c\u540d\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u540c\u4e00\u306e\u3082\u306e\u3068\u3057\u3066\u6271\u3046\u304b\u3069\u3046\u304b\u3092\u793a\u3059\u6982\u5ff5\u306e\u3053\u3068\u3092\u30ea\u30f3\u30b1\u30fc\u30b8\u3068\u8a00\u3044\u307e\u3059\u3002</p> <p>\u3053\u3053\u3067\u306f\u3001\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002 \u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3092\u6301\u3064\u30b7\u30f3\u30dc\u30eb\u306f\u5ba3\u8a00\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u306e\u307f\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ch04-04-internal-linkages/#static","title":"static","text":"<p>\u30b7\u30f3\u30dc\u30eb\u306e\u5ba3\u8a00\u306b <code>static</code> \u6307\u5b9a\u5b50\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\nint main() {\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // \u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u3002main.cc \u304b\u3089\u306f other.cc \u306e x \u304c\u53c2\u7167\u3067\u304d\u306a\u3044\u3002\n\nreturn 0;\n}\n</code></pre> other.cc <pre><code>static int x = 246;  // \u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3002 other.cc \u5185\u3067\u306e\u307f\u53c2\u7167\u53ef\u80fd\n</code></pre>"},{"location":"ch04-04-internal-linkages/#_2","title":"\u7121\u540d\u540d\u524d\u7a7a\u9593","text":"<p><code>namespace \u540d\u524d {}</code> \u3067\u540d\u524d\u7a7a\u9593\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u304c\u3001 \u540d\u524d\u3092\u4ed8\u3051\u305a\u306b <code>namespace {}</code> \u3068\u3059\u308b\u3053\u3068\u3067\u7121\u540d\u540d\u524d\u7a7a\u9593\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p>\u7121\u540d\u540d\u524d\u7a7a\u9593\u5185\u306b\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u3084\u95a2\u6570\u306f\u3001 <code>static</code> \u6307\u5b9a\u5b50\u3068\u540c\u69d8\u306b\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3092\u6301\u3061\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"other.h\"\n\nint main() {\nPrint();\n\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // \u3053\u3053\u304b\u3089 x \u306f\u53c2\u7167\u3067\u304d\u306a\u3044\n}\n</code></pre> other.h <pre><code>#ifndef OTHER_H_\n#define OTHER_H_\n\nvoid Print();\n\n#endif  // OTHER_H_\n</code></pre> other.cc <pre><code>#include \"other.h\"\n\n#include &lt;iostream&gt;\n\nnamespace {\nint x = 50;  // x \u306b\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3092\u6301\u305f\u305b\u308b\n}  // unnamed namespace\nvoid Print() {\nstd::cout &lt;&lt; x &lt;&lt; std::endl;  // \u3053\u3053\u304b\u3089 x \u306f\u53c2\u7167\u53ef\u80fd\n}\n</code></pre> <p>C++ \u306b\u304a\u3044\u3066 <code>static</code> \u306f \u69d8\u3005\u306a\u610f\u5473\u3092\u6301\u3064 \u305f\u3081\u3001\u5206\u304b\u308a\u3065\u3089\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002 \u5ba3\u8a00\u306b\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3092\u6301\u305f\u305b\u308b\u5834\u5408\u306f\u3001 <code>static</code> \u3067\u306f\u306a\u304f\u7121\u540d\u540d\u524d\u7a7a\u9593\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"ch04-04-internal-linkages/#_3","title":"\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3068\u5b9a\u7fa9\u91cd\u8907","text":"<p>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u9593\u3067\u5b9a\u7fa9\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u6642\u3001\u901a\u5e38\u306f\u5b9a\u7fa9\u306e\u91cd\u8907\u306b\u3088\u308b\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u304c\u3001 \u5404\u3005\u306b\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3092\u6301\u305f\u305b\u3066\u5225\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u898b\u3048\u306a\u304f\u3057\u3066\u3044\u308c\u3070\u3001\u5225\u306e\u5b9a\u7fa9\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"other.h\"\n\nnamespace {\nint hoge = 0;  // main.cc \u5185\u306e hoge\n}\n\nint main() {\nhoge += 2;\n\nIncrementHoge();\n\nstd::cout &lt;&lt; \"main.cc: \" &lt;&lt; hoge &lt;&lt; std::endl;  // main.cc: 2\n\nPrintHoge();\n\nreturn 0;\n}\n</code></pre> other.h <pre><code>#ifndef OTHER_H_\n#define OTHER_H_\n\nvoid IncrementHoge();\nvoid PrintHoge();\n\n#endif  // OTHER_H_\n</code></pre> other.cc <pre><code>#include \"other.h\"\n\n#include &lt;iostream&gt;\n\nnamespace {\nint hoge = 0;  // other.cc \u5185\u306e hoge\n}\n\nvoid IncrementHoge() {\n++hoge;\n}\n\nvoid PrintHoge() {\nstd::cout &lt;&lt; \"other.cc: \" &lt;&lt; hoge &lt;&lt; std::endl;  // other.cc: 1\n}\n</code></pre>"},{"location":"ch04-05-inline-functions/","title":"inline \u95a2\u6570","text":"<p>\u95a2\u6570\u306b <code>inline</code> \u3092\u3064\u3051\u305f\u95a2\u6570\u306e\u3053\u3068\u3092 inline \u95a2\u6570\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>inline \u95a2\u6570\u306f\u5b9a\u7fa9\u304c\u540c\u4e00\u3067\u3042\u308b\u5834\u5408\u306b\u9650\u3063\u3066\u3001 \u7570\u306a\u308b\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u540c\u4e00\u306e\u5b9a\u7fa9\u3092\u3057\u3066\u3082\u3044\u3044\u3068\u6c7a\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"something.h\"\n\ninline void HelloWorld() {\nstd::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\nint main() {\nHelloWorld();\nSomething();\n\nreturn 0;\n}\n</code></pre> something.h <pre><code>#ifndef SOMETHING_H_\n#define SOMETHING_H_\n\nvoid Something();\n\n#endif  // SOMETHING_H_\n</code></pre> something.cc <pre><code>#include \"something.h\"\n\n#include &lt;iostream&gt;\n\ninline void HelloWorld() {\nstd::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\nvoid Something() {\nHelloWorld();\n}\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f <code>main.cc</code> \u3068 <code>something.cc</code> \u3067 \u5b9a\u7fa9\u304c\u540c\u4e00\u3067\u3042\u308b inline \u95a2\u6570 <code>HelloWorld()</code> \u304c\u305d\u308c\u305e\u308c\u5b58\u5728\u3057\u307e\u3059\u3002</p> <p>\u3053\u308c\u306b\u3088\u3063\u3066 inline \u95a2\u6570\u3067\u3042\u308c\u3070\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067\u95a2\u6570\u5b9a\u7fa9\u3092\u3057\u3066\u3082\u30ea\u30f3\u30af\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002</p> hello_world.h <pre><code>#ifndef HELLO_WORLD_H_\n#define HELLO_WORLD_H_\n\n#include &lt;iostream&gt;\n\ninline void HelloWorld() {\nstd::cout &lt;&lt; \"Hello World!\" &lt;&lt; std::endl;\n}\n#endif  // HELLO_WORLD_H_\n</code></pre> main.cc <pre><code>#include \"hello_world.h\"\n#include \"something.h\"\n\nint main() {\nHelloWorld();\nSomething();\n\nreturn 0;\n}\n</code></pre> something.h <pre><code>#ifndef SOMETHING_H_\n#define SOMETHING_H_\n\nvoid Something();\n\n#endif  // SOMETHING_H_\n</code></pre> something.cc <pre><code>#include \"something.h\"\n\n#include \"hello_world.h\"\n\nvoid Something() {\nHelloWorld();\n}\n</code></pre> inline\u3068\u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b <p>\u3057\u3070\u3057\u3070 <code>inline</code> \u6307\u5b9a\u3092\u95a2\u6570\u306b\u3064\u3051\u308b\u306e\u306f\u300c\u95a2\u6570\u3092\u5f37\u5236\u7684\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3055\u305b\u308b\u305f\u3081\u306e\u6a5f\u80fd\u300d\u3068\u8aa4\u89e3\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u8aa4\u308a\u3067\u3059\u3002</p> <p>\u73fe\u4ee3\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u5341\u5206\u306b\u8ce2\u3044\u306e\u3067\u3001 <code>inline</code> \u306f\u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3068\u95a2\u4fc2\u304c\u7121\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u3057\u305f\u304c\u3063\u3066\u3001\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306b\u5b9a\u7fa9\u306f\u4e00\u3064\u3060\u3051\u3068\u3044\u3046\u30eb\u30fc\u30eb\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u306e\u307f <code>inline</code> \u6307\u5b9a\u306f\u7528\u3044\u3089\u308c\u307e\u3059\u3002</p>"},{"location":"ch05-01-standard-inout/","title":"\u6a19\u6e96\u5165\u51fa\u529b","text":"<p>C++ \u3067\u5165\u51fa\u529b\u3092\u6271\u3046\u5834\u5408\u306f <code>&lt;iostream&gt;</code> \u30d8\u30c3\u30c0\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch05-01-standard-inout/#_2","title":"\u6a19\u6e96\u51fa\u529b","text":"<p><code>std::cout</code> \u3067\u6a19\u6e96\u51fa\u529b\u306b\u5bfe\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nstd::cout &lt;&lt; \"\u6a19\u6e96\u51fa\u529b\";\n</code></pre> <p>Info</p> <p><code>std::endl</code> \u3067\u6539\u884c\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 <pre><code>std::cout &lt;&lt; 1 + 2 &lt;&lt; std::endl;\nstd::cout &lt;&lt; 3 + 4 &lt;&lt; std::endl;\n</code></pre> <pre><code># \u51fa\u529b\u7d50\u679c\n3\n7\n</code></pre></p>"},{"location":"ch05-01-standard-inout/#_3","title":"\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b","text":"<p><code>std::cerr</code> \u3067\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u5bfe\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nstd::cerr &lt;&lt; \"\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\";\n</code></pre>"},{"location":"ch05-01-standard-inout/#_4","title":"\u6a19\u6e96\u5165\u529b","text":"<p><code>std::cin</code> \u3067\u6a19\u6e96\u5165\u529b\u306b\u5bfe\u3057\u3066\u5165\u529b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nstd::cout &lt;&lt; \"\u597d\u304d\u306a\u98df\u3079\u7269\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \"\nstd::string food;\nstd::cin &gt;&gt; food;\nstd::cout &lt;&lt; \"\u597d\u304d\u306a\u98df\u3079\u7269\u306f \" &lt;&lt; food &lt;&lt; \" \u3067\u3059\u3002\" &lt;&lt; std::endl;\n</code></pre> <p><code>int</code> \u306a\u3069\u306e\u6570\u5024\u578b\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u6570\u5024\u306e\u5165\u529b\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002</p> <p>\u307e\u305f\u3001\u8aad\u307f\u8fbc\u307f\u6210\u5426\u3092if\u6587\u3067\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nint main() {\nint x = 0;\n\nstd::cout &lt;&lt; \"\u6574\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \";\nif (std::cin &gt;&gt; x) {\nstd::cout &lt;&lt; \"\u5165\u529b\u3057\u305f\u6574\u6570\u306f \" &lt;&lt; x &lt;&lt; \" \u3067\u3059\u3002\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"\u4e0d\u6b63\u306a\u5165\u529b\u3067\u3059\u3002\" &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre> <pre><code># \u5b9f\u884c\u4f8b1\n\u6574\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: 3\n\u5165\u529b\u3057\u305f\u6574\u6570\u306f 3 \u3067\u3059\u3002\n\n# \u5b9f\u884c\u4f8b2\n\u6574\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \u30ab\u30ec\u30fc\n\u4e0d\u6b63\u306a\u5165\u529b\u3067\u3059\u3002\n</code></pre>"},{"location":"ch05-02-file-operations/","title":"\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c","text":"<p><code>&lt;fstream&gt;</code> \u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u304c\u51fa\u6765\u307e\u3059\u3002</p>"},{"location":"ch05-02-file-operations/#_2","title":"\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u306f <code>std::ifstream</code> \u3092\u4f7f\u3044\u307e\u3059\u3002 <code>&lt;string&gt;</code> \u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b <code>std::getline</code> \u30671\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;fstream&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint main() {\nstd::ifstream file(\"file.txt\");  // \u8aad\u307f\u8fbc\u3080\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\nstd::string line;\n\nwhile (std::getline(file, line)) {  // 1\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3080\nstd::cout &lt;&lt; line &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre> file.txt <pre><code>Good friend, for Jesus' sake forbear,\nTo dig the dust enclosed here.\nBlest be the man that spares these stones,\nAnd cursed be he that moves my bones.\n</code></pre> \u5b9f\u884c\u7d50\u679c <pre><code>Good friend, for Jesus' sake forbear,\nTo dig the dust enclosed here.\nBlest be the man that spares these stones,\nAnd cursed be he that moves my bones.\n</code></pre>"},{"location":"ch05-02-file-operations/#_3","title":"\u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u51fa\u3057","text":"<p>\u30d5\u30a1\u30a4\u30eb\u3078\u66f8\u304d\u51fa\u3059\u5834\u5408\u306f <code>std::ofstream</code> \u3092\u4f7f\u3044\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;fstream&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nint main() {\nstd::ofstream file(\"fruits.txt\");  // \u66f8\u304d\u51fa\u3059\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\nstd::vector&lt;std::string&gt; fruits = { \"apple\", \"strawberry\", \"pear\", \"grape\" };\n\nfor (const auto fruit : fruits) {\nfile &lt;&lt; fruit &lt;&lt; std::endl;  // \u66f8\u304d\u51fa\u3057\n}\n\nreturn 0;\n}\n</code></pre> \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u5f8c\u306efruits.txt <pre><code>apple\nstrawberry\npear\ngrape\n</code></pre> <p>\u66f8\u304d\u51fa\u3059\u524d\u306b\u3001\u65e2\u306b\u540c\u540d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u4e2d\u8eab\u306f\u4e0a\u66f8\u304d\u3055\u308c\u307e\u3059\u3002 \u4e0a\u66f8\u304d\u305b\u305a\u306b\u8ffd\u8a18\u3059\u308b\u5834\u5408\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u306b <code>std::ios::app</code> \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;fstream&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint main() {\nstd::ofstream file(\"file.txt\", std::ios::app);\nstd::string quotation(\"--- William Shakespeare's Epitaph\");\n\nfile &lt;&lt; std::endl &lt;&lt; quotation;\n\nreturn 0;\n}\n</code></pre> \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u524d\u306efile.txt <pre><code>Good friend, for Jesus' sake forbear,\nTo dig the dust enclosed here.\nBlest be the man that spares these stones,\nAnd cursed be he that moves my bones.\n</code></pre> \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u5f8c\u306efile.txt <pre><code>Good friend, for Jesus' sake forbear,\nTo dig the dust enclosed here.\nBlest be the man that spares these stones,\nAnd cursed be he that moves my bones.\n--- William Shakespeare's Epitaph\n</code></pre>"},{"location":"ch06-01-memory-areas/","title":"\u30e1\u30e2\u30ea\u9818\u57df","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5229\u7528\u3059\u308b\u30e1\u30e2\u30ea\u306b\u306f\u69d8\u3005\u306a\u9818\u57df\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u30b9\u30bf\u30c3\u30af\u3068\u30d2\u30fc\u30d7\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002</p>"},{"location":"ch06-01-memory-areas/#_2","title":"\u30b9\u30bf\u30c3\u30af","text":"<p>\u30b9\u30bf\u30c3\u30af\u306f\u30c7\u30fc\u30bf\u69cb\u9020\u4e0a\u3001\u30d2\u30fc\u30d7\u306b\u6bd4\u3079\u3066\u9ad8\u901f\u306b\u6271\u3048\u307e\u3059\u3002\u30b9\u30bf\u30c3\u30af\u3078\u306e\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3068\u89e3\u653e\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u30fbOS\u304c\u81ea\u52d5\u7684\u306b\u884c\u3044\u307e\u3059\u3002</p> <p>\u4ee3\u308f\u308a\u306b\u3001\u4f7f\u7528\u3067\u304d\u308b\u30b9\u30bf\u30c3\u30af\u306b\u306f\u9650\u308a\u304c\u3042\u308b\u306e\u3067\u3001\u5927\u304d\u306a\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u6271\u3046\u306e\u306b\u306f\u5411\u3044\u3066\u3044\u307e\u305b\u3093\u3002 \u307e\u305f\u3001\u30b9\u30bf\u30c3\u30af\u306e\u30b5\u30a4\u30ba\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30fb\u30ea\u30f3\u30af\u6642\u306b\u6c7a\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5b9f\u884c\u524d\u306b\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u671f\u9593\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u3082\u306e\u306b\u5229\u7528\u306f\u9650\u3089\u308c\u307e\u3059\u3002</p> <pre><code>void Function() {\nint x = 100; // \u30ed\u30fc\u30ab\u30eb\u5909\u6570x\u306f\u30b9\u30bf\u30c3\u30af\u306b\u78ba\u4fdd\u3055\u308c\u308b\u3002\nint y = 200; // \u30ed\u30fc\u30ab\u30eb\u5909\u6570y\u306f\u30b9\u30bf\u30c3\u30af\u306b\u78ba\u4fdd\u3055\u308c\u308b\u3002\n\n} // \u95a2\u6570\u306e\u7d42\u4e86\u3068\u3068\u3082\u306b\u5909\u6570 x, y \u306f\u30b9\u30bf\u30c3\u30af\u304b\u3089\u53d6\u308a\u9664\u304b\u308c\u308b\u3002\n// \u30b9\u30bf\u30c3\u30af\u306fLIFO\uff08\u5f8c\u5165\u308c\u5148\u51fa\u3057\uff09\u5f62\u5f0f\u306e\u305f\u3081 y, x \u306e\u9806\u3067\u53d6\u308a\u9664\u304b\u308c\u308b\u3002\n\nint main() {\nFunction();\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch06-01-memory-areas/#_3","title":"\u30d2\u30fc\u30d7","text":"<p>\u30d2\u30fc\u30d7\u306e\u30b5\u30a4\u30ba\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u52d5\u7684\u306b\u5909\u5316\u3057\u307e\u3059\u3002\u30d2\u30fc\u30d7\u306f\u30b9\u30bf\u30c3\u30af\u306e\u3088\u3046\u306a\u5236\u9650\u304c\u306a\u304f\u81ea\u7531\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3068\u89e3\u653e\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u671f\u9593\u304c\u660e\u78ba\u3067\u306a\u3044\u5834\u5408\u3084\u3001\u5b9f\u884c\u6642\u306b\u30b5\u30a4\u30ba\u304c\u78ba\u5b9a\u3059\u308b\u3088\u3046\u306a\u3082\u306e\u306b\u3064\u3044\u3066\u306f\u30d2\u30fc\u30d7\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001 <code>std::vector</code> \u306f\u3001\u4fdd\u6301\u3059\u308b\u8981\u7d20\u3092\u30d2\u30fc\u30d7\u4e0a\u306b\u78ba\u4fdd\u3059\u308b\u3053\u3068\u3067\u3001\u8981\u7d20\u6570\u3092\u5b9f\u884c\u6642\u306b\u5909\u66f4\u3067\u304d\u308b\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch06-02-new-and-delete/","title":"new/delete","text":""},{"location":"ch06-02-new-and-delete/#new","title":"new","text":"<p>\u30d2\u30fc\u30d7\u306b\u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd\u3059\u308b\u5834\u5408\u306f <code>new</code> \u6f14\u7b97\u5b50\u3092\u5229\u7528\u3057\u307e\u3059\u3002</p> <pre><code>int* p1 = new int(100);  // p1 \u306f new \u3067\u78ba\u4fdd\u3055\u308c\u305f\u30e1\u30e2\u30ea\u9818\u57df\u3092\u6307\u3059\u30dd\u30a4\u30f3\u30bf\nint* p2 = new int[5];    // \u914d\u5217\u306e\u5834\u5408\u306f [] \u3092\u4ed8\u3051\u308b\n</code></pre>"},{"location":"ch06-02-new-and-delete/#delete","title":"delete","text":"<p>\u30d2\u30fc\u30d7\u306b\u52d5\u7684\u306b\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u3092\u89e3\u653e\u3059\u308b\u5834\u5408\u306f <code>delete</code> \u6f14\u7b97\u5b50\u3092\u5229\u7528\u3057\u307e\u3059\u3002</p> <pre><code>int* p1 = new int(100);\nint* p2 = new int[5];\n\ndelete p1;    // new \u306b\u3088\u3063\u3066\u78ba\u4fdd\u3055\u308c\u305f\u30e1\u30e2\u30ea\u3092 delete \u3067\u89e3\u653e\ndelete[] p2;  // \u914d\u5217\u306e\u5834\u5408\u306f [] \u3092\u4ed8\u3051\u308b\n</code></pre> <p><code>new</code> \u3092\u5229\u7528\u3057\u3066\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u306e\u89e3\u653e\u3092\u5fd8\u308c\u308b\u3068\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306b\u306a\u308a\u307e\u3059\u3002 <code>new</code> \u3068 <code>delete</code> \u306f\u5fc5\u305a\u30bb\u30c3\u30c8\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002</p> <p>\u30e1\u30e2\u30ea\u30ea\u30fc\u30af</p> <pre><code>void Function() {\nint* p = new int[100000];\n\n// delete \u305b\u305a\u306b Function() \u304c\u7d42\u4e86\u3059\u308b\u3068\u2026\n}   // int[100000] \u5206\u306e\u30e1\u30e2\u30ea\u304c\u89e3\u653e\u3055\u308c\u306a\u3044\u307e\u307e\u306b\u306a\u308b\u3002\n</code></pre> <p>malloc/free</p> <p>malloc/free \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3082\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u30fb\u89e3\u653e\u306f\u53ef\u80fd\u3067\u3059\u304c\u3001C++ \u3067\u306e\u5229\u7528\u306f\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002</p>"},{"location":"ch06-03-deep-and-shallow-copy/","title":"\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3068\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc","text":""},{"location":"ch06-03-deep-and-shallow-copy/#_2","title":"\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc","text":"<p>C++ \u306e\u30b3\u30d4\u30fc\u306f\u57fa\u672c\u7684\u306b\u306f\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3067\u3059\u3002</p> <p>\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u306f\u5b9f\u4f53\u3054\u3068\u30b3\u30d4\u30fc\u3055\u308c\u308b\u305f\u3081\u3001\u30b3\u30d4\u30fc\u3057\u305f\u5206\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306e\u78ba\u4fdd\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002 \u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u306e\u5834\u5408\u3001\u30b3\u30d4\u30fc\u5148\uff08or \u30b3\u30d4\u30fc\u5143\uff09\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7de8\u96c6\u3057\u3066\u3082\u3001\u4ed6\u65b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u5f71\u97ff\u3092\u53ca\u307c\u3057\u307e\u305b\u3093\u3002</p> <pre><code>int x = 100;\nint y = x; // x \u3092 y \u3078\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\uff08\u56f31\uff09\ny = 50; // y \u3092 50 \u306b\u66f8\u304d\u63db\u3048\u308b\uff08\u56f32\uff09\nstd::cout &lt;&lt; x &lt;&lt; std::endl; // x \u306f100\u306e\u307e\u307e\n</code></pre> <p>\u56f31</p> <p></p> <p>\u56f32</p> <p></p>"},{"location":"ch06-03-deep-and-shallow-copy/#_3","title":"\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc","text":"<p>\u30dd\u30a4\u30f3\u30bf\u3092\u30b3\u30d4\u30fc\u3059\u308b\u5834\u5408\u306f\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\u3067\u306f\u30dd\u30a4\u30f3\u30bf\u306e\u5411\u304d\u5148\u3060\u3051\u304c\u30b3\u30d4\u30fc\u3055\u308c\u3001\u5b9f\u4f53\u306f\u30b3\u30d4\u30fc\u5143\u306e\u9818\u57df\u306e\u307e\u307e\u306a\u306e\u3067\u3001 \u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u306e\u3088\u3046\u306a\u30b3\u30d4\u30fc\u3057\u305f\u5206\u306e\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u306f\u8d77\u304d\u307e\u305b\u3093\u3002</p> <p>\u53c2\u7167\u306e\u5834\u5408\u3082\u3001\u30dd\u30a4\u30f3\u30bf\u3068\u540c\u69d8\u306b\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int* x = new int(100);\nint* y = x; // x \u3092 y \u3078\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\uff08\u56f33\uff09\n*y = 50; // y \u304c\u6307\u3059\u5148\u306e\u5024\u3092 50 \u306b\u66f8\u304d\u63db\u3048\u308b\uff08\u56f34\uff09\nstd::cout &lt;&lt; *x &lt;&lt; std::endl; // x \u304c\u6307\u3059\u5148\u306e\u5024\u3082 50 \u306b\u306a\u308b\n</code></pre> <p>\u56f33</p> <p></p> <p>\u56f34</p> <p></p>"},{"location":"ch06-03-deep-and-shallow-copy/#_4","title":"\u95a2\u6570\u306e\u5f15\u6570","text":"<p>\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3068\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\u306f\u95a2\u6570\u306e\u5f15\u6570\u3067\u3082\u533a\u5225\u3055\u308c\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nvoid ChangeToFifty1(int v) {  // \u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\nv = 50;\n}\n\nvoid ChangeToFifty2(int* v) {  // \u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\n*v = 50;\n}\n\nint main() {\nint a = 100;\nChangeToFifty1(a);\nstd::cout &lt;&lt; a &lt;&lt; std::endl;  // 100\n\nint b = 100;\nChangeToFifty2(&amp;b);\nstd::cout &lt;&lt; b &lt;&lt; std::endl;  // 50\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch06-04-move-semantics/","title":"\u30e0\u30fc\u30d6\u30bb\u30de\u30f3\u30c6\u30a3\u30af\u30b9","text":""},{"location":"ch06-04-move-semantics/#_2","title":"\u30b3\u30d4\u30fc\u3068\u30e0\u30fc\u30d6","text":"<pre><code>std::vector&lt;int&gt; x(1000000);\nstd::vector&lt;int&gt; y = x; // \u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\n\n// \u4ee5\u964d x \u306f\u5229\u7528\u3057\u306a\u3044\n</code></pre> <p>\u3053\u306e\u4f8b\u306e\u5834\u5408\u3001<code>y</code> \u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b <code>x</code> \u3068\u540c\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u30b3\u30b9\u30c8\u306e\u9762\u3067\u306f\u304b\u306a\u308a\u306e\u7121\u99c4\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt;* x = new std::vector&lt;int&gt;(1000000);\nstd::vector&lt;int&gt;* y = x; // \u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\nx = nullptr;\n\n// \u4ee5\u964d x \u306f\u5229\u7528\u3057\u306a\u3044\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f <code>x</code> \u3092 <code>y</code> \u306b\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\u3057\u305f\u5f8c\u306b\u3001 <code>x</code> \u306b <code>nullptr</code> \u3092\u4ee3\u5165\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u3053\u308c\u304c\u30e0\u30fc\u30d6\u306e\u6839\u5e95\u306b\u3042\u308b\u8003\u3048\u65b9\u3067\u3001 \u30dd\u30a4\u30f3\u30bf\u306e\u4ed8\u3051\u66ff\u3048\u3060\u3051\u3067\u3001\u3042\u305f\u304b\u3082 <code>x</code> \u304c <code>y</code> \u306b\u79fb\u52d5\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u6319\u52d5\u3092\u5b9f\u73fe\u51fa\u6765\u3066\u3044\u308b\u305f\u3081\u3001 \u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u306e\u3068\u304d\u3088\u308a\u3082\u30b3\u30b9\u30c8\u306e\u9762\u3067\u6709\u5229\u3067\u3059\u3002</p> <p>\u3057\u304b\u3057\u3001\u30dd\u30a4\u30f3\u30bf\u306e\u64cd\u4f5c\u3092\u4f34\u3046\u5b9f\u88c5\u306b\u306a\u308b\u305f\u3081\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u7d30\u5fc3\u306e\u6ce8\u610f\u3092\u6255\u3063\u3066\u5b9f\u88c5\u3057\u306a\u3044\u3068\u3001 \u30e0\u30fc\u30d6\u306e\u4ed5\u7d44\u307f\u304c\u5b9f\u73fe\u3067\u304d\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u30ea\u30b9\u30af\u3082\u5b58\u5728\u3057\u307e\u3059\u3002</p> <p>\u305d\u3053\u3067\u3001 C++11\u304b\u3089\u306f\u30e0\u30fc\u30d6\u306e\u8003\u3048\u65b9\u3092\u30c6\u30af\u30cb\u30c3\u30af\u3068\u3057\u3066\u3067\u306f\u7121\u304f\u3001\u8a00\u8a9e\u4ed5\u69d8\u3068\u3057\u3066\u5b9f\u73fe\u3059\u308b\u4ed5\u7d44\u307f\u304c\u53d6\u308a\u5165\u308c\u3089\u308c\u307e\u3057\u305f\u3002</p>"},{"location":"ch06-04-move-semantics/#_3","title":"\u53f3\u8fba\u5024\u3068\u5de6\u8fba\u5024","text":"<ul> <li>\u5de6\u8fba\u5024: \u57fa\u672c\u7684\u306b\u305d\u306e\u30b9\u30b3\u30fc\u30d7\u306e\u9593\u751f\u304d\u7d9a\u3051\u308b\u540d\u524d\u4ed8\u304d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</li> <li>\u53f3\u8fba\u5024: \u30ea\u30c6\u30e9\u30eb\u3084\u95a2\u6570\u304c\u8fd4\u3059\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u3088\u3046\u306a\u305d\u306e\u77ac\u9593\u306b\u7834\u68c4\u3055\u308c\u3066\u4e0d\u8981\u306b\u306a\u308b\u3082\u306e</li> </ul> <pre><code>int x = 300; // x \u306f\u5de6\u8fba\u5024\u3002300 \u306e\u3088\u3046\u306a\u30ea\u30c6\u30e9\u30eb\u306f\u53f3\u8fba\u5024\u3002\nint y = function(); // y \u306f\u5de6\u8fba\u5024\u3002\u95a2\u6570 function \u304c\u8fd4\u3059\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u53f3\u8fba\u5024\u3002\nint z = x; // z \u3068 x \u306f\u5de6\u8fba\u5024\u3002\n</code></pre> <p>\u53f3\u8fba\u5024\u306f\u5de6\u8fba\u5024\u3078\u683c\u7d0d\u3057\u305f\u3089\u5fc5\u8981\u7121\u304f\u306a\u308b\u306e\u3067\u3001\u53f3\u8fba\u5024\u306b\u306f\u30e0\u30fc\u30d6\u306e\u8003\u3048\u65b9\u304c\u9069\u7528\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002 C++11 \u4ee5\u964d\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3053\u306e\u8003\u3048\u65b9\u3092\u8a8d\u8b58\u3057\u3001\u30e0\u30fc\u30d6\u3092\u5b9f\u73fe\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"ch06-04-move-semantics/#stdmove","title":"std::move","text":"<p>\u6b21\u306e\u4f8b\u3067\u306f\u3001<code>x</code> \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u304b\u3089\u3057\u3066\u307f\u308b\u3068\u5de6\u8fba\u5024\u306a\u306e\u3067\u3001<code>y</code> \u3078\u306e\u4ee3\u5165\u6642\u306b\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt; x(1000000);\nstd::vector&lt;int&gt; y = x; // y \u3068 x \u306f\u5de6\u8fba\u5024\n\n// \u4ee5\u964d x \u306f\u5229\u7528\u3057\u306a\u3044\n</code></pre> <p>\u305d\u3053\u3067\u3001\u5de6\u8fba\u5024\u3092\u53f3\u8fba\u5024\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b <code>std::move</code> \u3092\u4f7f\u3044\u307e\u3059\u3002 <code>x</code> \u3092\u53f3\u8fba\u5024\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u3067\u306f\u306a\u304f\u30e0\u30fc\u30d6\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt; x(1000000);\nstd::vector&lt;int&gt; y = std::move(x); // std::move \u3067 x \u3092\u53f3\u8fba\u5024\u306b\u30ad\u30e3\u30b9\u30c8\n\n// \u4ee5\u964d\u3001x\u306f\u5229\u7528\u3057\u306a\u3044\n</code></pre>"},{"location":"ch06-04-move-semantics/#_4","title":"\u53f3\u8fba\u5024\u53c2\u7167","text":"<p>\u53f3\u8fba\u5024\u3092\u53c2\u7167\u3059\u308b\u306b\u306f <code>&amp;&amp;</code> \u3092\u4ed8\u3051\u307e\u3059\u3002</p> <pre><code>int&amp;&amp; x = 100;\n</code></pre> <p>\u5de6\u8fba\u5024\u306e\u53c2\u7167\u3068\u53f3\u8fba\u5024\u306e\u53c2\u7167\u306f\u5225\u306e\u578b\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u305f\u3081\u3001 \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5f15\u6570\u304c\u5de6\u8fba\u5024\u53c2\u7167\u306e\u6642\u3068\u53f3\u8fba\u5024\u53c2\u7167\u306e\u6642\u3067\u51e6\u7406\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nvoid Print(std::string&amp;) {\nstd::cout &lt;&lt; \"\u5de6\u8fba\u5024\u53c2\u7167\" &lt;&lt; std::endl;\n}\n\nvoid Print(std::string&amp;&amp;) {\nstd::cout &lt;&lt; \"\u53f3\u8fba\u5024\u53c2\u7167\" &lt;&lt; std::endl;\n}\n\nint main() {\nstd::string str = \"hoge\";\n\nPrint(str);\nPrint(std::move(str));\n\nreturn 0;\n}\n</code></pre> <pre><code># \u5b9f\u884c\u7d50\u679c\n\u5de6\u8fba\u5024\u53c2\u7167\n\u53f3\u8fba\u5024\u53c2\u7167\n</code></pre>"},{"location":"ch06-05-smart-pointers/","title":"\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf","text":""},{"location":"ch06-05-smart-pointers/#_2","title":"\u30ea\u30bd\u30fc\u30b9\u306e\u6240\u6709\u6a29","text":"<p>\u30dd\u30a4\u30f3\u30bf\u306f\u30b3\u30d4\u30fc\u53ef\u80fd\u306a\u305f\u3081\u3001\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3059\u5148\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8907\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>int main() {\nint* a = new int(100);\nint* b = a; // b \u304b\u3089\u3082 a \u3068\u540c\u3058\u30ea\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n// a \u3068 b \u306e\u3069\u3061\u3089\u3092 delete \u3059\u308b\u3079\u304d\u304b\uff1f\nreturn 0;\n}\n</code></pre> <p>\u52d5\u7684\u78ba\u4fdd\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u6271\u3046\u5834\u5408\u3001 \u8aa4\u3063\u3066 <code>delete</code> \u3092\u5fd8\u308c\u305f\u308a\u3001\u540c\u3058\u30ea\u30bd\u30fc\u30b9\u3092\u8907\u6570\u56de <code>delete</code> \u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306b\u3001 \u3069\u306e\u5909\u6570\u304c\u30ea\u30bd\u30fc\u30b9\u306e\u6240\u6709\u6a29\uff08\u30ea\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3059\u308b\u6a29\u5229\u3068\u958b\u653e\u3059\u308b\u6a29\u5229\uff09\u3092\u6301\u3064\u306e\u304b\u3092\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u7d30\u5fc3\u306e\u6ce8\u610f\u3092\u6255\u3063\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u3053\u306e\u3088\u3046\u306a\u30dd\u30a4\u30f3\u30bf\u3092\u6271\u3046\u4e0a\u3067\u306e\u5371\u967a\u6027\u3084\u8ca0\u62c5\u3092\u4e0b\u3052\u308b\u305f\u3081\u306b\u3001 C++ \u3067\u306f\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u5b58\u5728\u3057\u307e\u3059\u3002</p> <p>\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u306f <code>&lt;memory&gt;</code> \u30d8\u30c3\u30c0\u306b\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch06-05-smart-pointers/#stdshared_ptr","title":"std::shared_ptr","text":"<p><code>std::shared_ptr</code> \u306f\u52d5\u7684\u78ba\u4fdd\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u6240\u6709\u6a29\u3092\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002 \u5185\u90e8\u3067\u6240\u6709\u6a29\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e00\u89a7\u3092\u7ba1\u7406\u3057\u3001\u6240\u6709\u8005\u304c\u3044\u306a\u304f\u306a\u3063\u305f\u6642\u306b\u81ea\u52d5\u7684\u306b <code>delete</code> \u3059\u308b\u4ed5\u7d44\u307f\u3092\u6709\u3057\u3066\u3044\u307e\u3059\u3002</p> <p><code>std::shared_ptr</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001 <code>std::make_shared</code> \u3092\u5229\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nint main() {\nstd::shared_ptr&lt;int&gt; x = std::make_shared&lt;int&gt;(100); // int* x = new int(100); \u306e\u4ee3\u308f\u308a\n// \u6240\u6709\u8005\u306f1\u4eba\u3002\n{\nstd::shared_ptr&lt;int&gt; y = x; // \u901a\u5e38\u306e\u30dd\u30a4\u30f3\u30bf\u540c\u69d8\u3001\u30b3\u30d4\u30fc\u3059\u308b\u3053\u3068\u3067\u6240\u6709\u6a29\u304c\u5171\u6709\u3055\u308c\u308b\n// \u6240\u6709\u8005\u304c2\u4eba\u306b\u5897\u3048\u308b\u3002\nstd::cout &lt;&lt; *y &lt;&lt; std::endl;\n} // y \u304c\u7834\u68c4\u3055\u308c\u3066\u6240\u6709\u8005\u304c1\u4eba\u306b\u306a\u308b\u3002\n\nstd::cout &lt;&lt; *x &lt;&lt; std::endl;\n\nreturn 0;\n} // \u6240\u6709\u8005\u304c0\u4eba\u306b\u306a\u308b\u306e\u3067\u3001 x \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u81ea\u52d5\u7684\u306b delete \u304c\u884c\u308f\u308c\u308b\u3002\n</code></pre>"},{"location":"ch06-05-smart-pointers/#stdunique_ptr","title":"std::unique_ptr","text":"<p><code>std::unique_ptr</code> \u306f\u3001 <code>std::shared_ptr</code> \u3068\u9055\u3044\u3001\u30b3\u30d4\u30fc\u304c\u51fa\u6765\u307e\u305b\u3093\u3002 \u305d\u306e\u305f\u3081\u3001\u78ba\u4fdd\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u6240\u6709\u8005\u304c\u5e38\u306b1\u4eba\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nint main() {\nstd::unique_ptr&lt;int&gt; x(new int(100));\n// std::unique_ptr&lt;int&gt; y = x; // \u30b3\u30d4\u30fc\u51fa\u6765\u306a\u3044\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3002\n\nstd::cout &lt;&lt; *x &lt;&lt; std::endl;\n\nreturn 0;\n} // x \u304c\u6240\u6709\u3057\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u304c\u89e3\u653e\u3055\u308c\u308b\u3002\n</code></pre> <p>\u6240\u6709\u6a29\u306e\u5171\u6709\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001<code>std::move</code> \u3092\u4f7f\u3046\u3053\u3068\u3067\u6240\u6709\u6a29\u306e\u79fb\u52d5\u306f\u51fa\u6765\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u3067 <code>std::shared_ptr</code> \u3088\u308a\u3082\u8efd\u5feb\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nint main() {\nstd::unique_ptr&lt;int&gt; x(new int(100));\nstd::unique_ptr&lt;int&gt; y(std::move(x)); // \u30e0\u30fc\u30d6\u306f\u51fa\u6765\u308b\u305f\u3081\u3001\u6240\u6709\u6a29\u306e\u79fb\u52d5\u306f\u53ef\u80fd\u3002\n// \u6240\u6709\u6a29\u3092\u79fb\u52d5\u3057\u305f\u305f\u3081\u3001x \u306f\u4f55\u3082\u6240\u6709\u3057\u3066\u3044\u306a\u3044\u3002\n\nstd::cout &lt;&lt; *y &lt;&lt; std::endl;\n\nreturn 0;\n} // y \u304c\u6240\u6709\u3057\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u304c\u89e3\u653e\u3055\u308c\u308b\u3002\n</code></pre>"},{"location":"ch06-05-smart-pointers/#stdauto_ptr","title":"std::auto_ptr","text":"<p><code>std::auto_ptr</code> \u306f C++11 \u3067\u306f\u975e\u63a8\u5968\u3068\u306a\u3063\u3066\u304a\u308a C++17 \u3067\u306f\u524a\u9664\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002</p> <p>\u8a73\u7d30\u306f std::auto_ptr - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch06-05-smart-pointers/#stdweak_ptr","title":"std::weak_ptr","text":"<p><code>std::weak_ptr</code> \u306f\u666e\u6bb5\u4f7f\u3046\u3053\u3068\u306f\u6709\u308a\u307e\u305b\u3093\u304c\u3001 <code>std::shared_ptr</code> \u3092\u4f7f\u3046\u6642\u306b\u5faa\u74b0\u53c2\u7167\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u3067 <code>std::shared_ptr</code> \u306e\u30ea\u30bd\u30fc\u30b9\u306e\u6240\u6709\u6a29\u3092\u6301\u3064\u3053\u3068\u306a\u304f\u3001 \u305d\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u76e3\u8996\u3059\u308b\uff08\u5f31\u53c2\u7167\uff09\u3053\u3068\u304c\u51fa\u6765\u308b\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u3068\u3057\u3066 <code>std::weak_ptr</code> \u304c\u3042\u308a\u307e\u3059\u3002 <code>lock()</code> \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u76e3\u8996\u3057\u3066\u3044\u308b <code>std::shared_ptr</code> \u306e\u30ea\u30bd\u30fc\u30b9\u304c\u6709\u52b9\u306a\u5834\u5408\u3001 \u76e3\u8996\u5148\u3068\u30ea\u30bd\u30fc\u30b9\u3092\u5171\u6709\u3059\u308b <code>std::shared_ptr</code> \u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nint main() {\nstd::shared_ptr&lt;int&gt; sp = std::make_shared&lt;int&gt;(246);\nstd::weak_ptr&lt;int&gt; wp = sp; // sp \u3092\u76e3\u8996\u5bfe\u8c61\u3068\u3057\u3066 wp \u306b\u767b\u9332\u3059\u308b\n\nstd::shared_ptr&lt;int&gt; sp2 = wp.lock(); // \u6709\u52b9\u306a\u5834\u5408\u306f sp \u3068\u30ea\u30bd\u30fc\u30b9\u3092\u5171\u6709\u3059\u308b sp2 \u304c\u4f5c\u3089\u308c\u308b\nif (sp2) {\nstd::cout &lt;&lt; *sp2 &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"\u30ea\u30bd\u30fc\u30b9\u306f\u89e3\u653e\u6e08\u307f\" &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch07-01-data-members/","title":"\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0","text":"<p>\u30af\u30e9\u30b9\u3068\u306f\u5909\u6570\u3068\u95a2\u6570\u3092\u96c6\u7d04\u3057\u305f\u578b\u3092\u3064\u304f\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002</p> <p>\u30af\u30e9\u30b9\u304c\u6301\u3064\u5909\u6570\u3092\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u30e1\u30f3\u30d0\u5909\u6570</p> <p>\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u3053\u3068\u3092\u4fd7\u306b\u30e1\u30f3\u30d0\u5909\u6570\u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u304c\u3001 C++ \u3067\u306f\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3068\u3044\u3046\u547c\u3073\u65b9\u304c\u6b63\u5f0f\u306a\u547c\u3073\u65b9\u306a\u306e\u3067 \u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u305d\u308c\u306b\u5f93\u3044\u307e\u3059\u3002</p> <p>\u9577\u65b9\u5f62\u3092\u6271\u3046 <code>Rectangle</code> \u30af\u30e9\u30b9\u306b <code>int</code> \u578b\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0 <code>height</code> \u3068 <code>width</code> \u3092\u6301\u305f\u305b\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nint height_;\nint width_;\n};\n</code></pre> <p>\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u53c2\u7167\u3059\u308b\u306b\u306f <code>.</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>Rectangle r;\nr.height_ = 10;\nr.width_ = 20;\n</code></pre> <p>\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30dd\u30a4\u30f3\u30bf\u3067\u6271\u3046\u5834\u5408\u306b\u3001\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u53c2\u7167\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Rectangle rectangle;\nRectangle* r = &amp;rectangle;\n(*r).height_ = 10;\n(*r).width_ = 20;\n</code></pre> <p>\u62ec\u5f27\u3092\u3064\u3051\u305a\u306b <code>*r.height_</code> \u3068\u3059\u308b\u3068\u610f\u5473\u304c\u5909\u308f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002</p> <p>\u3053\u306e\u8a18\u8ff0\u65b9\u6cd5\u306f\u4e0d\u4fbf\u306a\u305f\u3081 <code>(*r).</code> \u306e\u4ee3\u308f\u308a\u306b <code>r-&gt;</code> \u3068\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>Rectangle rectangle;\nRectangle* r = &amp;rectangle;\nr-&gt;height_ = 10;\nr-&gt;width_ = 20;\n</code></pre> \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u7406\u7531 <p>\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u304c\u539f\u56e0\u3067\u3059\u3002</p> <p>\u6f14\u7b97\u5b50\u306b\u306f\u512a\u5148\u9806\u4f4d\u304c\u3042\u308a\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u52a0\u7b97 <code>+</code> \u3068\u4e57\u7b97 <code>*</code> \u3067\u306f\u4e57\u7b97 <code>*</code> \u3092\u512a\u5148\u3059\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001 <code>1 + 2 * 3</code> \u306f <code>1 + (2 * 3)</code> \u3068\u89e3\u91c8\u3055\u308c\u3066\u7d50\u679c\u306f <code>7</code> \u306b\u306a\u308a\u307e\u3059\u3002 <code>(1 + 2) * 3)</code> \u306e\u7d50\u679c\u3067\u3042\u308b <code>9</code> \u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002</p> <p>\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e <code>*</code> \u3068\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u53c2\u7167\u306e <code>.</code> \u3067\u306f \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u53c2\u7167\u306e <code>.</code> \u3092\u512a\u5148\u3059\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001 <code>*r.height_</code> \u306f <code>*(r.height_)</code> \u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 \u3057\u304b\u3057\u306a\u304c\u3089 <code>r</code> \u306e\u578b\u3067\u3042\u308b <code>std::unique_ptr&lt;Rectangle&gt;</code> \u306b\u306f <code>height_</code> \u3068\u3044\u3046\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306f\u306a\u3044\u305f\u3081\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306f C++\u306e\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-02-member-functions/","title":"\u30e1\u30f3\u30d0\u95a2\u6570","text":"<p>\u30af\u30e9\u30b9\u304c\u6301\u3064\u95a2\u6570\u3092\u30e1\u30f3\u30d0\u95a2\u6570\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u9577\u65b9\u5f62\u3092\u6271\u3046 <code>Rectangle</code> \u30af\u30e9\u30b9\u306b \u9762\u7a4d\u3092\u6c42\u3081\u308b\u30e1\u30f3\u30d0\u95a2\u6570 <code>Area</code> \u3092\u6301\u305f\u305b\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nint Area() {\nreturn height_ * width_;\n}\nint height_;\nint width_;\n};\n</code></pre> <p>\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <code>.</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>Rectangle r;\nr.height_ = 10;\nr.width_ = 20;\nr.Area();\n</code></pre>"},{"location":"ch07-02-member-functions/#_2","title":"\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u5b9a\u7fa9","text":"<p>\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nint Area();\nint height_;\nint width_;\n};\n\nint Rectangle::Area() {\nreturn height_ * width_;\n}\n</code></pre> <p>\u3069\u306e\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3067\u3042\u308b\u304b\u3092\u8868\u3059\u305f\u3081\u306b <code>Rectangle::</code> \u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002</p> \u6697\u9ed9\u7684\u306a inline \u6307\u5b9a <p>\u30af\u30e9\u30b9\u5ba3\u8a00\u306e\u4e2d\u3067\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u3001\u6697\u9ed9\u7684\u306b <code>inline</code> \u6307\u5b9a\u3055\u308c\u307e\u3059\u3002 \u305d\u306e\u305f\u3081\u3001\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30e9\u30b9\u5ba3\u8a00\u306e\u4e2d\u3067\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3082 \u30ea\u30f3\u30af\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002</p> rectangle.h <pre><code>#ifndef RECTANGLE_H_\n#define RECTANGLE_H_\n\nclass Rectangle {\npublic:\nint Area() {\nreturn height_ * width_;\n}\nint height_;\nint width_;\n};\n\n#endif  // RECTANGLE_H_\n</code></pre> something.h <pre><code>#ifndef SOMETHING_H_\n#define SOMETHING_H_\n\nvoid Something();\n\n#endif  // SOMETHING_H_\n</code></pre> something.cc <pre><code>#include \"something.h\"\n\n#include &lt;iostream&gt;\n\n#include \"rectangle.h\"\n\nvoid Something() {\nRectangle r;\n\nr.height_ = 2;\nr.width_ = 3;\nstd::cout &lt;&lt; r.Area() &lt;&lt; std::endl;\n}\n</code></pre> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"rectangle.h\"\n#include \"something.h\"\n\nint main() {\nRectangle r;\nr.height_ = 10;\nr.width_ = 20;\nstd::cout &lt;&lt; r.Area() &lt;&lt; std::endl;\n\nSomething();\n\nreturn 0;\n}\n</code></pre> <p>\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u6697\u9ed9\u7684\u306a inline \u6307\u5b9a\u306f\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002 \u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u3068\u30ea\u30f3\u30af\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002</p> rectangle.h <pre><code>#ifndef RECTANGLE_H_\n#define RECTANGLE_H_\n\nclass Rectangle {\npublic:\nint Area();\n\nint height_;\nint width_;\n};\n\nint Rectangle::Area() {\nreturn height_ * width_;\n}\n#endif  // RECTANGLE_H_\n</code></pre> <p>\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u306b\u306f\u3001 \u660e\u793a\u7684\u306b <code>inline</code> \u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> rectangle.h <pre><code>#ifndef RECTANGLE_H_\n#define RECTANGLE_H_\n\nclass Rectangle {\npublic:\nint Area();\n\nint height_;\nint width_;\n};\n\ninline int Rectangle::Area() {\nreturn height_ * width_;\n}\n\n#endif  // RECTANGLE_H_\n</code></pre>"},{"location":"ch07-02-member-functions/#const","title":"const \u30e1\u30f3\u30d0\u95a2\u6570","text":"<p>\u5f15\u6570\u30ea\u30b9\u30c8\u306e\u3042\u3068\u306b <code>const</code> \u3092\u3064\u3051\u308b\u3053\u3068\u3067 <code>const</code> \u30e1\u30f3\u30d0\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nint Area() const;\n};\n</code></pre> <p><code>const</code> \u30e1\u30f3\u30d0\u95a2\u6570\u3067\u306f\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code>class Rectangle {\npublic:\nint Area() const;\n\nint height_;\nint width_;\n};\n\nint Rectangle::Area() const {\nheight_ = 0;  // \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u5909\u66f4\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\nreturn height_ * width_;\n}\n</code></pre> <p><code>const</code> \u30e1\u30f3\u30d0\u95a2\u6570\u306f\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u5909\u66f4\u3057\u306a\u3044\u305f\u3081\u3001 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u305a\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u5909\u66f4\u3057\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u3092\u6e80\u305f\u3059\u305f\u3081\u306b\u3001 <code>const</code> \u30e1\u30f3\u30d0\u95a2\u6570\u304b\u3089\u547c\u3073\u51fa\u305b\u308b\u30e1\u30f3\u30d0\u95a2\u6570\u306f <code>const</code> \u30e1\u30f3\u30d0\u95a2\u6570\u306b\u9650\u5b9a\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ch07-02-member-functions/#this","title":"this \u30dd\u30a4\u30f3\u30bf","text":"<p>\u30e1\u30f3\u30d0\u95a2\u6570\u3067\u306f <code>this</code> \u3067\u81ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nint Area();\n\nint height_;\nint width_;\n};\n\nint Rectangle::Area() {\n// this \u30dd\u30a4\u30f3\u30bf\u7d4c\u7531\u3067\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u4f7f\u7528\nreturn this-&gt;height_ * this-&gt;width_;\n}\n</code></pre>"},{"location":"ch07-03-inheritance/","title":"\u7d99\u627f","text":"<p>\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0 (\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3068\u30e1\u30f3\u30d0\u95a2\u6570) \u3092\u5f15\u304d\u7d99\u3044\u3067 \u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3092\u7d99\u627f\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u9577\u65b9\u5f62\u3092\u6271\u3046 <code>Rectangle</code> \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066 \u6b63\u65b9\u5f62\u3092\u6271\u3046 <code>Square</code> \u30af\u30e9\u30b9\u3092\u4f5c\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nclass Rectangle {\npublic:\nint Area() const {\nreturn height_ * width_;\n}\n\nint height_;\nint width_;\n};\n\nclass Square : public Rectangle {\npublic:\nvoid SetSize(int size) {\nheight_ = size;\nwidth_ = size;\n}\n};\n\nint main() {\nSquare s;\ns.SetSize(10);\nstd::cout &lt;&lt; s.Area() &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> <p><code>Square</code> \u30af\u30e9\u30b9\u3067\u306f <code>Rectangle</code> \u30af\u30e9\u30b9\u306e\u5168\u30e1\u30f3\u30d0\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u30e1\u30f3\u30d0\u95a2\u6570 <code>SetSize</code> \u3067 <code>Rectangle</code> \u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0 <code>height_</code> \u3068 <code>width_</code> \u3092\u53c2\u7167\u3057\u305f\u308a\u3001 \u30e1\u30f3\u30d0\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3067 <code>s.Area</code> \u3068\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u7d99\u627f\u3092\u884c\u3063\u305f\u5834\u5408\u3082\u30e1\u30f3\u30d0\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001 <code>Square</code> \u30af\u30e9\u30b9\u3067\u306f <code>Rectangle</code> \u30af\u30e9\u30b9\u306b\u306f\u306a\u3044\u30e1\u30f3\u30d0\u95a2\u6570 <code>SetSize</code> \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ch07-03-inheritance/#_2","title":"\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u6d3e\u751f\u30af\u30e9\u30b9","text":"<p>\u7d99\u627f\u306e\u5143\u306b\u306a\u3063\u305f\u30af\u30e9\u30b9\u306e\u3053\u3068\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u3001 \u7d99\u627f\u3057\u3066\u4f5c\u3063\u305f\u30af\u30e9\u30b9\u306e\u3053\u3068\u3092\u6d3e\u751f\u30af\u30e9\u30b9\u3068\u3044\u3044\u307e\u3059\u3002</p> <p><code>Rectangle</code> \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066 <code>Square</code> \u30af\u30e9\u30b9\u3092\u4f5c\u308b\u5834\u5408\u3001 <code>Rectangle</code> \u30af\u30e9\u30b9\u304c\u57fa\u5e95\u30af\u30e9\u30b9\u3001 <code>Square</code> \u30af\u30e9\u30b9\u304c\u6d3e\u751f\u30af\u30e9\u30b9\u3068\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ch07-03-inheritance/#_3","title":"\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50","text":"<p>\u30e1\u30f3\u30d0\u3092\u53c2\u7167\u3067\u304d\u308b\u7bc4\u56f2\u306f\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306b\u3088\u3063\u3066\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306b\u306f\u6b21\u306e3\u3064\u304c\u3042\u308a\u307e\u3059\u3002</p> \u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50 \u81ea\u30af\u30e9\u30b9 \u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9 \u305d\u306e\u4ed6 public protected private <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>private</code> \u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ch07-03-inheritance/#_4","title":"\u30e1\u30f3\u30d0\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50","text":"<p><code>private</code> \u306b\u3059\u308b\u3068\u81ea\u30af\u30e9\u30b9\u5185\u3067\u306e\u307f\u30e1\u30f3\u30d0\u304c\u53c2\u7167\u3067\u304d\u307e\u3059\u3002</p> <p>private_member.cc</p> <pre><code>class Rectangle {\npublic:\nint Area() const {\nheight_ * width_;  // \u53c2\u7167\u53ef\n}\n\nprivate:\nint height_;\nint width_;\n};\n\nclass Square : public Rectangle {\npublic:\nvoid SetSize(int size) {\nheight_ = size;  // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\nwidth_ = size;   // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\n}\n};\n\nint main() {\nRectangle r;\nr.height_ = 10;  // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\nr.width_ = 20;   // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\nSquare s;\ns.SetSize(10);\nreturn 0;\n}\n</code></pre> <p><code>protected</code> \u306b\u3059\u308b\u3068\u81ea\u30af\u30e9\u30b9\u5185\u306b\u52a0\u3048\u3001\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u5185\u3067\u3082\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>protected_member.cc</p> <pre><code>class Rectangle {\npublic:\nint Area() const {\nheight_ * width_;  // \u53c2\u7167\u53ef\n}\n\nprotected:\nint height_;\nint width_;\n};\n\nclass Square : public Rectangle {\npublic:\nvoid SetSize(int size) {\nheight_ = size;  // \u53c2\u7167\u53ef\nwidth_ = size;   // \u53c2\u7167\u53ef\n}\n};\n\nint main() {\nRectangle r;\nr.height_ = 10;  // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\nr.width_ = 20;   // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\nSquare s;\ns.SetSize(10);\nreturn 0;\n}\n</code></pre> <p><code>public</code> \u306b\u3059\u308b\u3068\u53c2\u7167\u3067\u304d\u308b\u7bc4\u56f2\u306e\u5236\u9650\u306f\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>public_member.cc</p> <pre><code>class Rectangle {\npublic:\nint Area() const {\nheight_ * width_;  // \u53c2\u7167\u53ef\n}\n\npublic:\nint height_;\nint width_;\n};\n\nclass Square : public Rectangle {\npublic:\nvoid SetSize(int size) {\nheight_ = size;  // \u53c2\u7167\u53ef\nwidth_ = size;   // \u53c2\u7167\u53ef\n}\n};\n\nint main() {\nRectangle r;\nr.height_ = 10;  // \u53c2\u7167\u53ef\nr.width_ = 20;   // \u53c2\u7167\u53ef\n\nSquare s;\ns.SetSize(10);\nreturn 0;\n}\n</code></pre> <p>\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306f\u6b21\u306e\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c\u51fa\u73fe\u3059\u308b\u307e\u3067\u304c\u6709\u52b9\u7bc4\u56f2\u3068\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306f\u4f55\u5ea6\u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class AccessSpecifier {\nvoid Private1();  // \u30c7\u30d5\u30a9\u30eb\u30c8\u306f private\n\npublic:\nvoid Public1();\nvoid Public2();\n\npublic:  // \u5bfe\u8c61\u3068\u306a\u308b\u30e1\u30f3\u30d0\u304c\u306a\u304f\u3066\u3082\u554f\u984c\u306a\u3057\nprivate:\nvoid Private2();\n\nprivate:  // \u30a2\u30af\u30bb\u30b9\u30ec\u30d9\u30eb\u306e\u5909\u5316\u304c\u306a\u304f\u3066\u3082\u554f\u984c\u306a\u3057\nvoid Private3();\n};\n</code></pre> <p>\u8aad\u307f\u3065\u3089\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3092\u9632\u3050\u305f\u3081\u3001 \u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u3067\u6307\u5b9a\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch07-03-inheritance/#_5","title":"\u7d99\u627f\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50","text":"<p>\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u306f\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306b\u3088\u3063\u3066 \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u3092\u53c2\u7167\u3067\u304d\u308b\u7bc4\u56f2\u3092\u3055\u3089\u306b\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>private</code> \u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>class Base {};\n\nclass Sub1 : public Base {};  // public \u7d99\u627f\nclass Sub2 : protected Base {};  // protected \u7d99\u627f\nclass Sub3 : private Base {};  // private \u7d99\u627f\nclass Sub4 : Base {};  // private \u7d99\u627f (\u30c7\u30d5\u30a9\u30eb\u30c8)\n</code></pre> <p>\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u5b9f\u88c5\u3092\u884c\u3046\u5834\u5408\u306b\u306f <code>public</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306f \u6d3e\u751f\u30af\u30e9\u30b9 - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-04-polymorphism/","title":"\u591a\u614b\u6027","text":""},{"location":"ch07-04-polymorphism/#_2","title":"\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8","text":"<p>\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u53c2\u7167\u3084\u30dd\u30a4\u30f3\u30bf\u304b\u3089 \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u53c2\u7167\u3084\u30dd\u30a4\u30f3\u30bf\u3078\u306e\u578b\u5909\u63db\u3092\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u306b\u3088\u3063\u3066\u3001 \u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u53c2\u7167\u307e\u305f\u306f\u30dd\u30a4\u30f3\u30bf\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>polymorphism_upcast.cc</p> <pre><code>#include &lt;iostream&gt;\n\nclass Rectangle {\npublic:\nint Area() const {\nreturn height_ * width_;\n}\n\nint height_;\nint width_;\n};\n\nclass Square : public Rectangle {\npublic:\nvoid SetSize(int size) {\nheight_ = size;\nwidth_ = size;\n}\n};\n\nint main() {\nSquare s;\ns.SetSize(10);\n\nconst Rectangle&amp; r = s;\nstd::cout &lt;&lt; \"area = \" &lt;&lt; r.Area() &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f <code>Square</code> \u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 <code>s</code> \u3092 <code>Rectangle</code> \u30af\u30e9\u30b9\u306e\u53c2\u7167 <code>r</code> \u3067\u6271\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u306f\u6697\u9ed9\u7684\u306b\u884c\u308f\u308c\u308b\u305f\u3081\u3001\u660e\u793a\u7684\u306b\u578b\u5909\u63db\u3092\u884c\u3046\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"ch07-04-polymorphism/#_3","title":"\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8","text":"<p>\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u53c2\u7167\u3084\u30dd\u30a4\u30f3\u30bf\u304b\u3089 \u6d3e\u751f\u30af\u30e9\u30b9\u306e\u53c2\u7167\u3084\u30dd\u30a4\u30f3\u30bf\u3078\u306e\u578b\u5909\u63db\u3092\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u884c\u308f\u306a\u3044\u3067\u6e08\u3080\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002 \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-04-polymorphism/#_4","title":"\u4eee\u60f3\u95a2\u6570\u3068\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9","text":"<p>\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u6319\u52d5\u3092\u5909\u66f4\u3067\u304d\u308b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u4eee\u60f3\u95a2\u6570\u3068\u3044\u3044\u307e\u3059\u3002 \u4eee\u60f3\u95a2\u6570\u306b\u3059\u308b\u306b\u306f\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306b <code>virtual</code> \u3092\u3064\u3051\u307e\u3059\u3002</p> <p>\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u4eee\u60f3\u95a2\u6570\u306e\u6319\u52d5\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3068\u3044\u3044\u307e\u3059\u3002 \u6d3e\u751f\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u884c\u3046\u306b\u306f\u3001\u4eee\u60f3\u95a2\u6570\u30b7\u30b0\u30cb\u30c1\u30e3\uff08\u5f15\u6570\u306e\u578b\u3084 <code>const</code> \u4fee\u98fe\u306e\u6709\u7121\uff09\u3092\u53b3\u5bc6\u4e00\u81f4\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u3042\u308b\u3053\u3068\u3092\u660e\u78ba\u5316\u3059\u308b\u305f\u3081\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306b\u306f <code>override</code> \u3092\u3064\u3051\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002</p> <p><code>override</code> \u306b\u3064\u3044\u3066</p> <p><code>override</code> \u306f\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u30df\u30b9\u3084\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u4ed5\u69d8\u5909\u66f4\u306b\u3088\u308a\u3001 \u95a2\u6570\u30b7\u30b0\u30cb\u30c1\u30e3\u304c\u53b3\u5bc6\u4e00\u81f4\u3057\u306a\u304f\u306a\u3063\u305f\u969b\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306b\u5931\u6557\u3059\u308b\u3068\u3044\u3046 \u30c8\u30e9\u30d6\u30eb\u3092\u9632\u3050\u305f\u3081\u306b\u5c0e\u5165\u3055\u308c\u305f\u4ed5\u7d44\u307f\u3067\u3059\u3002 <code>override</code> \u3092\u3064\u3051\u306a\u304f\u3066\u3082\u95a2\u6570\u30b7\u30b0\u30cb\u30c1\u30e3\u3055\u3048\u53b3\u5bc6\u4e00\u81f4\u3059\u308c\u3070\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u306f\u53ef\u80fd\u3067\u3059\u304c \u30c8\u30e9\u30d6\u30eb\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u306b\u306f\u5e38\u306b\u3064\u3051\u305f\u307b\u3046\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002</p> <p>\u53c2\u8003\uff1aoverride\u3068final - cpprefjp</p> <p>polymorphism_override.cc</p> <pre><code>#include &lt;iostream&gt;\n\nclass Rectangle {\npublic:\nvirtual void Describe() const {\nstd::cout &lt;&lt; \"height = \" &lt;&lt; height_ &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"width = \" &lt;&lt; width_ &lt;&lt; std::endl;\n}\n\nint height_;\nint width_;\n};\n\nclass Square : public Rectangle {\npublic:\nvoid SetSize(int size) {\nheight_ = size;\nwidth_ = size;\n}\n\nvoid Describe() const override {\nstd::cout &lt;&lt; \"size = \" &lt;&lt; height_ &lt;&lt; std::endl;\n}\n};\n\nint main() {\nSquare s;\ns.SetSize(10);\n\nconst Rectangle&amp; r = s;\nr.Describe();\nreturn 0;\n}\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>size = 10\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f\u30e1\u30f3\u30d0\u95a2\u6570 <code>Describe</code> \u304c\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001 <code>Rectangle</code> \u30af\u30e9\u30b9\u3067\u306f\u306a\u304f <code>Square</code> \u30af\u30e9\u30b9\u306e <code>Describe</code> \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ch07-04-polymorphism/#_5","title":"\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\u3068\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9","text":"<p>\u5b9a\u7fa9\u3092\u3082\u305f\u306a\u3044\u4eee\u60f3\u95a2\u6570\u3092\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\u3068\u3044\u3044\u307e\u3059\u3002 \u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\u306b\u3059\u308b\u306b\u306f\u4eee\u60f3\u95a2\u6570\u306b <code>= 0</code> \u3092\u3064\u3051\u307e\u3059\u3002</p> <pre><code>class Polygon {\npublic:\nvirtual int Area() const = 0;\n};\n</code></pre> <p>\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\u304c\u3042\u308b\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> <p>C++ \u306b\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30af\u30e9\u30b9\u3092\u3064\u304f\u308b\u305f\u3081\u306e\u5c02\u7528\u306e\u8a18\u6cd5\u306f\u306a\u3044\u305f\u3081\u3001 \u30e1\u30f3\u30d0\u95a2\u6570\u304c\u3059\u3079\u3066\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\u3067\u3042\u308b\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002</p> <pre><code>class Polygon {\npublic:\nvirtual int Area() const = 0;\n};\n\nclass Rectangle : public Polygon {\npublic:\nint Area() const override {\nreturn height_ * width_;\n}\n\nint height_;\nint width_;\n};\n</code></pre>"},{"location":"ch07-05-constructors/","title":"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf","text":"<p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3044\u307e\u3059\u3002 \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u30af\u30e9\u30b9\u540d\u3068\u540c\u3058\u540d\u524d\u3067\u623b\u308a\u5024\u304c\u306a\u3044\u95a2\u6570\u304c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nRectangle(int height, int width);\nint Area() const;\n\nprivate:\nconst int height_;\nconst int width_;\n};\n</code></pre> <p>\u3053\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Rectangle r(10, 20);\n</code></pre>"},{"location":"ch07-05-constructors/#_2","title":"\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u521d\u671f\u5316","text":"<p>\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u521d\u671f\u5316\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nRectangle(int height, int width) : height_(height), width_(width) {}\nint Area() const {\nreturn height_ * width_;\n}\n\nprivate:\nconst int height_;\nconst int width_;\n};\n</code></pre> <p>\u521d\u671f\u5316\u306f\u5024\u306e\u5909\u66f4\u3067\u306f\u306a\u3044\u305f\u3081\u3001 \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3055\u308c\u305f\u5024\u304b\u3089 <code>const</code> \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ch07-05-constructors/#_3","title":"\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u5b9a\u7fa9","text":"<p>\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nRectangle(int height, int width);\nint Area() const {\nreturn height_ * width_;\n}\n\nprivate:\nconst int height_;\nconst int width_;\n};\n\nRectangle::Rectangle(int height, int width) : height_(height), width_(width) {}\n</code></pre>"},{"location":"ch07-05-constructors/#_4","title":"\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf","text":"<p>\u5024\u30921\u3064\u3082\u53d7\u3051\u53d6\u3089\u306a\u3044\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3044\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nRectangle() : height_(0), width_(0) {}\nint Area() const {\nreturn height_ * width_;\n}\n\nprivate:\nconst int height_;\nconst int width_;\n};\n</code></pre> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Rectangle r;\n</code></pre> <p>\u660e\u793a\u7684\u306b\u5b9a\u7fa9\u3059\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c1\u3064\u3082\u306a\u3044\u5834\u5408\u306e\u307f\u3001 \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u6697\u9ed9\u7684\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p>"},{"location":"ch07-05-constructors/#_5","title":"\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf","text":"<p>\u305d\u306e\u30af\u30e9\u30b9\u306e\u53c2\u7167\u3060\u3051\u3092\u53d7\u3051\u53d6\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3044\u307e\u3059\u3002</p> <pre><code>class Copyable {\npublic:\nCopyable();  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nCopyable(const Copyable&amp; c);  // \u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n};\n</code></pre> <p>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Copyable c1;  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nCopyable c2(c1);  // \u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n</code></pre> <p><code>const</code> \u3067\u306f\u306a\u3044\u53c2\u7167\u3067\u3042\u3063\u3066\u3082\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306a\u308a\u307e\u3059\u304c\u3001 \u30b3\u30d4\u30fc\u5143\u3092\u5909\u66f4\u305b\u305a\u306b\u30b3\u30d4\u30fc\u3092\u884c\u3046\u305f\u3081\u306b <code>const</code> \u306e\u53c2\u7167\u306b\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002</p> <p>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u306f\u3001 \u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u6697\u9ed9\u7684\u306b\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002</p> \u6697\u9ed9\u7684\u306b\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u30b1\u30fc\u30b9 <p>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u3042\u3063\u3066\u3082\u3001 \u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u306b\u306f\u6697\u9ed9\u7684\u306a\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5b9a\u7fa9\u306f\u884c\u308f\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>\u6761\u4ef6\u306e\u4e00\u4f8b\u3068\u3057\u3066\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30b3\u30d4\u30fc\u3067\u304d\u306a\u3044\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u3082\u3064</li> <li>\u53f3\u8fba\u5024\u53c2\u7167\u578b\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u3082\u3064</li> <li>\u4e0b\u8a18\u306e\u3044\u305a\u308c\u304b\u304c\u660e\u793a\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b<ul> <li>\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50</li> </ul> </li> </ul> <p>\u8a73\u7d30\u306f \u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-05-constructors/#_6","title":"\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf","text":"<p>\u305d\u306e\u30af\u30e9\u30b9\u306e\u53f3\u8fba\u5024\u53c2\u7167\u3060\u3051\u3092\u53d7\u3051\u53d6\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3044\u307e\u3059\u3002</p> <pre><code>class Movable {\npublic:\nMovable();  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nMovable(Movable&amp;&amp; m);  // \u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n};\n</code></pre> <p>\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Movable m1;  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nMovable m2(std::move(m1));  // \u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n</code></pre> <p>\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u306f\u3001 \u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u6697\u9ed9\u7684\u306b\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002</p> \u6697\u9ed9\u7684\u306b\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u30b1\u30fc\u30b9 <p>\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u3042\u3063\u3066\u3082\u3001 \u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u306b\u306f\u6697\u9ed9\u7684\u306a\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5b9a\u7fa9\u306f\u884c\u308f\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>\u6761\u4ef6\u306e\u4e00\u4f8b\u3068\u3057\u3066\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30e0\u30fc\u30d6\u3067\u304d\u306a\u3044\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u3082\u3064</li> <li>\u4e0b\u8a18\u306e\u3044\u305a\u308c\u304b\u304c\u660e\u793a\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b<ul> <li>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50</li> <li>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50</li> <li>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf</li> </ul> </li> </ul> <p>\u8a73\u7d30\u306f \u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-05-constructors/#explicit","title":"\u5909\u63db\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068 explicit","text":"<p>\u5024\u30921\u3064\u3060\u3051\u53d7\u3051\u53d6\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5909\u63db\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3044\u307e\u3059\u3002 \u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3084\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3082\u5909\u63db\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u3059\u3002</p> <pre><code>class Square {\npublic:\nSquare(int size) : size_(size) {}\nint Area() const {\nreturn size_ * size_;\n}\n\nprivate:\nint size_;\n};\n</code></pre> <p>\u53d7\u3051\u53d6\u308b\u5024\u304c2\u500b\u306e\u5834\u5408\u3068\u540c\u69d8\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Square s(10);\n</code></pre> <p>\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u305f\u5834\u5408\u3001 <code>int</code> \u304b\u3089 <code>Square</code> \u3078\u306e\u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u3067\u5909\u63db\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <pre><code>Square s = 10;\n</code></pre> <p>\u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u3067\u4f7f\u7528\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u306b\u306f \u5909\u63db\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b <code>explicit</code> \u3092\u3064\u3051\u307e\u3059\u3002</p> <p>\u6697\u9ed9\u7684\u306a\u578b\u5909\u63db\u3092\u610f\u56f3\u3057\u3066\u4f7f\u7528\u3059\u308b\u5834\u5408\u3092\u9664\u304d\u3001 \u53d7\u3051\u53d6\u308b\u5024\u304c1\u3064\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306f <code>explicit</code> \u3092\u3064\u3051\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <p>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</p> <p>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092 <code>explicit</code> \u306b\u3059\u308b\u3068 \u95a2\u6570\u306e\u623b\u308a\u5024\u3067\u5024\u6e21\u3057\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002 \u4e00\u822c\u7684\u306b\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f <code>explicit</code> \u306b\u306f\u3057\u307e\u305b\u3093\u3002</p> <pre><code>class Square {\npublic:\nexplicit Square(int size) : size_(size) {}\nint Area() const {\nreturn size_ * size_;\n}\n\nprivate:\nint size_;\n};\n</code></pre> <p><code>explicit</code> \u3092\u3064\u3051\u308b\u3068\u4ee5\u4e0b\u306e\u8a18\u8ff0\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>Square s = 10;\n</code></pre>"},{"location":"ch07-05-constructors/#_7","title":"\u7d99\u627f","text":"<p>\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6697\u9ed9\u7684\u306b\u547c\u3073\u51fa\u3057\u307e\u3059\u3002</p> <p>constructor_inheritance.cc</p> <pre><code>#include &lt;iostream&gt;\n\nclass Rectangle {\npublic:\nRectangle() : height_(0), width_(0) {\nstd::cout &lt;&lt; \"Rectangle::Rectangle() is called.\" &lt;&lt; std::endl;\n}\nint Area() const {\nreturn height_ * width_;\n}\n\nprivate:\nconst int height_;\nconst int width_;\n};\n\nclass Square : public Rectangle {\npublic:\nSquare() {\nstd::cout &lt;&lt; \"Square::Square() is called.\" &lt;&lt; std::endl;\n}\n};\n\nint main() {\nSquare s;  // Square \u30af\u30e9\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\nstd::cout &lt;&lt; \"area = \" &lt;&lt; s.Area() &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>Rectangle::Rectangle() is called.\nSquare::Square() is called.\narea = 0\n</code></pre> <p>\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5b9f\u884c\u9806\u5e8f\u306f\u3001\u5fc5\u305a\u6b21\u306e\u9806\u5e8f\u306b\u306a\u308a\u307e\u3059\u3002</p> <ol> <li>\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> </ol> <p>\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u660e\u793a\u7684\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class Rectangle {\npublic:\nRectangle(int height, int width) : height_(height), width_(width) {}\n\nint Area() const {\nreturn height_ * width_;\n}\n\nprivate:\nconst int height_;\nconst int width_;\n};\n\nclass Square : public Rectangle {\npublic:\nSquare(int size) : Rectangle(size, size) {}\n};\n</code></pre>"},{"location":"ch07-06-destructors/","title":"\u30c7\u30b9\u30c8\u30e9\u30af\u30bf","text":"<p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7834\u68c4\u3059\u308b\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3044\u3044\u307e\u3059\u3002 \u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u3092\u884c\u3046\u305f\u3081\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p><code>~</code> \u306b\u30af\u30e9\u30b9\u540d\u3092\u3064\u3051\u305f\u540d\u524d\u3067\u623b\u308a\u5024\u304c\u306a\u3044\u95a2\u6570\u304c\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306a\u308a\u307e\u3059\u3002 \u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u5f15\u6570\u3092\u3082\u3061\u307e\u305b\u3093\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nclass DynamicArray {\npublic:\nDynamicArray(int size, int initial_value) {\ndata_ = new int[size];\nfor (auto i = 0; i &lt; size; ++i) {\ndata_[i] = initial_value;\n}\n}\n\n~DynamicArray() {\nstd::cout &lt;&lt; \"DynamicArray::~DynamicArray() is called.\" &lt;&lt; std::endl;\ndelete[] data_;\n}\nvoid Set(int index, int value) {\ndata_[index] = value;\n}\n\nint Get(int index) const {\nreturn data_[index];\n}\n\nprivate:\nint* data_;\n};\n\nint main() {\nDynamicArray d(5, 1);\nstd::cout &lt;&lt; d.Get(2) &lt;&lt; std::endl;\nd.Set(2, 10);\nstd::cout &lt;&lt; d.Get(2) &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre> <p>\u660e\u793a\u7684\u306b\u5b9a\u7fa9\u3057\u306a\u3044\u5834\u5408\u3001 \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u6697\u9ed9\u7684\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p>"},{"location":"ch07-06-destructors/#_2","title":"\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u66f8\u304b\u306a\u3044","text":"<p>\u4e0b\u306b\u7d39\u4ecb\u3059\u308bRAII\u306e\u305f\u3081\u3092\u9664\u3044\u3066\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u66f8\u304f\u6a5f\u4f1a\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u306a\u305c\u306a\u3089\u3070RAII\u6280\u6cd5\u304c\u4f7f\u308f\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u30af\u30e9\u30b9\u3092\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u6301\u3064\u3060\u3051\u3067\u305d\u308c\u3089\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u81ea\u52d5\u7684\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u304b\u3089\u3067\u3059\u3002</p> <p>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9( <code>= default</code> \u6307\u5b9a\u3082\u542b\u3080)\u3057\u305f\u5834\u5408\u3001\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf/\u4ee3\u5165\u6f14\u7b97\u5b50\u304c\u81ea\u52d5\u5b9a\u7fa9\u3055\u308c\u306a\u304f\u306a\u308a\u3001\u307e\u305f\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf/\u4ee3\u5165\u6f14\u7b97\u5b50\u306f\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3082\u306e\u306e\u975e\u63a8\u5968(=\u4f7f\u3063\u3066\u306f\u3044\u3051\u306a\u3044)\u306b\u306a\u308b\u306e\u3067\u3001\u6b8b\u308a\u306e\u7279\u6b8a\u30e1\u30f3\u30d0\u95a2\u6570\u3082\u3059\u3079\u3066\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"ch07-06-destructors/#_3","title":"\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304b\u3089\u4f8b\u5916\u3092\u6295\u3052\u3066\u306f\u3044\u3051\u306a\u3044","text":"<p>C++11\u304b\u3089\u306f\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u6697\u9ed9\u306e\u3046\u3061\u306b <code>noexcept</code> \u6307\u5b9a\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304b\u3089\u4f8b\u5916\u3092\u6295\u3052\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u8a73\u3057\u304f\u306f\u4f8b\u5916\u306e\u89e3\u8aac\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-06-destructors/#raiiresource-acquisition-is-initialization","title":"RAII(Resource Acquisition Is Initialization)","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u6642\u306b\u3064\u304d\u307e\u3068\u3046\u306e\u304c\u30ea\u30bd\u30fc\u30b9\u306e\u7ba1\u7406\u3067\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u3068\u306f\u4f8b\u3048\u3070\u30e1\u30e2\u30ea\u30fc\u3084\u3001\u30d5\u30a1\u30a4\u30eb\u30dd\u30a4\u30f3\u30bf\u3001\u30cf\u30f3\u30c9\u30eb\u306a\u3069\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002</p> <p>\u30af\u30e9\u30b9\u5909\u6570\u306e\u5bff\u547d\u304c\u5c3d\u304d\u305f\u6642\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u308b\u3068\u3044\u3046\u6027\u8cea\u3092\u5229\u7528\u3057\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u5272\u308a\u5f53\u3066\u3068\u958b\u653e\u3092\u7d10\u4ed8\u3051\u3066\u7ba1\u7406\u3059\u308b\u6280\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092RAII\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u3082\u3063\u3068\u3082\u983b\u7e41\u306b\u63a5\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3067\u3042\u308b\u30e1\u30e2\u30ea\u30fc\u306b\u3064\u3044\u3066\u306f\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3088\u308b\u89e3\u6c7a\u3092\u8a66\u307f\u308b\u8a00\u8a9e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u30e1\u30e2\u30ea\u30fc\u4ee5\u5916\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u7ba1\u7406\u306b\u56f0\u308a\u307e\u3059\u3002</p> <p>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6301\u305f\u305a\u306b RAII \u3092\u5b9f\u73fe\u3067\u304d\u308b\u8a00\u8a9e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4e00\u822c\u306b\u4f55\u3089\u304b\u306e\u660e\u793a\u7684\u306a\u51e6\u7406\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070 Python \u306e <code>with</code> \u6587\u3001C#\u306e <code>using</code> \u6587\u306a\u3069\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002</p> <p>RAII\u6280\u6cd5\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u304d\u306b\u306f\u305f\u3060\u4e00\u3064\u306e\u30ea\u30bd\u30fc\u30b9\u306e\u307f\u3092\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3070\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u547c\u3070\u308c\u305a\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u958b\u653e\u6f0f\u308c\u304c\u767a\u751f\u3059\u308b\u304b\u3089\u3067\u3059</p> <pre><code>// \u8907\u6570\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u2192\u00d7\nclass inferior {\npublic:\ninferior() {\ndata1_ = new int();\ndata2_ = new int();//\u3053\u306enew\u306b\u5931\u6557\u3059\u308b\u3068data1_\u306f\u958b\u653e\u3055\u308c\u306a\u3044\n}\n~inferior() noexcept {\ndelete data1_;\ndelete data2_;\n}\nprivate:\nint* data1_;\nint* data2_;\n};\n// \u305f\u3060\u3072\u3068\u3064\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308b\nclass resource {\npublic:\nresource() {\ndata_ = new int();//\u3053\u306enew\u306b\u5931\u6557\u3057\u3066\u3082\u958b\u653e\u3059\u308b\u3079\u304d\u3082\u306e\u306f\u306a\u3044\n}\n~resource() noexcept {\ndelete data_;\n}\nprivate:\nint* data_;\n}\n// RAII\u6280\u6cd5\u304c\u4f7f\u308f\u308c\u305f\u3060\u3072\u3068\u3064\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9\u3092\u8907\u6570\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u3068\u3057\u3066\u6301\u3064\u2192\u25cb\nclass good {\nresource data1_;\nresource data2_;\n}\n</code></pre>"},{"location":"ch07-06-destructors/#_4","title":"\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u5b9a\u7fa9","text":"<p>\u30af\u30e9\u30b9\u5ba3\u8a00\u3068\u306f\u5225\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class DynamicArray {\npublic:\nDynamicArray(int size, int initial_value) {\ndata_ = new int[size];\nfor (auto i = 0; i &lt; size; ++i) {\ndata_[i] = initial_value;\n}\n}\n\n~DynamicArray();\nvoid Set(int index, int value) {\ndata_[index] = value;\n}\n\nint Get(int index) const {\nreturn data_[index];\n}\n\nprivate:\nint* data_;\n};\n\nDynamicArray::~DynamicArray() {\nstd::cout &lt;&lt; \"DynamicArray::~DynamicArray() is called.\" &lt;&lt; std::endl;\ndelete[] data_;\n}\n</code></pre>"},{"location":"ch07-06-destructors/#_5","title":"\u7d99\u627f","text":"<p>\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6697\u9ed9\u7684\u306b\u547c\u3073\u51fa\u3057\u307e\u3059\u3002</p> <p>destructor_inheritance.cc</p> <pre><code>#include &lt;iostream&gt;\n\nclass BasicArray {\npublic:\n~BasicArray() {\nstd::cout &lt;&lt; \"BasicArray::~BasicArray() is called.\" &lt;&lt; std::endl;\n}\nvirtual void Set(int index, int value) = 0;\nvirtual int Get(int index) const = 0;\n};\n\nclass DynamicArray : public BasicArray {\npublic:\nDynamicArray(int size, int initial_value) {\ndata_ = new int[size];\nfor (auto i = 0; i &lt; size; ++i) {\ndata_[i] = initial_value;\n}\n}\n\n~DynamicArray() {\nstd::cout &lt;&lt; \"DynamicArray::~DynamicArray() is called.\" &lt;&lt; std::endl;\ndelete[] data_;\n}\nvoid Set(int index, int value) { data_[index] = value; }\n\nint Get(int index) const { return data_[index]; }\n\nprivate:\nint* data_;\n};\n\nint main() {\nDynamicArray d(5, 1);\nstd::cout &lt;&lt; d.Get(2) &lt;&lt; std::endl;\nd.Set(2, 10);\nstd::cout &lt;&lt; d.Get(2) &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>1\n10\nDynamicArray::~DynamicArray() is called.\nBasicArray::~BasicArray() is called.\n</code></pre> <p>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5b9f\u884c\u9806\u5e8f\u306f\u3001\u5fc5\u305a\u6b21\u306e\u9806\u5e8f\u306b\u306a\u308a\u307e\u3059\u3002</p> <ol> <li>\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf</li> </ol>"},{"location":"ch07-06-destructors/#_6","title":"\u4eee\u60f3\u30c7\u30b9\u30c8\u30e9\u30af\u30bf","text":"<p>\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u6271\u3046\u5834\u5408\u3001 \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3060\u3051\u304c\u547c\u3073\u51fa\u3055\u308c\u3066 \u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u547c\u3073\u51fa\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>destructor_non_virtual.cc</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nclass BasicArray {\npublic:\n~BasicArray() {\nstd::cout &lt;&lt; \"BasicArray::~BasicArray() is called.\" &lt;&lt; std::endl;\n}\nvirtual void Set(int index, int value) = 0;\nvirtual int Get(int index) const = 0;\n};\n\nclass DynamicArray : public BasicArray {\npublic:\nDynamicArray(int size, int initial_value) {\ndata_ = new int[size];\nfor (auto i = 0; i &lt; size; ++i) {\ndata_[i] = initial_value;\n}\n}\n\n~DynamicArray() {\nstd::cout &lt;&lt; \"DynamicArray::~DynamicArray() is called.\" &lt;&lt; std::endl;\ndelete[] data_;\n}\nvoid Set(int index, int value) { data_[index] = value; }\n\nint Get(int index) const { return data_[index]; }\n\nprivate:\nint* data_;\n};\n\nint main() {\nstd::unique_ptr&lt;BasicArray&gt; b(new DynamicArray(5, 1));\nstd::cout &lt;&lt; b-&gt;Get(2) &lt;&lt; std::endl;\nb-&gt;Set(2, 10);\nstd::cout &lt;&lt; b-&gt;Get(2) &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f \u6d3e\u751f\u30af\u30e9\u30b9 <code>DynamicArray</code> \u3092\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u3057\u3066 \u57fa\u5e95\u30af\u30e9\u30b9 <code>BasicArray</code> \u306e\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u3067\u6271\u3063\u3066\u3044\u307e\u3059\u3002</p> <p>\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>1\n10\nBasicArray::~BasicArray() is called.\n</code></pre> <p><code>DynamicArray</code> \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u3066\u304a\u3089\u305a\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u9632\u3050\u305f\u3081\u306b\u3001 \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u4eee\u60f3\u95a2\u6570\u306b\u3057\u307e\u3059\u3002 \u6d3e\u751f\u30af\u30e9\u30b9\u3067\u306f\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u305f\u3081 <code>override</code> \u3092\u3064\u3051\u307e\u3059\u3002</p> <p>destructor_virtual.cc</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nclass BasicArray {\npublic:\nvirtual ~BasicArray() {\nstd::cout &lt;&lt; \"BasicArray::~BasicArray() is called.\" &lt;&lt; std::endl;\n}\n\nvirtual void Set(int index, int value) = 0;\nvirtual int Get(int index) const = 0;\n};\n\nclass DynamicArray : public BasicArray {\npublic:\nDynamicArray(int size, int initial_value) {\ndata_ = new int[size];\nfor (auto i = 0; i &lt; size; ++i) {\ndata_[i] = initial_value;\n}\n}\n\n~DynamicArray() override {\nstd::cout &lt;&lt; \"DynamicArray::~DynamicArray() is called.\" &lt;&lt; std::endl;\ndelete[] data_;\n}\n\nvoid Set(int index, int value) { data_[index] = value; }\n\nint Get(int index) const { return data_[index]; }\n\nprivate:\nint* data_;\n};\n\nint main() {\nstd::unique_ptr&lt;BasicArray&gt; b(new DynamicArray(5, 1));\nstd::cout &lt;&lt; b-&gt;Get(2) &lt;&lt; std::endl;\nb-&gt;Set(2, 10);\nstd::cout &lt;&lt; b-&gt;Get(2) &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>1\n10\nDynamicArray::~DynamicArray() is called.\nBasicArray::~BasicArray() is called.\n</code></pre> <p>STL\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306e\u7d99\u627f</p> <p>STL\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u4eee\u60f3\u95a2\u6570\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002 \u305d\u306e\u305f\u3081STL\u30b3\u30f3\u30c6\u30ca\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092 STL\u30b3\u30f3\u30c6\u30ca\u306b\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u4f7f\u7528\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p>"},{"location":"ch07-07-operator-overloading/","title":"\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9","text":"<p>\u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u6f14\u7b97\u5b50\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u6f14\u7b97\u5b50\u304c\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u6f14\u7b97\u5b50\u306f\u95a2\u6570\u307e\u305f\u306f\u30e1\u30f3\u30d0\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p>"},{"location":"ch07-07-operator-overloading/#_2","title":"\u5358\u9805\u6f14\u7b97\u5b50","text":"<p>\u6574\u6570\u3092\u6271\u3046 <code>Integer</code> \u30af\u30e9\u30b9\u306e\u8ca0\u53f7\u6f14\u7b97\u5b50\u3092\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\nprivate:\nint value_;\n};\n\n// \u8ca0\u53f7\u6f14\u7b97\u5b50\u306e\u5bfe\u8c61\u304c\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\nInteger operator-(const Integer&amp; v) {\nInteger tmp(-v.Value());\nreturn tmp;\n}\n</code></pre> <p>\u3053\u306e\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Integer a(2);\nInteger b = -a;\nstd::cout &lt;&lt; a.Value() &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; b.Value() &lt;&lt; std::endl;  // -2\n</code></pre> <p>\u30e1\u30f3\u30d0\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\n// \u8ca0\u53f7\u6f14\u7b97\u5b50\u306e\u5bfe\u8c61\u306e\u30e1\u30f3\u30d0\u95a2\u6570\nInteger operator-() const {\nInteger tmp(-Value());  // \u6f14\u7b97\u5bfe\u8c61\u306f\u81ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3059\u308b\nreturn tmp;\n}\nprivate:\nint value_;\n};\n</code></pre>"},{"location":"ch07-07-operator-overloading/#_3","title":"\u4e8c\u9805\u6f14\u7b97\u5b50","text":"<p>\u6574\u6570\u3092\u6271\u3046 <code>Integer</code> \u30af\u30e9\u30b9\u306e\u52a0\u7b97\u6f14\u7b97\u5b50\u3092\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\nprivate:\nint value_;\n};\n\n// \u52a0\u7b97\u6f14\u7b97\u5b50\u306e\u5de6\u8fba\u304c\u7b2c1\u5f15\u6570\u3001\u53f3\u8fba\u304c\u7b2c2\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\nInteger operator+(const Integer&amp; lhs, const Integer&amp; rhs) {\nInteger tmp(lhs.Value() + rhs.Value());\nreturn tmp;\n}\n</code></pre> <p>\u3053\u306e\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Integer a(2);\nInteger b(3);\nInteger c = a + b;\nstd::cout &lt;&lt; a.Value() &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; b.Value() &lt;&lt; std::endl;  // 3\nstd::cout &lt;&lt; c.Value() &lt;&lt; std::endl;  // 5\n</code></pre> <p>\u30e1\u30f3\u30d0\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\n// \u52a0\u7b97\u6f14\u7b97\u5b50\u306e\u5de6\u8fba\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306b\u5bfe\u3057\u3066\u3001\u53f3\u8fba\u304c\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\nInteger operator+(const Integer&amp; rhs) const {\nInteger tmp(Value() + rhs.Value());  // \u5de6\u8fba\u306f\u81ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3059\u308b\nreturn tmp;\n}\nprivate:\nint value_;\n};\n</code></pre> <p>\u4e00\u822c\u306b\u4e8c\u9805\u6f14\u7b97\u5b50\u306f\u5bfe\u79f0\u6027\u3092\u7dad\u6301\u3059\u308b\u305f\u3081\u306b\u95a2\u6570\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002 \u305f\u3068\u3048\u3070\u6574\u6570\u30af\u30e9\u30b9\u3068\u5b9f\u6570\u30af\u30e9\u30b9\u306e\u4e8c\u9805\u6f14\u7b97\u5b50\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\nprivate:\nint value_;\n};\n\nclass RealNumber {\npublic:\nexplicit RealNumber(double value) : value_(value) {}\n\ndouble Value() const {\nreturn value_;\n}\n\nprivate:\ndouble value_;\n};\n\nRealNumber operator+(const Integer&amp; lhs, const RealNumber&amp; rhs) {\nRealNumber tmp(lhs.Value() + rhs.Value());\nreturn tmp;\n}\nRealNumber operator+(const RealNumber&amp; lhs, const Integer&amp; rhs) {\nRealNumber tmp(lhs.Value() + rhs.Value());\nreturn tmp;\n}\n</code></pre>"},{"location":"ch07-07-operator-overloading/#_4","title":"\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8/\u30c7\u30af\u30ea\u30e1\u30f3\u30c8","text":"<p>\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8/\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u306b\u306f\u524d\u7f6e\u3068\u5f8c\u7f6e\u306e2\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u524d\u7f6e\u306f\u5358\u884c\u6f14\u7b97\u5b50\u306e\u65b9\u6cd5\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\nInteger&amp; operator++() {\n++value_;\nreturn *this;\n}\nprivate:\nint value_;\n};\n</code></pre> <p>\u6b21\u306e\u3088\u3046\u306b\u524d\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>Integer a(2);\nInteger b = ++a;\nstd::cout &lt;&lt; a.Value() &lt;&lt; std::endl;  // 3\nstd::cout &lt;&lt; b.Value() &lt;&lt; std::endl;  // 3\n</code></pre> <p>\u5f8c\u7f6e\u306f\u4e8c\u9805\u6f14\u7b97\u5b50\u306e\u65b9\u6cd5\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u524d\u7f6e\u3068\u5f8c\u7f6e\u3092\u533a\u5225\u3059\u308b\u305f\u3081\u306b\u5f8c\u7f6e\u3067\u306f <code>int</code> (\u901a\u5e38\u306f\u5024 <code>0</code>) \u304c\u6e21\u3055\u308c\u308b\u6c7a\u307e\u308a\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\nInteger operator++(int) {  // \u5f15\u6570\u306e int \u306f\u4f7f\u7528\u3057\u306a\u3044\nInteger tmp(Value());\n++value_;\nreturn tmp;\n}\nprivate:\nint value_;\n};\n</code></pre> <p>\u6b21\u306e\u3088\u3046\u306b\u5f8c\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>Integer a(2);\nInteger b = a++;\nstd::cout &lt;&lt; a.Value() &lt;&lt; std::endl;  // 3\nstd::cout &lt;&lt; b.Value() &lt;&lt; std::endl;  // 2\n</code></pre>"},{"location":"ch07-07-operator-overloading/#_5","title":"\u671f\u5f85\u3055\u308c\u308b\u632f\u308b\u821e\u3044","text":"<p>\u6f14\u7b97\u5b50\u306e\u632f\u308b\u821e\u3044\u306b\u3064\u3044\u3066\u306f\u5236\u7d04\u304c\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u304c\u3001 \u4e00\u822c\u306b\u7d44\u307f\u8fbc\u307f\u306e\u6f14\u7b97\u5b50\u3068\u540c\u69d8\u306e\u632f\u308b\u821e\u3044\u306b\u306a\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u307e\u3059\u3002</p> <p>\u305f\u3068\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u3068\u7570\u306a\u308b\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u306f\u3042\u308a\u307e\u3059\u3002</p> <pre><code>class Integer {\npublic:\nexplicit Integer(int value) : value_(value) {}\n\nint Value() const { return value_; }\n\nInteger&amp; operator-() {\nreturn *this;  // \u4f55\u3082\u3057\u306a\u3044\u3067\u81ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u5374\n}\n\nprivate:\nint value_;\n};\n</code></pre> <p>\u3053\u306e\u5b9a\u7fa9\u306b\u5bfe\u3057\u3066\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>Integer a(2);\nInteger b = -a;\n\nstd::cout &lt;&lt; a.Value() &lt;&lt; std::endl;  // 2\nstd::cout &lt;&lt; b.Value() &lt;&lt; std::endl;  // 2 (-2 \u3067\u306f\u306a\u3044)\n</code></pre> <p>\u3053\u306e\u3088\u3046\u306b\u671f\u5f85\u3055\u308c\u308b\u632f\u308b\u821e\u3044\u3068\u7570\u306a\u308b\u632f\u308b\u821e\u3044\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3001 \u7d44\u307f\u8fbc\u307f\u306e\u6f14\u7b97\u5b50\u3068\u306a\u308b\u3079\u304f\u540c\u3058\u632f\u308b\u821e\u3044\u306b\u306a\u308b\u3088\u3046\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002</p> <p>\u671f\u5f85\u3055\u308c\u308b\u632f\u308b\u821e\u3044\u306b\u3064\u3044\u3066\u306f \u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9 - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-08-assignment-operator/","title":"\u4ee3\u5165\u6f14\u7b97\u5b50","text":"<p>\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u5bfe\u8c61\u3057\u3066\u4ee3\u5165\u6f14\u7b97\u5b50\u3082\u3042\u308a\u307e\u3059\u3002</p> <p>\u4ee3\u5165\u6f14\u7b97\u5b50\u306b\u306f\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3068\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u306e2\u3064\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch07-08-assignment-operator/#_2","title":"\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50","text":"<p>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u306f\u901a\u5e38\u4ee5\u4e0b\u3092\u6e80\u305f\u3059\u30e1\u30f3\u30d0\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <ul> <li>\u5f15\u6570\u306f\u30b3\u30d4\u30fc\u5143\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e <code>const</code> \u5de6\u8fba\u5024\u53c2\u7167</li> <li>\u623b\u308a\u5024\u306f\u30b3\u30d4\u30fc\u5148\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 (\u81ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8) \u306e\u5de6\u8fba\u5024\u53c2\u7167</li> </ul> <pre><code>class Copyable {\npublic:\nCopyable();  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nCopyable&amp; operator=(const Copyable&amp; c);  // \u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\n};\n</code></pre> <p>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Copyable c1;  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nCopyable c2;  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nc2 = c1;  // \u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3067\u30b3\u30d4\u30fc\u4ee3\u5165\n</code></pre> <p>\u4e00\u822c\u306b\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u306f\u30bb\u30c3\u30c8\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>class Copyable {\npublic:\nCopyable();  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nCopyable(const Copyable&amp; c);  // \u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nCopyable&amp; operator=(const Copyable&amp; c);  // \u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\n};\n</code></pre> <p>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u306f \u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u6697\u9ed9\u7684\u306b\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002</p> \u6697\u9ed9\u7684\u306b\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u30b1\u30fc\u30b9 <p>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u3042\u3063\u3066\u3082\u3001 \u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u306b\u306f\u6697\u9ed9\u7684\u306a\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u306e\u5b9a\u7fa9\u306f\u884c\u308f\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>\u6761\u4ef6\u306e\u4e00\u4f8b\u3068\u3057\u3066\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u3082\u3064</li> <li>\u4e0b\u8a18\u306e\u3044\u305a\u308c\u304b\u304c\u660e\u793a\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b<ul> <li>\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50</li> </ul> </li> </ul> <p>\u8a73\u7d30\u306f \u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50 - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-08-assignment-operator/#_3","title":"\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50","text":"<p>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u306f\u901a\u5e38\u4ee5\u4e0b\u3092\u6e80\u305f\u3059\u30e1\u30f3\u30d0\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002</p> <ul> <li>\u5f15\u6570\u306f\u30e0\u30fc\u30d6\u5143\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53f3\u8fba\u5024\u53c2\u7167</li> <li>\u623b\u308a\u5024\u306f\u30e0\u30fc\u30d6\u5148\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 (\u81ea\u30aa\u30d6\u30b8\u30a7\u30af\u30c8) \u306e\u5de6\u8fba\u5024\u53c2\u7167</li> </ul> <pre><code>class Movable {\npublic:\nMovable();  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nMovable&amp; operator=(Movable&amp;&amp; m);  // \u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\n};\n</code></pre> <p>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Movable m1;  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nMovable m2;  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\nm2 = std::move(m1);  // \u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u3067\u30e0\u30fc\u30d6\u4ee3\u5165\n</code></pre> <p>\u4e00\u822c\u306b\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u306f\u30bb\u30c3\u30c8\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>class Movable {\npublic:\nMovable();  // \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nMovable(Movable&amp;&amp; m);  // \u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nMovable&amp; operator=(Movable&amp;&amp; m);  // \u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\n};\n</code></pre> <p>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u306f \u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u6697\u9ed9\u7684\u306b\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002</p> \u6697\u9ed9\u7684\u306b\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u30b1\u30fc\u30b9 <p>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u3067\u3042\u3063\u3066\u3082\u3001 \u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u306b\u306f\u6697\u9ed9\u7684\u306a\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u306e\u5b9a\u7fa9\u306f\u884c\u308f\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>\u6761\u4ef6\u306e\u4e00\u4f8b\u3068\u3057\u3066\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u3082\u3064</li> <li>\u4e0b\u8a18\u306e\u3044\u305a\u308c\u304b\u304c\u660e\u793a\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b<ul> <li>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50</li> <li>\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf</li> </ul> </li> </ul> <p>\u8a73\u7d30\u306f \u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50 - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch07-08-assignment-operator/#_4","title":"\u521d\u671f\u5316","text":"<p>C++ \u3067\u306f\u4ee3\u5165\u3068\u521d\u671f\u5316\u304c\u533a\u5225\u3055\u308c\u307e\u3059\u3002</p> <p>\u5909\u6570\u5ba3\u8a00\u3068\u540c\u6642\u306b\u4f7f\u7528\u3059\u308b <code>=</code> \u306f\u4ee3\u5165\u3067\u306f\u306a\u304f\u521d\u671f\u5316\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"ch07-08-assignment-operator/#_5","title":"\u30b3\u30d4\u30fc\u521d\u671f\u5316","text":"<p>\u521d\u671f\u5316\u3092\u30b3\u30d4\u30fc\u306b\u3088\u3063\u3066\u884c\u3046\u5834\u5408\u3001 \u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3067\u306f\u306a\u304f\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <pre><code>Copyable c1;\nCopyable c2 = c1;  // \u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\nCopyable c3;\nc3 = c2;  // \u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\n</code></pre>"},{"location":"ch07-08-assignment-operator/#_6","title":"\u30e0\u30fc\u30d6\u521d\u671f\u5316","text":"<p>\u521d\u671f\u5316\u3092\u30e0\u30fc\u30d6\u306b\u3088\u3063\u3066\u884c\u3046\u5834\u5408\u3001 \u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u3067\u306f\u306a\u304f\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <pre><code>Movable m1;\nMovable m2 = std::move(m1);  // \u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\nMovable m3;\nm3 = std::move(m2);  // \u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\n</code></pre>"},{"location":"ch07-09-default-and-delete/","title":"default/delete","text":"<p>\u4ee5\u4e0b\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u7279\u5225\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3067\u3059\u3002</p> <ul> <li>\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50</li> <li>\u30e0\u30fc\u30d6\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf</li> <li>\u30e0\u30fc\u30d6\u4ee3\u5165\u6f14\u7b97\u5b50</li> <li>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf</li> </ul> <p>\u3053\u308c\u3089\u306b\u5bfe\u3059\u308b\u6307\u5b9a\u3068\u3057\u3066 <code>default</code> \u6307\u5b9a\u3068 <code>delete</code> \u6307\u5b9a\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch07-09-default-and-delete/#default","title":"default \u6307\u5b9a","text":"<p>\u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u7279\u5225\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u306b <code>= default</code> \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001 \u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u3082\u306e\u3068\u540c\u3058\u3082\u306e\u3092\u660e\u793a\u7684\u306b\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class Square {\npublic:\nexplicit Square(int size) : size_(size) {}\n\n// \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4ee5\u5916\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\n// \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u6697\u9ed9\u7684\u306a\u5b9a\u7fa9\u306f\u884c\u308f\u308c\u306a\u3044\u3002\n// \u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b default \u6307\u5b9a\u3067\u660e\u793a\u7684\u306b\u5b9a\u7fa9\nSquare() = default;\nint Area() const {\nreturn size_ * size_;\n}\n\nprivate:\nint size_;\n};\n\nint main() {\nSquare s1;\nSquare s2(10);\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch07-09-default-and-delete/#delete","title":"delete \u6307\u5b9a","text":"<p>\u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u7279\u5225\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u306b <code>= delete</code> \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001 \u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u7279\u5225\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u524a\u9664\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code>class NonCopyable {\npublic:\nNonCopyable() = default;\n\n// \u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u30b3\u30d4\u30fc\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u30b3\u30d4\u30fc\u4ee3\u5165\u6f14\u7b97\u5b50\u3092\n// \u524a\u9664\u3059\u308b\u3053\u3068\u3067\u30b3\u30d4\u30fc\u7981\u6b62\u30af\u30e9\u30b9\u3092\u5b9f\u73fe\u3067\u304d\u308b\nNonCopyable(const NonCopyable&amp;) = delete;\nNonCopyable&amp; operator=(const NonCopyable&amp;) = delete;\n};\n</code></pre>"},{"location":"ch07-10-static-members/","title":"static \u30e1\u30f3\u30d0","text":""},{"location":"ch07-10-static-members/#static_1","title":"static \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0","text":"<p>\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3054\u3068\u3067\u306f\u306a\u304f\u3001\u30af\u30e9\u30b9\u305d\u306e\u3082\u306e\u304c\u3082\u3064\u5909\u6570\u3067\u3059\u3002</p> <p>\u521d\u671f\u5316\u3068\u7834\u68c4\u306e\u30bf\u30a4\u30df\u30f3\u30b0</p> <p>static \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u521d\u671f\u5316/\u7834\u68c4\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb/\u7d42\u4e86\u6642\u306b\u307e\u3068\u3081\u3066\u884c\u308f\u308c\u307e\u3059\u304c\u3001 \u5b9f\u884c\u9806\u5e8f\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> <p>\u8aa4\u3063\u305f\u6271\u3044\u3092\u3059\u308b\u3068\u539f\u56e0\u7279\u5b9a\u304c\u96e3\u3057\u3044\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3084\u3059\u3044\u6a5f\u80fd\u3067\u3042\u308a\u3001\u4f7f\u7528\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u5ba3\u8a00\u306b <code>static</code> \u3092\u3064\u3051\u308b\u3053\u3068\u3067 <code>static</code> \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class Counter {\npublic:\nstatic int count_;\n};\n</code></pre> <p>static \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306f\u30af\u30e9\u30b9\u306e\u5916\u3067\u5b9f\u4f53\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>int Counter::count_ = 10;  // \u5024 10 \u3067\u521d\u671f\u5316\n</code></pre> <p>\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c2\u3064\u4ee5\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u308b\u5834\u5408\u3001 \u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067\u5b9f\u4f53\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u3068\u591a\u91cd\u5b9a\u7fa9\u3068\u306a\u308a\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u3053\u306e\u554f\u984c\u3092\u907f\u3051\u308b\u305f\u3081\u306b static \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u5b9f\u4f53\u306e\u5b9a\u7fa9\u306f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u884c\u3044\u307e\u3059\u3002</p> counter.cc <pre><code>#include \"counter.h\"\n\nint Counter::count_ = 10;\n</code></pre> counter.h <pre><code>#ifndef COUNTER_H_\n#define COUNTER_H_\n\nclass Counter {\npublic:\nstatic int count_;\n};\n\n#endif  // COUNTER_H_\n</code></pre> <p>static \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u53c2\u7167\u3059\u308b\u306b\u306f <code>Counter::count_</code> \u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\n#include \"counter.h\"\n\nint main() {\n++Counter::count_;\nstd::cout &lt;&lt; Counter::count_ &lt;&lt; std::endl;  // 11\nreturn 0;\n}\n</code></pre>"},{"location":"ch07-10-static-members/#static_2","title":"static \u30e1\u30f3\u30d0\u95a2\u6570","text":"<p>\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3054\u3068\u3067\u306f\u306a\u304f\u3001\u30af\u30e9\u30b9\u305d\u306e\u3082\u306e\u304c\u3082\u3064\u95a2\u6570\u3067\u3059\u3002</p> <p>\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u5ba3\u8a00\u306b static \u3092\u3064\u3051\u308b\u3053\u3068\u3067 static \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class Brightness {\npublic:\nexplicit Brightness(int value) : value_(value) {}\n\nint Value() const {\nreturn value_;\n}\n\nstatic Brightness Maximum();\nstatic Brightness Minimum();\nstatic Brightness Median();\n\nprivate:\nint value_;\n};\n</code></pre> <p>static \u30e1\u30f3\u30d0\u95a2\u6570\u306f static \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306f\u76f4\u63a5\u53c2\u7167\u3067\u304d\u306a\u3044\u305f\u3081\u3001 static \u30e1\u30f3\u30d0\u95a2\u6570\u3067\u306f\u306a\u304f\u901a\u5e38\u306e\u95a2\u6570\u3067\u5341\u5206\u306a\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002</p> <p>\u901a\u5e38\u306e\u95a2\u6570\u3068\u306e\u9055\u3044\u306f static \u30e1\u30f3\u30d0\u95a2\u6570\u306f\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u305f\u3081\u3001 <code>protected</code> \u3084 <code>private</code> \u306e\u30e1\u30f3\u30d0\u306b\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002</p> <pre><code>Brightness Brightness::Maximum() {\nreturn Brightness(100);\n}\n\nBrightness Brightness::Minimum() {\nreturn Brightness(0);\n}\n\nBrightness Brightness::Median() {\nreturn Brightness((Maximum().value_ + Minimum().value_) / 2);\n}\n</code></pre> <p>static \u30e1\u30f3\u30d0\u95a2\u6570\u306f\u5b9f\u884c\u9806\u5e8f\u304c\u5b9a\u307e\u308b\u305f\u3081\u3001 static \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u4ee3\u308f\u308a\u306b static \u30e1\u30f3\u30d0\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067 \u521d\u671f\u5316\u9806\u5e8f\u3092\u5236\u5fa1\u3067\u304d\u306a\u3044\u554f\u984c\u3092\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ch07-11-structs/","title":"\u69cb\u9020\u4f53","text":"<p>\u30af\u30e9\u30b9\u306e\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 <code>private</code> \u3067\u3059\u304c\u3001 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u3092 <code>public</code> \u306b\u3057\u305f\u3082\u306e\u304c\u69cb\u9020\u4f53\u3067\u3059\u3002</p> <p><code>class</code> \u306e\u4ee3\u308f\u308a\u306b <code>struct</code> \u3068\u3059\u308b\u3068\u69cb\u9020\u4f53\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>struct Rectangle {\nint height;\nint width;\n};\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f\u660e\u793a\u7684\u306b\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u306f\u66f8\u3044\u3066\u3042\u308a\u307e\u305b\u3093\u304c\u3001 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u304c <code>public</code> \u3067\u3042\u308b\u305f\u3081\u6b21\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>Rectangle r;\nr.height = 10;\nr.width = 20;\n</code></pre> <p>\u30af\u30e9\u30b9\u3068\u69cb\u9020\u4f53\u306e\u4f7f\u3044\u5206\u3051\u306b\u3064\u3044\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u3067\u6307\u5b9a\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch07-12-unions/","title":"\u5171\u7528\u4f53","text":"<p>\u5171\u7528\u4f53\u306f\u8907\u6570\u306e\u578b\u306e\u3069\u308c\u304b\u3092\u683c\u7d0d\u3057\u305f\u3044\u3001\u3068\u3044\u3046\u5834\u5408\u306b\u7528\u3044\u308b\u3082\u306e\u3067\u3059\u3002</p> <pre><code>#include &lt;string&gt;\nunion X {\nint m1;\ndouble m2;\nstd::string m3;\nX() : m1(0) {}\n~X() {}\n};\ntemplate &lt;class T&gt;\nvoid destroy_at(T* location)\n{\nlocation-&gt;~T();\n}\nint main()\n{\nX x;\nnew (&amp;x.m3) std::string(\"aaa\");\ndestroy_at(&amp;x.m3);\n}\n</code></pre> <p>\u5171\u7528\u4f53\u306b\u6697\u9ed9\u3067\u306f\u306a\u3044\u7279\u6b8a\u30e1\u30f3\u30d0\u95a2\u6570(\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306a\u3069)\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u30af\u30e9\u30b9\u578b\u3092\u5165\u308c\u308b\u5834\u5408\u3001\u3044\u304f\u3064\u304b\u6ce8\u610f\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u5171\u7528\u4f53\u306e\u5bfe\u5fdc\u3059\u308b\u7279\u6b8a\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u524a\u9664\u3055\u308c\u308b\u306e\u3067\u81ea\u529b\u3067\u5b9a\u7fa9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044</li> <li>\u305d\u306e\u30af\u30e9\u30b9\u578b\u306e\u5024\u3092\u5165\u308c\u308b\u5834\u5408\u3001\u914d\u7f6enew\u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u547c\u3073\u51fa\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u307e\u305f\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3082\u540c\u69d8</li> </ul> <p>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u547c\u3073\u51fa\u3057\u306f\u4e0a\u306e\u4f8b\u3067\u306f <code>destory_at</code> \u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u540c\u69d8\u306e\u51e6\u7406\u3092\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u304cC++17\u4ee5\u964d\u3067\u306f <code>&lt;memory&gt;</code> \u30d8\u30c3\u30c0\u30fc\u306b <code>std::destory_at</code> \u3068\u3057\u3066\u3042\u308a\u307e\u3059\u3002</p> <p>\u69cb\u9020\u4f53\u306e\u5927\u304d\u3055\u304c\u30e1\u30f3\u30d0\u30fc\u306e\u3059\u3079\u3066\u306e\u578b\u306e\u5927\u304d\u3055\u306e\u7dcf\u548c\u306b\u30d1\u30c7\u30a3\u30f3\u30b0\u306a\u3069\u3092\u8db3\u3057\u305f\u3082\u306e\u3067\u3042\u3063\u305f\u306e\u306b\u5bfe\u3057\u3066\u3001 \u5171\u7528\u4f53\u3067\u306f\u30e1\u30f3\u30d0\u30fc\u306e\u578b\u306e\u5927\u304d\u3055\u306e\u6700\u5927\u5024\u306b\u30d1\u30c7\u30a3\u30f3\u30b0\u306a\u3069\u3092\u8db3\u3057\u305f\u3082\u306e\u3068\u306a\u308a\u307e\u3059\u3002 \u7d50\u679c\u3068\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u3092\u7bc0\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u8907\u6570\u306e\u578b\u306e\u3069\u308c\u304b\u3092\u683c\u7d0d\u3057\u305f\u3044\u3068\u3044\u3046\u5834\u5408\u306b\u306f\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002</p>"},{"location":"ch07-12-unions/#json","title":"\u5b9f\u7528\u7684\u306a\u4f8b: JSON\u306e\u30d1\u30fc\u30b9","text":"<p>\u4f8b\u3048\u3070JSON\u3092\u30d1\u30fc\u30b9\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002 JSON\u306e\u5024\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u914d\u5217\u3001\u6587\u5b57\u5217\u3001\u6570\u5024\u3001bool\u3001null\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3068\u308a\u3042\u3048\u305a\u6700\u3082\u308f\u304b\u308a\u3084\u3059\u304f\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8003\u3048\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>#include &lt;map&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\ntemplate &lt;class T&gt;\nvoid destroy_at(T* location)\n{\nlocation-&gt;~T();\n}\nstruct value {\nenum class kind {\nnull,\nobject,\narray,\nstring,\nnumber,\nboolean\n};\nkind k_;\nunion data {\nbool b_;\ndouble num_;\nstd::string str_;\nstd::vector&lt;value&gt; arr_;\nstd::map&lt;std::string, value&gt; obj_;\ndata() : b_{} {}\n~data() {}\n} data_;\nvalue()  : k_() {}\nvalue(std::string s) : k_(kind::string)\n{\nnew(&amp;data_.str_) std::string(std::move(s));\n}\n~value()\n{\nswitch(k_) {\ncase kind::object:\ndestroy_at(&amp;data_.obj_); break;\ncase kind::array:\ndestroy_at(&amp;data_.arr_); break;\ncase kind::string:\ndestroy_at(&amp;data_.str_); break;\ndefault:\nbreak;\n}\n}\nkind get_kind() { return k_; }\nstd::string get_string_or(std::string default_value)\n{\nreturn (k_ == kind::string) ? data_.str_ : default_value;\n}\n};\nint main()\n{\nvalue v1;\nstd::cout &lt;&lt; static_cast&lt;int&gt;(v1.get_kind()) &lt;&lt; v1.get_string_or(\"bbb\") &lt;&lt; std::endl;\nvalue v2(\"aaa\");\nstd::cout &lt;&lt; static_cast&lt;int&gt;(v2.get_kind()) &lt;&lt; v2.get_string_or(\"bbb\") &lt;&lt; std::endl;\n}\n</code></pre> <p>\u5171\u7528\u4f53\u306b\u3069\u3093\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u3092\u5225\u9014\u5909\u6570\u3067\u6301\u3063\u3066\u304a\u304d\u3001\u8aad\u307f\u51fa\u3059\u6642\u306b\u6761\u4ef6\u5206\u5c90\u3057\u3066\u51e6\u7406\u3059\u308b\u3068\u3044\u3046\u306e\u304c\u4e00\u822c\u7684\u306a\u6271\u3044\u3067\u3059\u3002\u4e0a\u306e\u4f8b\u3067\u306f <code>value</code> \u30af\u30e9\u30b9\u306e\u4e2d\u306b <code>kind</code> \u3068\u3044\u3046\u5217\u6319\u578b\u3092\u5b9a\u7fa9\u3057\u3066\u305d\u306e\u578b\u306e\u5909\u6570 <code>k_</code> \u3082\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\u3053\u306e <code>k_</code> \u306b\u4eca\u306a\u3093\u306e\u30c7\u30fc\u30bf\u304c\u5171\u7528\u4f53\u306b\u5165\u3063\u3066\u3044\u308b\u304b\u3092\u8a18\u9332\u3057\u3001\u5171\u7528\u4f53\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306f\u3053\u306e <code>k_</code> \u3092\u78ba\u8a8d\u3057\u3066\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002</p>"},{"location":"ch07-12-unions/#_2","title":"\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u5171\u7528\u4f53\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0","text":"<p>\u5171\u7528\u4f53\u306e\u3042\u308b\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u305f\u3068\u304d\u3001\u305d\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u5bff\u547d\u304c\u958b\u59cb\u3057\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u5225\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u308b\u3068\u305d\u308c\u307e\u3067\u30a2\u30af\u30c6\u30a3\u30d6\u3060\u3063\u305f\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u306e\u5bff\u547d\u304c\u5c3d\u304d\u3001\u65b0\u305f\u306b\u30c7\u30fc\u30bf\u304c\u5165\u3063\u305f\u30e1\u30f3\u30d0\u30fc\u5909\u6570\u306e\u5bff\u547d\u304c\u958b\u59cb\u3057\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306f\u6700\u5927\u30671\u3064\u307e\u3067\u3067\u3059\u3002</p> <pre><code>union A { int x; int y[4]; };\nstruct B { A a; };\nunion C { B b; int k; };\nint f() {\nC c;                  // \u3069\u306e\u5171\u7528\u4f53\u306e\u30e1\u30f3\u30d0\u306e\u5bff\u547d\u3082\u958b\u59cb\u3057\u306a\u3044\nc.b.a.y[3] = 4;       // OK: c.b\u3068c.b.a.y\u306e\u5bff\u547d\u304c\u958b\u59cb\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u3089\u308c\u308b\nreturn c.b.a.y[3];    // OK: c.b.a.y\u306f\u4f5c\u3089\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u3059\n}\nstruct X { const int a; int b; };\nunion Y { X x; int k; };\nint g() {\nY y = { { 1, 2 } };   // OK: y.x \u306f\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u5171\u7528\u4f53\u306e\u30e1\u30f3\u30d0\nint n = y.x.a;\ny.k = 4;              // OK: y.x\u306e\u5bff\u547d\u304c\u5c3d\u304d\u3001y.k\u306e\u5bff\u547d\u304c\u958b\u59cb\u3001y.k\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u5171\u7528\u4f53\u306e\u30e1\u30f3\u30d0\ny.x.b = n;            // undefined behavior: X\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u524a\u9664\u3055\u308c\u3066\u3044\u307e\u3059\n// \u3057\u305f\u304c\u3063\u3066y.x\u306e\u5bff\u547d\u306f\u6697\u9ed9\u306e\u3046\u3061\u306b\u958b\u59cb\u3067\u304d\u307e\u305b\u3093\n}\nunion Z {\nint int_value;\nchar char_value[4];\n};\nint main()\n{\nf();\ng();\nZ z;// \u3069\u306e\u5171\u7528\u4f53\u306e\u30e1\u30f3\u30d0\u306e\u5bff\u547d\u3082\u958b\u59cb\u3057\u306a\u3044\nz.int_value = 65535;// OK: z.int_value\u306e\u5bff\u547d\u304c\u958b\u59cb\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u3089\u308c\u308b\nz.char_value[0];    // NG: z.char_value\u306e\u5bff\u547d\u306f\u958b\u59cb\u3057\u3066\u3044\u306a\u3044\n}\n</code></pre> <p>C++\u306b\u306f\u5b58\u5728\u3057\u306a\u3044trap representation</p> <p>C\u8a00\u8a9e\u306eC99\u4ee5\u964d\u306b\u306ftrap representation\u3068\u8a00\u308f\u308c\u308b\u4ed5\u69d8\u304c\u3042\u308a\u307e\u3059\u3002\u4e0a\u306e\u4f8b\u3067\u3044\u3046\u5171\u7528\u4f53 <code>Z</code> \u3092\u307f\u305f\u3068\u304d\u3001 <code>z.char_value[0]</code> \u306e\u3088\u3046\u306a\u30a2\u30af\u30bb\u30b9\u3092\u3059\u308b\u3068\u65b0\u3057\u3044\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u8868\u73fe\u3068\u3057\u3066\u518d\u89e3\u91c8\u3055\u308c\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089C++\u306b\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u3088\u304f\u3042\u308b\u8aa4\u308a\u306a\u306e\u3067\u3001\u5171\u7528\u4f53\u306b\u5024\u3092\u5165\u308c\u305f\u3089\u305d\u306e\u5165\u308c\u305f\u3082\u306e\u304b\u3089\u3060\u3051\u8aad\u307f\u53d6\u308b\u3088\u3046\u306b\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"ch08-01-cpp-casts/","title":"C++ \u306e\u30ad\u30e3\u30b9\u30c8","text":"<p>C++ \u3067\u306f4\u7a2e\u985e\u306e\u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> \u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50 \u4e3b\u306a\u7528\u9014 static_cast \u578b\u5909\u63db\u3092\u660e\u793a\u7684\u306b\u884c\u3046 dynamic_cast \u57fa\u5e95\u30af\u30e9\u30b9\u578b\u306e\u30dd\u30a4\u30f3\u30bf\u3068\u6d3e\u751f\u30af\u30e9\u30b9\u578b\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u5909\u63db\u3059\u308b const_cast const\u4fee\u98fe\u3092\u5909\u5316\u3055\u305b\u308b reinterpret_cast \u578b\u60c5\u5831\u3060\u3051\u5909\u3048\u308b <p>\u672c\u7bc0\u3067\u306f\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3060\u3051\u3092\u8aac\u660e\u3057\u307e\u3059\u3002 \u8a73\u3057\u3044\u8aac\u660e\u306f \u30ad\u30e3\u30b9\u30c8\u306e\u8a73\u3057\u3044\u8aac\u660e \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch08-01-cpp-casts/#static_cast","title":"static_cast","text":"<p>\u578b\u5909\u63db\u3092\u660e\u793a\u7684\u306b\u884c\u3046\u305f\u3081\u306e\u30ad\u30e3\u30b9\u30c8\u3067\u3059\u3002\u5fc5\u8981\u304c\u3042\u308c\u3070\u5024\u3092\u5909\u5316\u3055\u305b\u307e\u3059\u3002</p> <pre><code>double dx = 3.14;\nint x = static_cast&lt;int&gt;(dx);  // 3\n</code></pre> <p>\u5217\u6319\u578b\u3068\u6570\u5024\u578b\u306e\u5909\u63db\u306a\u3069 \u6697\u9ed9\u7684\u306b\u5909\u63db\u3055\u308c\u306a\u3044\u578b\u5909\u63db\u3082\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>enum class Day {\nSun,  // 0\nMon,  // 1\nTue,  // 2\nWed,  // 3\nThu,  // 4\nFri,  // 5\nSat   // 6\n};\n\nDay day1 = static_cast&lt;Day&gt;(1);         // Day::Mon\nint day2 = static_cast&lt;int&gt;(Day::Tue);  // 2\n</code></pre> <p>\u578b\u5909\u63db\u3092\u660e\u793a\u7684\u306b\u884c\u3046\u3053\u3068\u3067\u3001 <code>explicit</code> \u6307\u5b9a\u3055\u308c\u305f\u5909\u63db\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3088\u308b\u5909\u63db\u3082\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>class Square {\npublic:\nexplicit Square(int size) : size_(size) {}\n\nprivate:\nint size_;\n};\n\nSquare square = static_cast&lt;Square&gt;(10);\n</code></pre>"},{"location":"ch08-01-cpp-casts/#dynamic_cast","title":"dynamic_cast","text":"<p>\u4e00\u822c\u306b\u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8\u3092\u3059\u308b\u969b\u306b\u3001 <code>dynamic_cast</code> \u3092\u4f7f\u3044\u307e\u3059\u3002\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u306b\u4f7f\u3046\u3068\u304d\u306f <code>static_cast</code> \u3068\u540c\u3058\u610f\u5473\u3092\u6301\u3061\u307e\u3059\u3002 <code>dynamic_cast</code> \u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch08-01-cpp-casts/#const_cast","title":"const_cast","text":"<p>\u4e00\u822c\u306bconst\u4fee\u98fe\u5b50\u3092\u5916\u3059\u3068\u304d\u306b\u7528\u3044\u308b\u30ad\u30e3\u30b9\u30c8\u3067\u3059\u3002const\u4fee\u98fe\u3092\u4ed8\u52a0\u3059\u308b\u3068\u304d\u306f <code>static_cast</code> \u3068\u540c\u3058\u610f\u5473\u3092\u6301\u3061\u307e\u3059\u3002</p> <pre><code>const std::string str(\"hoge\");\nstd::string&amp; x = const_cast&lt;std::string&amp;&gt;(str);\n</code></pre> <p>\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u66f4\u3092\u52a0\u3048\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u300d\u305f\u3081\u306b <code>const</code> \u304c\u4ed8\u3044\u3066\u3044\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u3001 <code>const_cast</code> \u3067\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u66f4\u3092\u52a0\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u300d\u3053\u3068\u306f\u671b\u307e\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002</p>"},{"location":"ch08-01-cpp-casts/#reinterpret_cast","title":"reinterpret_cast","text":"<p>\u5024\u306f\u305d\u306e\u307e\u307e\u578b\u60c5\u5831\u306e\u5909\u63db\u3092\u884c\u3046\u30ad\u30e3\u30b9\u30c8\u3067\u3059\u3002\u5b89\u5168\u306b\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u3044\u304f\u3064\u3082\u306e\u843d\u3068\u3057\u7a74\u304c\u3042\u308a\u307e\u3059\u3002 Strict Aliasing Rules\u306e\u3088\u3046\u306b\u30ad\u30e3\u30b9\u30c8\u5358\u4f53\u3067\u307f\u308c\u3070\u554f\u984c\u306a\u304f\u3066\u3082\u5168\u4f53\u3068\u3057\u3066\u307f\u308b\u3068\u672a\u5b9a\u7fa9\u52d5\u4f5c\u3092\u5f15\u304d\u8d77\u3053\u3059\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002 <code>std::nullptr_t -&gt; T -&gt; std::nullptr_t</code> \u304c\u53cd\u4f8b\u3067\u3001\u5e38\u306bA\u2192B\u2192A\u3068\u3044\u3046\u3075\u3046\u306b\u5909\u63db\u3067\u304d\u308b\u3068\u3044\u3046\u4fdd\u8a3c\u3082\u3042\u308a\u307e\u305b\u3093\u3002 <code>reinterpret_cast</code> \u3068\u306f\u3053\u3046\u3057\u305f\u672a\u5b9a\u7fa9\u52d5\u4f5c\u3068\u672a\u898f\u5b9a\u306e\u52d5\u4f5c\u306a\u3069\u304c\u305d\u3053\u304b\u3057\u3053\u306b\u6a2a\u305f\u308f\u308b\u9b54\u5883\u3068\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002 \u4e8b\u5b9f\u3068\u3057\u3066 <code>reinterpret_cast</code> \u306e\u8aa4\u3063\u305f\u7528\u6cd5\u3092\u3057\u3070\u3057\u3070\u76ee\u306b\u3057\u307e\u3059\u3002\u5148\u4eba\u304c\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3084\u89e3\u8aac\u3092\u4fe1\u7528\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002 \u3057\u305f\u304c\u3063\u3066\u306a\u308b\u3079\u304f <code>reinterpret_cast</code> \u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002</p> <p><code>reinterpret_cast</code> \u306f\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d\u6642\u306b\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u5165\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e <code>read()</code> \u3084\u51fa\u529b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e <code>write()</code> \u306e\u7b2c 1 \u5f15\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u306e\u578b\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002</p> <pre><code>#include &lt;fstream&gt;\n#include &lt;vector&gt;\n\nint main() {\nstd::vector&lt;int&gt; nums = {1, 2, 3, 4};\n\n// \u30d0\u30a4\u30ca\u30ea + \u51fa\u529b\u30e2\u30fc\u30c9\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u958b\u304f\nstd::ofstream ofs(\"nums.bin\", std::ios::binary | std::ios::out);\nif(!ofs) {\nreturn 1;\n}\n\nconst auto size = sizeof(int) * nums.size();  // int \u306e\u30b5\u30a4\u30ba * \u914d\u5217\u8981\u7d20\u6570\n\n// \u914d\u5217\u306e\u5148\u982d\u304b\u3089\u914d\u5217\u5168\u4f53\u306e\u30b5\u30a4\u30ba\u5206\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\n// \u5148\u982d\u30dd\u30a4\u30f3\u30bf\u306f\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\n// const char*\u578b\u3078\u306e\u5909\u63db\u306fStrict Aliasing Rules\u306b\u53cd\u3057\u306a\u3044\nofs.write(reinterpret_cast&lt;const char *&gt;(nums.data()), size);\nreturn 0;\n}\n</code></pre> Strict Aliasing Rules <p>\u30dd\u30a4\u30f3\u30bf\u304c\u3069\u3046\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u89e3\u6790\u3059\u308b\u3053\u3068\u306f\u6975\u3081\u3066\u56f0\u96e3\u306a\u305f\u3081\u3001\u6700\u9069\u5316\u3092\u884c\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u5b9a\u3081\u3089\u308c\u305f\u898f\u5247\u306e\u4e00\u3064\u3067\u3059\u3002 \u3082\u3046\u5c11\u3057\u8a00\u3046\u3068\u3069\u306e\u3088\u3046\u306a\u3068\u304d2\u3064\u306e\u5909\u6570\u304c\u5b9f\u969b\u306b\u306f\u540c\u3058\u30e1\u30e2\u30ea\u4f4d\u7f6e\u3092\u53c2\u7167\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u4eee\u5b9a\u3059\u3079\u304d\u304b\u304c\u5b9a\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002 \u7279\u306b <code>reinterpret_cast</code> \u3092\u7528\u3044\u308b\u3068\u304d\u3001Strict Aliasing Rules\u306b\u5341\u5206\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u898f\u5247\u306b\u53cd\u3059\u308c\u3070\u672a\u5b9a\u7fa9\u52d5\u4f5c\u306b\u306a\u308a\u307e\u3059\u3002</p> <ul> <li>\uff08\u7ffb\u8a33\uff09C/C++\u306eStrict Aliasing\u3092\u7406\u89e3\u3059\u308b \u307e\u305f\u306f - \u3069\u3046\u3057\u3066#$@##@^%\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u50d5\u304c\u3057\u305f\u3044\u4e8b\u3092\u3055\u305b\u3066\u304f\u308c\u306a\u3044\u306e\uff01 - yohhoy\u306e\u65e5\u8a18</li> <li>C++20\u898f\u683c\u66f8 [basic.lval#11]</li> </ul> <p>\u3053\u306e\u30eb\u30fc\u30eb\u306e\u5224\u5b9a\u306f\u5b9f\u969b\u306b\u30e1\u30e2\u30ea\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u884c\u308f\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3069\u3046\u632f\u308b\u821e\u3046\u304b\u3068\u3044\u3046\u3082\u306e\u3067\u3042\u308a\u3001\u5358\u4e00\u306e\u30ad\u30e3\u30b9\u30c8\u3060\u3051\u3067\u5224\u65ad\u3067\u304d\u308b\u3082\u306e\u3067\u306f\u6709\u308a\u307e\u305b\u3093\u3002 \u4f8b\u3048\u3070\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001 <code>A</code> \u3068 <code>B</code> \u3068\u3044\u3046\u5168\u304f\u95a2\u4fc2\u306e\u306a\u3044\u578b\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u5909\u63db\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u306fStrict Aliasing Rules\u306b\u53cd\u3057\u3066\u3044\u307e\u305b\u3093 \u3053\u306e\u3042\u3068\u5b9f\u969b\u306b\u5909\u6570 <code>b</code> \u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3068\u304d\u306b\u9055\u53cd\u3057\u3001\u672a\u5b9a\u7fa9\u52d5\u4f5c\u3068\u306a\u308a\u307e\u3059\u3002</p> <pre><code>class A {};\nclass B {};\n\nA a;\nB* b = reinterpret_cast&lt;B*&gt;(&amp;a);\n</code></pre> <p>\u3088\u304f\u3042\u308bStrict Aliasing Rules\u3092\u7834\u3063\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306a\u3069\u3067\u3088\u304f\u898b\u3089\u308c\u308b\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u3092\u5909\u63db\u3057\u3088\u3046\u3068\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002 32bit\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u309216bit\u3054\u3068\u306b\u533a\u5207\u3063\u3066swap\u3057\u3088\u3046\u3068\u8a66\u307f\u3066\u3044\u307e\u3059\u304c\u3001\u672a\u5b9a\u7fa9\u52d5\u4f5c\u3092\u8e0f\u3093\u3067\u3044\u307e\u3059\u3002</p> <pre><code>#include &lt;cstdint&gt;\n#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing std::uint32_t;\nusing std::uint16_t;\nuint32_t swaphalves(uint32_t a) {\nuint32_t acopy=a;\nuint16_t *ptr=reinterpret_cast&lt;uint16_t*&gt;(&amp;acopy);// ptr\u306facopy\u306ealias\u306b\u306a\u3089\u306a\u3044\nuint16_t tmp=ptr[0];\nptr[0]=ptr[1];// Undefined Behavior: ptr\u3078\u306e\u5909\u66f4\u64cd\u4f5c\u304c\u3042\u308b\u304calias\u3067\u306f\u306a\u3044\nptr[1]=tmp;\nreturn acopy;\n}\n\nint main()\n{\nuint32_t a = 32;\nstd::cout &lt;&lt; std::hex &lt;&lt; std::setfill('0') &lt;&lt; std::setw(8) &lt;&lt; a &lt;&lt; std::endl;\na = swaphalves(a);\nstd::cout &lt;&lt; std::setw(8) &lt;&lt; a &lt;&lt; std::endl;\n}\n</code></pre> <p>Strict Aliasing Rules\u3092\u56de\u907f\u3059\u308b\u306b\u306f <code>std::memcpy</code> \u3092\u7528\u3044\u308b\u304bC++20\u3067\u8ffd\u52a0\u3055\u308c\u305f <code>std::bit_cast</code> \u3092\u7528\u3044\u307e\u3059</p>"},{"location":"ch08-02-c-cast/","title":"C\u8a00\u8a9e\u5f62\u5f0f\u306e\u30ad\u30e3\u30b9\u30c8","text":"<p>C++ \u306f C\u8a00\u8a9e\u3068\u4e92\u63db\u6027\u304c\u3042\u308b\u305f\u3081\u3001<code>(\u578b\u540d)</code>\u3067C\u8a00\u8a9e\u5f62\u5f0f\u306e\u30ad\u30e3\u30b9\u30c8\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>double dx = 3.14;\nint x = (int)dx;\n</code></pre> <p>\u3057\u304b\u3057\u3001C\u8a00\u8a9e\u5f62\u5f0f\u306e\u30ad\u30e3\u30b9\u30c8\u3067\u306f\u3001\u30b3\u30fc\u30c9\u304b\u3089\u30ad\u30e3\u30b9\u30c8\u306e\u610f\u56f3\u304c\u6c72\u307f\u53d6\u308a\u306b\u304f\u3044\u4e0a\u3001\u5b9f\u88c5\u8005\u306e\u610f\u306b\u53cd\u3057\u305f\u30ad\u30e3\u30b9\u30c8\u3092\u884c\u3063\u305f\u3068\u3057\u3066\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b\u305f\u3081\u3001\u4e0d\u5177\u5408\u3092\u751f\u307f\u51fa\u3059\u8981\u56e0\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u5bfe\u3057\u3066\u3001C++ \u306e\u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50\u306f\u7528\u9014\u306b\u5408\u308f\u305b\u3066\u7a2e\u985e\u304c\u5206\u304b\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u610f\u56f3\u304c\u660e\u78ba\u306b\u306a\u308b\u4e0a\u3001\u5b9f\u88c5\u8005\u306e\u610f\u306b\u53cd\u3057\u305f\u30ad\u30e3\u30b9\u30c8\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u77e5\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>int x = 100;\nint* px = static_cast&lt;int*&gt;(x); // static_cast\u306e\u610f\u56f3\u306b\u53cd\u3057\u3066\u3044\u308b\u305f\u3081\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n</code></pre> <p>\u30ad\u30e3\u30b9\u30c8\u306e\u610f\u56f3\u3092\u660e\u78ba\u306b\u3059\u308b\u305f\u3081\u306b\u3001C++ \u306e\u30ad\u30e3\u30b9\u30c8\u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"ch09-01-function-templates/","title":"\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"<p>\u578b\u3084\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3059\u308b\u6a5f\u80fd\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3044\u3044\u307e\u3059\u3002 \u578b\u306b\u4f9d\u5b58\u305b\u305a\u51e6\u7406\u3092\u5171\u901a\u5316\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <p>\u95a2\u6570\u306b\u5bfe\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3044\u3044\u307e\u3059\u3002 \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;typename T&gt;\nT Sum(T a, T b) {\nreturn a + b;\n}\n</code></pre> <p>\u578b\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3059\u308b\u306b\u306f <code>typename</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u3053\u306e\u4f8b\u3067\u306f <code>T</code> \u3068\u3044\u3046\u578b\u30672\u3064\u306e\u5f15\u6570\u3068\u623b\u308a\u5024\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u306e\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Sum&lt;int&gt;(1, 2);         // 3\nSum&lt;double&gt;(1.2, 3.4);  // 4.6\n</code></pre> <p>\u95a2\u6570\u547c\u3073\u51fa\u3057\u6642\u306b <code>&lt; ... &gt;</code> \u3067 <code>T</code> \u306e\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p>"},{"location":"ch09-01-function-templates/#_2","title":"\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b9f\u5f15\u6570\u306e\u7701\u7565","text":"<p>\u5b9f\u5f15\u6570\u304b\u3089\u578b\u30d1\u30e9\u30e1\u30fc\u30bf <code>T</code> \u3092\u63a8\u8ad6\u3067\u304d\u308b\u5834\u5408\u306b\u306f \u547c\u3073\u51fa\u3057\u6642\u306e <code>&lt; ... &gt;</code> \u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>Sum(1, 2);      // 3\nSum(1.2, 3.4);  // 4.6\n</code></pre> <p>\u7b2c1\u5f15\u6570\u3092 <code>int</code> \u3001\u7b2c2\u5f15\u6570\u3092 <code>double</code> \u306b\u3059\u308b\u3068 <code>T</code> \u306e\u578b\u3092\u63a8\u8ad6\u3067\u304d\u305a\u3001 \u547c\u3073\u51fa\u3057\u6642\u306e <code>&lt; ... &gt;</code> \u3092\u7701\u7565\u3057\u305f\u5834\u5408\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>Sum&lt;double&gt;(1, 2.3);  // 3.3\n// Sum(1, 2.3);       // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n</code></pre>"},{"location":"ch09-01-function-templates/#_3","title":"\u8907\u6570\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570","text":"<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3059\u308b\u578b\u3084\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u306f 1\u3064\u3060\u3051\u3067\u306f\u306a\u304f\u8907\u6570\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u623b\u308a\u5024\u3092 <code>double</code> \u306b\u56fa\u5b9a\u3057\u3066\u7b2c1\u5f15\u6570\u3068\u7b2c2\u5f15\u6570\u3092 \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;typename T, typename U&gt;\ndouble Sum(T a, U b) {\nreturn a + b;\n}\n</code></pre> <p>\u3053\u306e\u5834\u5408\u306b\u306f\u6b21\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002</p> <pre><code>Sum(1, 2.3);  // 3.3\n</code></pre>"},{"location":"ch09-01-function-templates/#_4","title":"\u623b\u308a\u5024\u306e\u578b\u63a8\u8ad6","text":"<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u305f\u5f15\u6570\u306e\u578b\u304b\u3089\u623b\u308a\u5024\u306e\u578b\u3092\u63a8\u8ad6\u3059\u308b\u306b\u306f <code>decltype</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;typename T, typename U&gt;\nauto Sum(T a, U b) -&gt; decltype(a + b) {\nreturn a + b;\n}\n</code></pre>"},{"location":"ch09-01-function-templates/#_5","title":"\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5316","text":"<p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u578b\u3060\u3051\u3067\u306f\u306a\u304f \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u3068\u3057\u3066\u914d\u5217\u306e\u30b5\u30a4\u30ba\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>template &lt;int N&gt;\nint Fibonacchi() {\nint a[N + 1];\na[0] = 0;\na[1] = 1;\nfor (auto i = 2; i &lt;= N; ++i) {\na[i] = a[i - 1] + a[i - 2];\n}\nreturn a[N];\n}\n</code></pre> <p>\u3053\u306e\u4f8b\u306f \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570 \u3092\u8a08\u7b97\u3059\u308b\u51e6\u7406\u3067\u3059\u3002 \u6b21\u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u5024\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>Fibonacchi&lt;10&gt;();  // 55\n</code></pre>"},{"location":"ch09-02-class-templates/","title":"\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8","text":"<p>\u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3044\u3044\u307e\u3059\u3002 \u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;typename T&gt;\nclass Rectangle {\npublic:\nRectangle(T height, T width) : height_(height), width_(width) {}\n\nT Area() const {\nreturn height_ * width_;\n}\n\nprivate:\nconst T height_;\nconst T width_;\n};\n</code></pre> <p>\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>Rectangle&lt;int&gt; r1(10, 20);\nRectangle&lt;double&gt; r2(1.2, 3.4);\n</code></pre> <p>\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b9f\u5f15\u6570\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u304c\u5fc5\u8981\u306a\u306e\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\u6642\u306e\u307f\u3067\u3001 \u751f\u6210\u5f8c\u306f\u901a\u5e38\u306e\u30af\u30e9\u30b9\u3068\u540c\u69d8\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>r1.Area();  // 200\nr2.Area();  // 4.08\n</code></pre>"},{"location":"ch09-02-class-templates/#_2","title":"\u8907\u6570\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570","text":"<p>\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3059\u308b\u578b\u3084\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u306f \u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3082\u8907\u6570\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>template &lt;typename T, typename U&gt;\nclass Rectangle {\npublic:\nRectangle(T height, U width) : height_(height), width_(width) {}\n\ndouble Area() const {\nreturn height_ * width_;\n}\n\nprivate:\nconst T height_;\nconst U width_;\n};\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f\u30e1\u30f3\u30d0\u95a2\u6570 <code>Area()</code> \u306e\u623b\u308a\u5024\u3092 <code>double</code> \u306b\u56fa\u5b9a\u3057\u3066 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u30922\u3064\u306b\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch09-02-class-templates/#_3","title":"\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u623b\u308a\u5024\u306e\u578b\u63a8\u8ad6","text":"<p>\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u623b\u308a\u5024\u306e\u578b\u3092\u63a8\u8ad6\u3059\u308b\u306b\u306f <code>decltype</code> \u5185\u3067 <code>std::declval</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;typename T, typename U&gt;\nclass Rectangle {\npublic:\nRectangle(T height, U width) : height_(height), width_(width) {}\n\nauto Area() const -&gt; decltype(std::declval&lt;T&gt;() * std::declval&lt;U&gt;()) {\nreturn height_ * width_;\n}\n\nprivate:\nconst T height_;\nconst U width_;\n};\n</code></pre>"},{"location":"ch09-02-class-templates/#_4","title":"\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5316","text":"<p>\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9a\u307e\u308b\u5024\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u306f\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code>template &lt;typename T, int N&gt;\nclass Array {\npublic:\nint size() const {\nreturn N;\n}\n\nT data_[N];\n};\n</code></pre>"},{"location":"ch09-03-template-specializations/","title":"\u7279\u6b8a\u5316","text":"<p>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u5b9f\u5f15\u6570\u306b\u5fdc\u3058\u3066\u95a2\u6570\u3084\u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002</p> <pre><code>// \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\ntemplate &lt;typename T&gt;\nT Sum(T a, T b) {\nreturn a + b;\n}\n\n// \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\nSum&lt;int&gt;(1, 2);\n</code></pre> <p><code>Sum&lt;int&gt;(1, 2)</code> \u3068\u3044\u3046\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066 <code>T</code> \u304c <code>int</code> \u3067\u3042\u308b\u95a2\u6570\u304c\u5fc5\u8981\u3068\u5224\u65ad\u3055\u308c\u3001\u6b21\u306e\u95a2\u6570\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p> <pre><code>int Sum(int a, int b) {\nreturn a + b;\n}\n</code></pre> <p>\u3053\u306e\u3088\u3046\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3059\u308b\u7b87\u6240\u306b\u304a\u3044\u3066\u3001 \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304a\u3088\u3073 \u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u7279\u6b8a\u5316 (\u307e\u305f\u306f\u6697\u9ed9\u7684\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316) \u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u7279\u6b8a\u5316\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u884c\u308f\u308c\u308b\u305f\u3081\u3001 \u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u306f\u305d\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3082\u884c\u3044\u307e\u3059\u3002</p> sum.h <pre><code>#ifndef SUM_H_\n#define SUM_H_\n\ntemplate &lt;typename T&gt;\ninline T Sum(T a, T b) {  // inline \u6307\u5b9a\u304c\u5fc5\u8981\nreturn a + b;\n}\n\n#endif  // SUM_H_\n</code></pre> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"sum.h\"\n\nint main() {\nstd::cout &lt;&lt; Sum(1, 2) &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u660e\u793a\u7684\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3068extern template <p>\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3059\u308b\u7b87\u6240\u3067\u95a2\u6570\u3084\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u3068\u3001 \u30b3\u30f3\u30d1\u30a4\u30eb\u901f\u5ea6\u304c\u4f4e\u4e0b\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u5ba3\u8a00\u3060\u3051\u884c\u3044\u3001\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u660e\u793a\u7684\u306b\u95a2\u6570\u3084\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3067 \u4e88\u3081template\u3092\u5b9f\u4f53\u5316\u3067\u304d\u308b\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u901f\u5ea6\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002</p> sum.h <pre><code>#ifndef SUM_H_\n#define SUM_H_\n\ntemplate &lt;typename T&gt;\nT Sum(T a, T b);  // \u5ba3\u8a00\u3060\u3051\u884c\u3046 (inline \u3082\u3064\u3051\u306a\u3044)\n\n#endif  // SUM_H_\n</code></pre> sum.cc <pre><code>#include \"sum.h\"\n\n// \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b9a\u7fa9\ntemplate &lt;typename T&gt;\nT Sum(T a, T b) {\nreturn a + b;\n}\n\n// \u660e\u793a\u7684\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\ntemplate int Sum&lt;int&gt;(int, int);\n</code></pre> <p>\u3053\u3046\u3057\u305f\u69cb\u6210\u306b\u3059\u308b\u3068\u4f7f\u7528\u53ef\u80fd\u306a\u578b\u306f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u660e\u793a\u7684\u306a\u751f\u6210\u3092\u884c\u3046\u578b\u306e\u307f\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002 \u305f\u3068\u3048\u3070 <code>Sum&lt;double&gt;(double, double)</code> \u306f\u751f\u6210\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081 <code>Sum(1.2, 3.4)</code> \u306e\u3088\u3046\u306b\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002 \u304b\u3068\u3044\u3063\u3066\u660e\u793a\u7684\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u5897\u3084\u3057\u3066\u3044\u304f\u3068\u3001\u305d\u308c\u3092\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u305f\u5834\u5408\u3001 \u30e9\u30a4\u30d6\u30e9\u30ea\u30b5\u30a4\u30ba\u304c\u80a5\u5927\u5316\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002</p> <p>\u3053\u3046\u3057\u305f\u554f\u984c\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u306f\u3001extern template\u3092\u5229\u7528\u3057\u307e\u3059\u3002 \u901a\u5e38\u901a\u308a\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3067template\u95a2\u6570/\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u3092\u884c\u3046\u306e\u3067\u3059\u304c \u5b9f\u4f53\u5316\u3059\u308b\u983b\u5ea6\u304c\u9ad8\u3044\u3082\u306e\u3060\u3051\u3092extern\u3057\u3001\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u5b9f\u4f53\u5316\u3055\u305b\u307e\u3059</p> sum.h <pre><code>#ifndef SUM_H_\n#define SUM_H_\n\n// \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b9a\u7fa9\ntemplate &lt;typename T&gt;\nT Sum(T a, T b) {\nreturn a + b;\n}\n\n//\u6697\u9ed9\u7684\u5b9f\u4f53\u5316\u3092\u963b\u6b62\nextern template int Sum&lt;int&gt;(int, int);\n#endif  // SUM_H_\n</code></pre> sum.cc <pre><code>#include \"sum.h\"\n\n//\u3088\u304f\u4f7f\u3046\u3082\u306e\u3060\u3051\u5b9f\u4f53\u5316\u3055\u305b\u308b\ntemplate int Sum&lt;int&gt;(int, int);\n</code></pre>"},{"location":"ch09-03-template-specializations/#_2","title":"\u5b8c\u5168\u7279\u6b8a\u5316","text":"<p>\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3084\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u78ba\u5b9a\u3057\u305f\u6642\u306b\u5225\u306e\u5b9a\u7fa9\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u3063\u3066\u7279\u5b9a\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306b\u5bfe\u3059\u308b\u6319\u52d5\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3092\u5b8c\u5168\u7279\u6b8a\u5316 (\u307e\u305f\u306f\u660e\u793a\u7684\u7279\u6b8a\u5316) \u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b8c\u5168\u7279\u6b8a\u5316\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>template &lt;typename T&gt;\nT DoSomething(T a, T b) {\nreturn a + b;\n}\n\ntemplate &lt;&gt;\ndouble DoSomething&lt;double&gt;(double a, double b) {\nreturn a * b;\n}\nstd::cout &lt;&lt; DoSomething(2, 3) &lt;&lt; std::endl;  // 5\nstd::cout &lt;&lt; DoSomething(2.0, 3.0) &lt;&lt; std::endl;  // 6\n</code></pre> <p>\u95a2\u6570\u306e\u524d\u306b <code>template &lt;&gt;</code> \u3092\u4ed8\u3051\u3066\u5b8c\u5168\u7279\u6b8a\u5316\u3092\u884c\u3046\u3053\u3068\u3092\u6307\u5b9a\u3057\u3001 \u95a2\u6570\u540d\u306e\u5f8c\u306b <code>&lt; ... &gt;</code> \u3067\u5bfe\u8c61\u3068\u306a\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p>\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b8c\u5168\u7279\u6b8a\u5316\u3082\u540c\u69d8\u3067\u3059\u3002</p> <pre><code>template &lt;typename T&gt;\nclass Array {\npublic:\nexplicit Array(int size)\n: size_(size),\ndata_(new T[size_]) {}\n\n~Array() {\ndelete[] data_;\n}\n\nint Size() const {\nreturn size_;\n}\n\nprivate:\nconst int size_;\nT* data_;\n};\n\ntemplate &lt;&gt;\nclass Array&lt;bool&gt; {\npublic:\nexplicit Array(int size)\n: size_(size),\ndata_size_((size - 1) / 8 + 1),\ndata_(new uint8_t[data_size_]) {}\n\n~Array() {\ndelete[] data_;\n}\n\nint Size() const {\nreturn size_;\n}\n\nprivate:\nconst int size_;\nconst int data_size_;\nuint8_t* data_;\n};\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f8\u500b\u306e <code>bool</code> \u5024\u30921\u500b\u306e <code>uint8_t</code> \u3067\u6271\u3063\u3066\u7701\u30e1\u30e2\u30ea\u5316\u3059\u308b\u305f\u3081\u306b\u3001 <code>bool</code> \u306b\u5bfe\u3059\u308b\u5b8c\u5168\u7279\u6b8a\u5316\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch09-03-template-specializations/#_3","title":"\u90e8\u5206\u7279\u6b8a\u5316","text":"<p>\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4e00\u90e8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u78ba\u5b9a\u3055\u305b\u305f\u308a\u3001\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u90e8\u5206\u7279\u6b8a\u5316\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306f \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u90e8\u5206\u7279\u6b8a\u5316 - cppreference.com</p> <p>\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> \u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u90e8\u5206\u7279\u6b8a\u5316\u3057\u305f\u3044\u3068\u304d <p>\u90e8\u5206\u7279\u6b8a\u5316\u306f\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5bfe\u3057\u3066\u306e\u307f\u884c\u306a\u3048\u307e\u3059\u3002\u3057\u304b\u3057\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u5bfe\u3057\u3066\u3082\u884c\u3044\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u5834\u5408\u306fSFINAE(Substitution Failure Is Not An Error)\u3092\u5229\u7528\u3057\u305f\u66f8\u304d\u65b9\u3092\u3057\u307e\u3059</p> <pre><code>template &lt;bool cond, typename T&gt;\nusing enable_if_t = typename std::enable_if&lt;cond, T&gt;::type;\ntemplate &lt;typename T, enable_if_t&lt;(\u306a\u3093\u304b\u6761\u4ef6\u5f0f), std::nullptr_t&gt; = nullptr&gt;\nvoid foo(T t) {}\ntemplate &lt;typename T, enable_if_t&lt;!(\u306a\u3093\u304b\u6761\u4ef6\u5f0f), std::nullptr_t&gt; = nullptr&gt;\nvoid foo(T t) {}\n</code></pre> <p>std::enable_if\u3092\u4f7f\u3063\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u6642\u3001enabler\u3092\u4f7f\u3046\uff1f - Qiita</p> <p>\u3042\u308b\u3044\u306fC++17\u3067\u8ffd\u52a0\u3055\u308c\u305fconstexpr if \u6587\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ch10-01-exceptions/","title":"\u4f8b\u5916\u51e6\u7406","text":"<p>\u4f8b\u5916\u51e6\u7406\u3068\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u3001 \u5f8c\u7d9a\u306e\u51e6\u7406\u3092\u884c\u3046\u306e\u3092\u3084\u3081\u3066\u30a8\u30e9\u30fc\u767a\u751f\u6642\u7528\u306e\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306e\u6a5f\u80fd\u3067\u3059\u3002</p> <p>\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u306b\u3088\u308b\u4f8b\u5916\u51e6\u7406\u306e\u4f7f\u7528\u7981\u6b62</p> <p>C++ \u306b\u304a\u3051\u308b\u4f8b\u5916\u51e6\u7406\u306f\u554f\u984c\u70b9\u304c\u591a\u304f\u3001 Google C++ Style Guide \u3084 LLVM Coding Standards \u3067\u306f\u4f8b\u5916\u51e6\u7406\u306e\u4f7f\u7528\u3092\u539f\u5247\u7981\u6b62\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u4f8b\u5916\u51e6\u7406\u306b\u304a\u3044\u3066\u30a8\u30e9\u30fc\u3092\u8868\u3059\u3082\u306e\u4f8b\u5916\u3068\u3044\u3044\u307e\u3059\u3002 \u4f8b\u5916\u51e6\u7406\u306f\u6b21\u306e2\u3064\u306e\u6bb5\u968e\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002</p> <ol> <li>\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u7b87\u6240\u3067\u4f8b\u5916\u3092\u9001\u51fa\u3057\u3001\u5f8c\u7d9a\u306e\u51e6\u7406\u3092\u884c\u3046\u306e\u3092\u3084\u3081\u308b</li> <li>\u9001\u51fa\u3055\u308c\u305f\u4f8b\u5916\u3092\u6355\u6349\u3057\u3001\u30a8\u30e9\u30fc\u767a\u751f\u6642\u7528\u306e\u51e6\u7406\u3092\u884c\u3046</li> </ol> <p>\u6b63\u306e\u6574\u6570\u3092\u8868\u3059 <code>std::string</code> \u3092 <code>int</code> \u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u306b\u304a\u3044\u3066\u3001 \u7121\u52b9\u306a\u6587\u5b57\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u5909\u63db\u51e6\u7406\u3092\u3084\u3081\u3066\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u306b\u306f \u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>std::string str = \"123XY56\";\ntry {\nint num = 0;\nfor (const auto s : str) {\nnum *= 10;\nswitch (s) {\ncase '0':  num += 0;  break;\ncase '1':  num += 1;  break;\ncase '2':  num += 2;  break;\ncase '3':  num += 3;  break;\ncase '4':  num += 4;  break;\ncase '5':  num += 5;  break;\ncase '6':  num += 6;  break;\ncase '7':  num += 7;  break;\ncase '8':  num += 8;  break;\ncase '9':  num += 9;  break;\ndefault:\n// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u3067\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8a2d\u5b9a\nthrow std::runtime_error(\"\u6570\u5024\u3067\u306f\u306a\u3044\u6587\u5b57\u304c\u5165\u3063\u3066\u3044\u307e\u3059\");\n}\n}\nstd::cout &lt;&lt; num &lt;&lt; std::endl;  // \u554f\u984c\u306a\u304f\u5909\u63db\u3067\u304d\u305f\u5834\u5408\u306b\u306f\u5909\u63db\u5f8c\u306e\u5024\u3092\u51fa\u529b\n} catch (const std::runtime_error&amp; e) {\n// what() \u3067\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n</code></pre> <p>\u4f8b\u5916\u306e\u9001\u51fa\u306f <code>throw</code> \u3067\u884c\u3044\u307e\u3059\u3002</p> <p>\u3053\u306e\u4f8b\u3067\u306f\u6570\u5024\u3067\u306f\u306a\u3044\u6587\u5b57\u304c\u3042\u308b\u5834\u5408\u306b\u30a8\u30e9\u30fc\u3068\u3057\u3066 \u4f8b\u5916 <code>std::runtime_error</code> \u3092\u9001\u51fa\u3057\u3001 \u6b8b\u3063\u3066\u3044\u308b\u6587\u5b57\u306e\u5909\u63db\u51e6\u7406\u306f\u884c\u308f\u305a\u306b\u30a8\u30e9\u30fc\u767a\u751f\u6642\u7528\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002</p> <p><code>try</code> \u30d6\u30ed\u30c3\u30af\u5185\u3067\u9001\u51fa\u3057\u305f\u4f8b\u5916\u306f <code>catch</code> \u30d6\u30ed\u30c3\u30af\u3067\u6355\u6349\u3057\u307e\u3059\u3002</p> <p>\u3053\u306e\u4f8b\u3067\u306f\u4f8b\u5916 <code>std::runtime_error</code> \u304c\u9001\u51fa\u3055\u308c\u305f\u5834\u5408\u306b \u53c2\u7167 <code>e</code> \u3067\u53d7\u3051\u3066 <code>e.what()</code> \u3067\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002</p>"},{"location":"ch10-01-exceptions/#_2","title":"\u4f8b\u5916\u306e\u578b","text":"<p>\u4f8b\u5916\u306b\u306f\u3042\u3089\u3086\u308b\u578b\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code>try {\nthrow 123;\n} catch (const int v) {\nstd::cout &lt;&lt; v &lt;&lt; std::endl;\n}\n</code></pre> <p>\u901a\u5e38\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f8b\u5916\u30af\u30e9\u30b9\u3084\u305d\u308c\u3092\u7d99\u627f\u3057\u305f\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"ch10-01-exceptions/#_3","title":"\u578b\u306b\u5fdc\u3058\u305f\u6355\u6349","text":"<p>1\u3064\u306e <code>try</code> \u30d6\u30ed\u30c3\u30af\u306b\u5bfe\u3057\u3066 <code>catch</code> \u30d6\u30ed\u30c3\u30af\u306f\u8907\u6570\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u3063\u3066\u4f8b\u5916\u306e\u578b\u306b\u5fdc\u3058\u305f\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>try {\nthrow 123;  // int \u3092\u9001\u51fa\n} catch (const bool v) {  // int \u306f bool \u3068\u306f\u7570\u306a\u308b\u578b\u3067\u3042\u308b\u305f\u3081\u6355\u6349\u3055\u308c\u306a\u3044\nstd::cout &lt;&lt; \"bool: \" &lt;&lt; v &lt;&lt; std::endl;\n} catch (const int v) {  // \u3053\u3053\u3067\u6355\u6349\u3055\u308c\u308b\nstd::cout &lt;&lt; \"int: \" &lt;&lt; v &lt;&lt; std::endl;\n}\n</code></pre> <p>\u4f8b\u5916\u306e\u578b\u304c\u30af\u30e9\u30b9\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\u3092\u542b\u3081\u3066\u6355\u6349\u306f\u884c\u308f\u308c\u307e\u3059\u3002 \u6355\u6349\u306f\u4e0a\u304b\u3089\u9806\u306b\u78ba\u8a8d\u3057\u3066\u6700\u521d\u306b\u4e00\u81f4\u3057\u305f\u3082\u306e\u3060\u3051\u304c\u51e6\u7406\u3055\u308c\u307e\u3059\u3002</p> <pre><code>try {\nthrow std::runtime_error(\"test\");  // std::runtime_error \u3092\u9001\u51fa\n} catch (const std::exception&amp; e) {\n// std::runtime_error \u306f std::exception \u306e\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u3042\u308b\u305f\u3081\u3053\u3053\u3067\u6355\u6349\u3055\u308c\u308b\nstd::cout &lt;&lt; \"std::exception: \" &lt;&lt; e.what() &lt;&lt; std::endl;\n} catch (const std::runtime_error&amp; e) {\n// \u3053\u306e\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u306a\u3044\nstd::cout &lt;&lt; \"std::runtime_error: \" &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n</code></pre> <p><code>catch (...)</code> \u3068\u8a18\u8f09\u3059\u308b\u3053\u3068\u3067\u3042\u3089\u3086\u308b\u4f8b\u5916\u3092\u6355\u6349\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e <code>catch</code> \u30d6\u30ed\u30c3\u30af\u3067\u306f\u4f8b\u5916\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code>try {\nthrow 123;\n} catch (...) {\nstd::cout &lt;&lt; \"Unexpected exception was thrown.\" &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"ch10-01-exceptions/#_4","title":"\u95a2\u6570\u304b\u3089\u4f8b\u5916\u3092\u9001\u51fa","text":"<p>\u95a2\u6570\u5185\u3067\u4f8b\u5916\u304c\u6355\u6349\u3055\u308c\u306a\u3044\u5834\u5408\u3001 \u6355\u6349\u3055\u308c\u308b\u307e\u3067\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u5143\u3092\u9806\u306b\u8fbf\u3063\u3066\u3044\u304d\u307e\u3059\u3002</p> <p>\u6b63\u306e\u6574\u6570\u3092\u8868\u3059 <code>std::string</code> \u3092 <code>int</code> \u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u3092\u95a2\u6570\u5316\u3057\u3001 \u7121\u52b9\u306a\u6587\u5b57\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u95a2\u6570\u304b\u3089\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>int StringToInt(const std::string&amp; str) {\nint num = 0;\nfor (const auto s : str) {\nnum *= 10;\nswitch (s) {\ncase '0':  num += 0;  break;\ncase '1':  num += 1;  break;\ncase '2':  num += 2;  break;\ncase '3':  num += 3;  break;\ncase '4':  num += 4;  break;\ncase '5':  num += 5;  break;\ncase '6':  num += 6;  break;\ncase '7':  num += 7;  break;\ncase '8':  num += 8;  break;\ncase '9':  num += 9;  break;\ndefault:\nthrow std::runtime_error(\"\u6570\u5024\u3067\u306f\u306a\u3044\u6587\u5b57\u304c\u5165\u3063\u3066\u3044\u307e\u3059\");\n}\n}\nreturn num;\n}\n</code></pre> <p>\u3053\u306e\u95a2\u6570\u5185\u3067\u306f\u4f8b\u5916\u3092\u6355\u6349\u3057\u306a\u3044\u305f\u3081 <code>try</code> \u30d6\u30ed\u30c3\u30af\u304c\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u547c\u3073\u51fa\u3057\u5143\u3067\u6355\u6349\u3059\u308b\u305f\u3081\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>std::string str = \"123XY56\";\ntry {\nauto num = StringToInt(str);\nstd::cout &lt;&lt; num &lt;&lt; std::endl;\n} catch (const std::runtime_error&amp; e) {\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n</code></pre> <p>\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u306e\u306f\u547c\u3073\u51fa\u3059\u95a2\u6570\u306e\u5185\u90e8\u3067\u3042\u308b\u305f\u3081\u3001 \u3053\u306e <code>try</code> \u30d6\u30ed\u30c3\u30af\u306b\u306f <code>throw</code> \u304c\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>1\u6587\u5b57\u305a\u3064\u306e\u6570\u5024\u3078\u306e\u5909\u63db\u51e6\u7406\u3092\u95a2\u6570\u5316\u3059\u308b\u3068\u3001 \u4f8b\u5916\u304c\u6355\u6349\u3055\u308c\u308b\u307e\u3067\u306e\u9593\u306b\u95a2\u6570\u547c\u3073\u51fa\u3057\u30922\u56de\u9061\u308a\u307e\u3059\u3002</p> <p>exception.cc</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint CharToInt(const char c) {\nswitch (c) {\ncase '0':  return 0;\ncase '1':  return 1;\ncase '2':  return 2;\ncase '3':  return 3;\ncase '4':  return 4;\ncase '5':  return 5;\ncase '6':  return 6;\ncase '7':  return 7;\ncase '8':  return 8;\ncase '9':  return 9;\ndefault:\n// \u95a2\u6570\u304b\u3089\u4f8b\u5916\u3092\u9001\u51fa\nthrow std::runtime_error(\"\u6570\u5024\u3067\u306f\u306a\u3044\u6587\u5b57\u304c\u5165\u3063\u3066\u3044\u307e\u3059\");\n}\n}\n\nint StringToInt(const std::string&amp; str) {\nint num = 0;\nfor (const auto s : str) {\nnum *= 10;\n\n// CharToInt \u304b\u3089\u4f8b\u5916\u304c\u9001\u51fa\u3055\u308c\u308b\nnum += CharToInt(s);\n}\nreturn num;\n}\n\nint main() {\nstd::string str = \"123XY56\";\ntry {\n// StringToInt \u5185\u90e8\u306e CharToInt \u304b\u3089\u4f8b\u5916\u304c\u9001\u51fa\u3055\u308c\u308b\nauto num = StringToInt(str);\nstd::cout &lt;&lt; num &lt;&lt; std::endl;\n} catch (const std::runtime_error&amp; e) {\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch10-01-exceptions/#_5","title":"\u4f8b\u5916\u304c\u6355\u6349\u3055\u308c\u306a\u3044\u5834\u5408","text":"<p>\u9001\u51fa\u3055\u308c\u305f\u4f8b\u5916\u304c\u6355\u6349\u3055\u308c\u306a\u3044\u5834\u5408\u3001 std::terminate \u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <pre><code>int main() {\nstd::string str = \"123XY56\";\nauto num = StringToInt(str);\nstd::cout &lt;&lt; num &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre>"},{"location":"ch10-01-exceptions/#noexcept","title":"noexcept","text":"<p>\u95a2\u6570\u304c\u4f8b\u5916\u3092\u9001\u51fa\u3057\u306a\u3044\u3053\u3068\u3092\u660e\u793a\u7684\u306b\u8868\u3059\u306b\u306f <code>noexcept</code> \u3092\u3064\u3051\u307e\u3059\u3002 \u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u6697\u9ed9\u7684\u306b <code>noexcept</code> \u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>int Compare(int a, int b) noexcept {\nif (a &lt; b) {\nreturn -1;\n} else if (a &gt; b) {\nreturn 1;\n} else {  // a == b\nreturn 0;\n}\n}\n</code></pre> <p><code>noexcept</code> \u306b\u306f\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int Compare(int a, int b) noexcept(true);  // \u4f8b\u5916\u3092\u9001\u51fa\u3057\u306a\u3044\nint CharToInt(const char c) noexcept(false);  // \u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\n</code></pre> <p><code>noexcept</code> \u5185\u3067 <code>noexcept</code> \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001 \u4ed6\u306e\u95a2\u6570\u304c <code>noexcept</code> \u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u6761\u4ef6\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int StringToInt(const std::string&amp; str) noexcept(noexcept(CharToInt(char())));\n</code></pre> <p><code>noexcept</code> \u6307\u5b9a\u3055\u308c\u305f\u95a2\u6570\u304b\u3089\u4f8b\u5916\u304c\u9001\u51fa\u3055\u308c\u305f\u5834\u5408\u3001 std::terminate \u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <p>\u975e\u63a8\u5968\u306e\u52d5\u7684\u4f8b\u5916\u4ed5\u69d8</p> <p>\u95a2\u6570\u304b\u3089\u9001\u51fa\u3055\u308c\u308b\u4f8b\u5916\u3092\u5217\u6319\u3059\u308b\u305f\u3081\u306e <code>throw</code> \u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\u304c\u3001 C++11 \u3067\u306f\u975e\u63a8\u5968\u3068\u306a\u3063\u3066\u304a\u308a C++17 \u3067\u306f\u524a\u9664\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002</p> <pre><code>int CharToInt(const char c) throw(std::runtime_error);\n</code></pre> <p>\u8a73\u7d30\u306f \u975e\u63a8\u5968\u3060\u3063\u305f\u53e4\u3044\u4f8b\u5916\u4ed5\u69d8\u3092\u524a\u9664 - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch10-01-exceptions/#_6","title":"\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f8b\u5916\u30af\u30e9\u30b9","text":"<p>\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f8b\u5916\u30af\u30e9\u30b9\u306e\u4e00\u90e8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p> <p>\u4e00\u89a7\u306f std::exception - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p></p> <p>std::logic_error \u3068 std::runtime_error \u306e\u9055\u3044</p> <p>\u4e00\u822c\u306b \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u524d\u306b\u691c\u51fa\u53ef\u80fd\u306a\u3082\u306e\u306f <code>std::logic_error</code>\u3001 \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u306e\u307f\u691c\u51fa\u53ef\u80fd\u306a\u3082\u306e\u306f <code>std::runtime_error</code> \u3068\u3057\u3066\u5206\u985e\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ch10-01-exceptions/#stdexception","title":"std::exception","text":"<p>\u3059\u3079\u3066\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f8b\u5916\u30af\u30e9\u30b9\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3067\u3059\u3002</p> <p>\u3053\u306e\u30af\u30e9\u30b9\u3067\u4f8b\u5916\u3092\u6355\u6349\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001 \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f8b\u5916\u30af\u30e9\u30b9\u3092\u3059\u3079\u3066\u6355\u6349\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>int main() {\nstd::string str = \"123XY56\";\ntry {\nauto num = StringToInt(str);  // std::runtime_error \u3092\u9001\u51fa\nstd::cout &lt;&lt; num &lt;&lt; std::endl;\n} catch (const std::exception&amp; e) {\n// std::exception \u3067 std::runtime_error \u3092\u6355\u6349\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch10-01-exceptions/#stdlogic_error","title":"std::logic_error","text":"<p>\u524d\u63d0\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u306a\u3069\u8ad6\u7406\u30a8\u30e9\u30fc\u3092\u8868\u3059\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002</p> <p>\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067 <code>std::logic_error</code> \u3092\u9001\u51fa\u3059\u308b\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p>"},{"location":"ch10-01-exceptions/#stdinvalid_argument","title":"std::invalid_argument","text":"<p>\u95a2\u6570\u306e\u5b9f\u5f15\u6570\u304c\u4e0d\u6b63\u306a\u5024\u3067\u3042\u308b\u5834\u5408\u306e\u8ad6\u7406\u30a8\u30e9\u30fc\u3092\u8868\u3059\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002</p> <p><code>std::bitset</code> \u3067\u5909\u63db\u3067\u304d\u306a\u3044\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306a\u3069\u306b\u9001\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>try {\nstd::bitset&lt;8&gt; b(\"0000x111\");  // \u4e0d\u6b63\u306a\u6587\u5b57 x \u3092\u542b\u3093\u3067\u3044\u308b\nstd::cout &lt;&lt; b &lt;&lt; std::endl;\n} catch (const std::invalid_argument&amp; e) {\nstd::cout &lt;&lt; \"std::invalid_argument \u3092\u6355\u6349\" &lt;&lt; std::endl;\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n</code></pre> <p><code>std::bitset</code> \u3067\u306f\u6587\u5b57\u5217\u304b\u30892\u9032\u6570\u6570\u5024\u3078\u306e\u5909\u63db\u51e6\u7406\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002 \u4e00\u822c\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306f\u623b\u308a\u5024\u304c\u306a\u3044\u305f\u3081\u3001\u623b\u308a\u5024\u306b\u3088\u3063\u3066\u30a8\u30e9\u30fc\u6709\u7121\u3092\u5224\u65ad\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u305d\u306e\u305f\u3081\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch10-01-exceptions/#stdout_of_range","title":"std::out_of_range","text":"<p>\u914d\u5217\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u8981\u7d20\u53c2\u7167\u3067 \u7bc4\u56f2\u5916\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306e\u8ad6\u7406\u30a8\u30e9\u30fc\u3092\u8868\u3059\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002</p> <p><code>std::vector</code> \u306e <code>at()</code> \u3067\u7bc4\u56f2\u5916\u306e\u8981\u7d20\u3092\u53c2\u7167\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u306a\u3069\u306b\u9001\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>std::vector&lt;int&gt; x = {1, 2, 3, 4, 5};  // \u8981\u7d20\u6570\u304c 5 \u306e\u30d9\u30af\u30bf\n\ntry {\nint a = x.at(5);  // at() \u3067\u8981\u7d20\u53c2\u7167\nstd::cout &lt;&lt; \"5\u756a\u76ee\u306e\u5024: \" &lt;&lt; a &lt;&lt; std::endl;\n} catch (const std::out_of_range&amp; e) {\nstd::cout &lt;&lt; \"std::out_of_range \u3092\u6355\u6349\" &lt;&lt; std::endl;\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n</code></pre> <p><code>std::vector</code> \u306e <code>[]</code> \u3067\u7bc4\u56f2\u5916\u306e\u8981\u7d20\u3092\u53c2\u7167\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u306b\u306f\u4f8b\u5916\u306f\u9001\u51fa\u3055\u308c\u307e\u305b\u3093\u3002</p> <pre><code>std::vector&lt;int&gt; x = {1, 2, 3, 4, 5};  // \u8981\u7d20\u6570\u304c 5 \u306e\u30d9\u30af\u30bf\n\ntry {\nint a = x[5];  // [] \u3067\u8981\u7d20\u53c2\u7167\nstd::cout &lt;&lt; \"5\u756a\u76ee\u306e\u5024: \" &lt;&lt; a &lt;&lt; std::endl;  // \u4e0d\u5b9a\u5024\u304c\u51fa\u529b\u3055\u308c\u308b\n} catch (...) {\nstd::cout &lt;&lt; \"\u4f8b\u5916\u3092\u6355\u6349\" &lt;&lt; std::endl;  // \u4f8b\u5916\u306f\u9001\u51fa\u3055\u308c\u306a\u3044\u305f\u3081\u5b9f\u884c\u3055\u308c\u306a\u3044\n}\n</code></pre> <p>\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd</p> <p>\u3053\u306e\u4f8b\u3067 <code>[]</code> \u3067\u7bc4\u56f2\u5916\u306e\u8981\u7d20\u53c2\u7167\u3092\u3059\u308b\u969b\u306b \u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u304c\u767a\u751f\u3057\u3066 OS \u306b\u3088\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7d42\u4e86\u3055\u308c\u308b\u53ef\u80fd\u6027\u3082\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ch10-01-exceptions/#stdruntime_error","title":"std::runtime_error","text":"<p>\u5b9f\u884c\u6642\u306b\u8a55\u4fa1\u3059\u308b\u5024\u306e\u4e0d\u6b63\u3084\u5b9f\u884c\u74b0\u5883\u306e\u554f\u984c\u306a\u3069 \u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u3092\u8868\u3059\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002</p>"},{"location":"ch10-01-exceptions/#stdbad_cast","title":"std::bad_cast","text":"<p><code>dynamic_cast</code> \u3067\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u9001\u51fa\u3055\u308c\u307e\u3059\u3002 <code>dynamic_cast</code> \u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f \u30c0\u30a6\u30f3\u30ad\u30e3\u30b9\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch10-01-exceptions/#_7","title":"\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u4f8b\u5916","text":"<p>\u4f8b\u5916\u3092\u9001\u51fa\u3057\u3066\u6355\u6349\u3059\u308b\u307e\u3067\u306e\u9593\u306b\u3001 \u3055\u3089\u306b\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u3068 std::terminate \u304c\u547c\u3073\u51fa\u3055\u308c\u3066 \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3059\u3002 \u3053\u306e\u4e8b\u8c61\u306f\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304b\u3089\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u3068\u767a\u751f\u3057\u307e\u3059\u3002</p> <p>\u4f8b\u5916\u3092\u9001\u51fa\u3057\u305f\u5834\u5408\u3001 \u305d\u306e\u4f8b\u5916\u304c\u6355\u6349\u3055\u308c\u308b\u307e\u3067\u306b\u751f\u5b58\u671f\u9593\u304c\u7d42\u4e86\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f \u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u547c\u3073\u51fa\u3057\u3066\u7834\u68c4\u3055\u308c\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nclass DestructorAndException {\npublic:\n~DestructorAndException() {\n// \u4f8b\u5916\u3092\u9001\u51fa\u3057\u3066\u6355\u6349\u3059\u308b\u307e\u3067\u306e\u9593\u306b\u5b9f\u884c\u3055\u308c\u308b\nstd::cout &lt;&lt; \"~DestructorAndException() is called.\" &lt;&lt; std::endl;\n}\n};\n\nint main() {\ntry {\nDestructorAndException obj;\nthrow std::runtime_error(\"main()\");\n} catch (const std::exception&amp; e) {\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304b\u3089\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u3068\u3001 \u300c\u4f8b\u5916\u3092\u9001\u51fa\u3057\u3066\u6355\u6349\u3059\u308b\u307e\u3067\u306e\u9593\u306b\u3001\u3055\u3089\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304b\u3089\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u300d\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001 std::terminate \u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nclass DestructorAndException {\npublic:\n// \u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u6697\u9ed9\u7684\u306b noexcept \u306b\u306a\u308b\u305f\u3081 noexcept(false) \u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\n~DestructorAndException() noexcept(false) {\n// \u4f8b\u5916\u3092\u9001\u51fa\u3057\u3066\u6355\u6349\u3059\u308b\u307e\u3067\u306e\u9593\u306b\u5b9f\u884c\u3055\u308c\u308b\nstd::cout &lt;&lt; \"~DestructorAndException() is called.\" &lt;&lt; std::endl;\n\n// \u3055\u3089\u306b\u4f8b\u5916\u3092\u9001\u51fa\nthrow std::runtime_error(\"~DestructorAndException()\");\n}\n};\n\nint main() {\ntry {\nDestructorAndException obj;\nthrow std::runtime_error(\"main()\");\n} catch (const std::exception&amp; e) {\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n\nreturn 0;\n}\n</code></pre> <p>\u3053\u3046\u3057\u305f\u6319\u52d5\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3001 \u4e00\u822c\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u304b\u3089\u306f\u4f8b\u5916\u3092\u9001\u51fa\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p>"},{"location":"ch10-02-signals/","title":"\u30b7\u30b0\u30ca\u30eb","text":"<p>\u30b7\u30b0\u30ca\u30eb\u3068\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u4e2d\u306b\u5916\u90e8\u304b\u3089\u8981\u6c42\u3092\u901a\u77e5\u3059\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002 OS \u304b\u3089\u306e\u30a8\u30e9\u30fc\u901a\u77e5\u306a\u3069\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <p><code>&lt;csignal&gt;</code> \u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30b7\u30b0\u30ca\u30eb\u306b\u306f\u4ee5\u4e0b\u306e6\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>SIGABRT</li> <li>SIGFPE</li> <li>SIGILL</li> <li>SIGINT</li> <li>SIGSEGV</li> <li>SIGTERM</li> </ul> <p>\u4e00\u90e8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p>"},{"location":"ch10-02-signals/#sigabrt","title":"SIGABRT","text":"<p>std::abort \u306e\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u767a\u751f\u3057\u307e\u3059\u3002</p> <p>std::abort \u306f std::terminate \u306a\u3069\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>#include &lt;exception&gt;\n\nint main() {\n// \u4f8b\u5916\u304c\u6355\u6349\u3055\u308c\u306a\u3044\u305f\u3081 std::terminate \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\nthrow std::exception();\n\nreturn 0;\n}\n</code></pre>"},{"location":"ch10-02-signals/#sigfpe","title":"SIGFPE","text":"<p>\u6574\u6570\u306e0\u9664\u7b97\u306a\u3069\u4e0d\u6b63\u306a\u7b97\u8853\u6f14\u7b97\u3092\u884c\u3046\u3068\u767a\u751f\u3057\u307e\u3059\u3002</p> <pre><code>int x = 2;\nint y = 0;\nint z = x / y;  // \u6574\u6570\u306e0\u9664\u7b97\n</code></pre> <p>\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306b\u5bfe\u3059\u308b\u7b97\u8853\u6f14\u7b97\u30a8\u30e9\u30fc</p> <p>\u591a\u304f\u306e\u51e6\u7406\u7cfb\u3067\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u898f\u683c\u3068\u3057\u3066 IEEE 754 \u304c\u4f7f\u7528\u3055\u308c\u3066\u304a\u308a\u3001 \u4ee5\u4e0b\u3092\u5024\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>\u975e\u6570 <code>NaN</code></li> <li>\u7b26\u53f7\u4ed8\u30bc\u30ed (\\(+0\\) \u3068 \\(-0\\))</li> <li>\u7121\u9650\u5927 (\\(+\\infty\\) \u3068 \\(-\\infty\\))</li> </ul> <p>\u3053\u3046\u3057\u305f\u51e6\u7406\u7cfb\u3067\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u6f14\u7b97\u7d50\u679c\u3067\u3053\u308c\u3089\u306e\u5024\u3092\u4f7f\u7528\u3057\u3001 \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u767a\u751f\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u304c\u591a\u3044\u3067\u3059\u3002</p>"},{"location":"ch10-02-signals/#sigsegv","title":"SIGSEGV","text":"<p>\u7121\u52b9\u306a\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9 (\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u9055\u53cd) \u3092\u884c\u3046\u3068\u767a\u751f\u3057\u307e\u3059\u3002</p> <pre><code>int* x = nullptr;\n\n// nullptr \u306b\u5bfe\u3059\u308b\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067 SIGSEGV \u304c\u767a\u751f\nstd::cout &lt;&lt; *x &lt;&lt; std::endl;\n</code></pre>"},{"location":"ch10-03-assertions/","title":"\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3","text":""},{"location":"ch10-03-assertions/#assert","title":"assert","text":"<p>\u5b9f\u884c\u6642\u306b\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u3068 std::abort \u3092\u547c\u3073\u51fa\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7570\u5e38\u7d42\u4e86\u3055\u305b\u308b\u51e6\u7406\u3067\u3059\u3002</p> <p><code>assert</code> \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <code>&lt;cassert&gt;</code> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code>#include &lt;cassert&gt;\n#include &lt;iostream&gt;\n#include &lt;limits&gt;\n#include &lt;vector&gt;\n\nint Max(const std::vector&lt;int&gt;&amp; v) {\nassert(!v.empty());\nint max = std::numeric_limits&lt;int&gt;::min();\nfor (auto e : v) {\nif (e &gt; max) {\nmax = e;\n}\n}\nreturn max;\n}\n\nint main() {\nstd::vector&lt;int&gt; v1 = {1, 2, 3, 4, 5};\nstd::vector&lt;int&gt; v2;\n\nstd::cout &lt;&lt; Max(v1) &lt;&lt; std::endl;\nstd::cout &lt;&lt; Max(v2) &lt;&lt; std::endl;\n\nreturn 0;\n}\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>$ ./a.exe\n5\nassertion \"!v.empty()\" failed: file \"main.cc\", line 7, function: int Max(const std::vector&lt;int&gt;&amp;)\nAborted (\u30b3\u30a2\u30c0\u30f3\u30d7)\n</code></pre> <p><code>assert</code> \u306f\u958b\u767a\u4e2d\u306b\u30d0\u30b0\u3092\u53d6\u308a\u9664\u304f\u3053\u3068\u3092\u60f3\u5b9a\u3057\u305f\u6a5f\u80fd\u3067\u3001 <code>NDEBUG</code> \u304c\u5b9a\u7fa9\u3055\u308c\u308b\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u3067\u306f\u7121\u52b9\u3068\u306a\u308a\u307e\u3059\u3002 <code>NDEBUG</code> \u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f <code>-DNDEBUG</code> \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 -DNDEBUG main.cc\n</code></pre> <p><code>NDEBUG</code> \u3092\u5b9a\u7fa9\u3057\u3066\u30d3\u30eb\u30c9\u3059\u308b\u3068\u5b9f\u884c\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u5909\u5316\u3057\u307e\u3059\u3002</p> <pre><code>$ ./a.exe\n5\n-2147483648\n</code></pre>"},{"location":"ch10-03-assertions/#static_assert","title":"static_assert","text":"<p>\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3059\u308b\u51e6\u7406\u3067\u3059\u3002</p> <pre><code>template &lt;typename T, int N&gt;\nclass Array {\nstatic_assert(N &gt; 0, \"\u30b5\u30a4\u30ba\u306f0\u3088\u308a\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\");\n\npublic:\nint size() const { return N; }\n\nT data_[N];  // \u30b5\u30a4\u30ba 0 \u306e\u914d\u5217\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\n};\n\nint main() {\nArray&lt;int, 0&gt; a;\nreturn 0;\n}\n</code></pre> <p>\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 -c main.cc\nmain.cc: In instantiation of \u2018class Array&lt;int, 0&gt;\u2019:\nmain.cc:12:19:   required from here\nmain.cc:3:5: \u30a8\u30e9\u30fc: static assertion failed: \u30b5\u30a4\u30ba\u306f0\u3088\u308a\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\n\u305b\u3093\n     static_assert(N &gt; 0, \"\u30b5\u30a4\u30ba\u306f0\u3088\u308a\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\");\n^~~~~~~~~~~~~\n</code></pre>"},{"location":"ch11-01-build/","title":"\u30d3\u30eb\u30c9","text":"<p>\u8aac\u660e\u306b\u4f7f\u7528\u3059\u308b\u74b0\u5883</p> <p>Windows \u306e MSYS2 \u74b0\u5883\u306f\u69cb\u6210\u304c\u8907\u96d1\u306a\u305f\u3081\u3001\u8aac\u660e\u3067\u306f Linux \u74b0\u5883\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u51e6\u7406\u3092\u30d3\u30eb\u30c9\u3068\u3044\u3044\u307e\u3059\u3002 \u30d3\u30eb\u30c9\u306f\u6b21\u306e\u624b\u9806\u3067\u884c\u308f\u308c\u307e\u3059\u3002</p> <ol> <li>\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9</li> <li>\u30b3\u30f3\u30d1\u30a4\u30eb</li> <li>\u30ea\u30f3\u30af</li> </ol>"},{"location":"ch11-01-build/#_2","title":"\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9","text":"<p>\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u524d\u306b\u884c\u308f\u308c\u308b\u524d\u51e6\u7406\u306e\u3053\u3068\u3067\u3059\u3002 \u30b3\u30e1\u30f3\u30c8\u306e\u524a\u9664\u3068 \u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u53f8\u4ee4 \u306e\u5b9f\u884c\u3092\u884c\u3044\u307e\u3059\u3002</p> <p><code>-E</code> \u3092\u6307\u5b9a\u3059\u308b\u3068\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u3060\u3051\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 -E main.cc\n</code></pre>"},{"location":"ch11-01-build/#_3","title":"\u30b3\u30f3\u30d1\u30a4\u30eb","text":"<p>\u4eba\u9593\u304c\u6271\u3046\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u6271\u3046\u305f\u3081\u306b0\u30681\u306e\u8868\u73fe (\u6a5f\u68b0\u8a9e) \u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u3044\u3044\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u5358\u4f4d\u3067\u884c\u3044\u307e\u3059\u3002</p> <p>\u53b3\u5bc6\u306b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3053\u3068\u3092\u30b3\u30f3\u30d1\u30a4\u30e9\u3068\u3044\u3044\u307e\u3059\u304c\u3001 \u30b3\u30f3\u30d1\u30a4\u30eb\u4ee5\u5916\u306e\u30d3\u30eb\u30c9\u51e6\u7406\u3082\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002</p> <p>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u6a5f\u68b0\u8a9e\u306b\u5909\u63db\u3057\u305f\u7d50\u679c\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u547c\u3070\u308c\u307e\u3059\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u3060\u3051\u5b9f\u884c\u3059\u308b\u306b\u306f <code>-c</code> \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 -c main.cc\n$ g++ -std=c++11 -c util.cc\n</code></pre> <p>\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 <code>main.cc</code> \u304b\u3089 <code>main.o</code>\u3001 <code>util.cc</code> \u304b\u3089 <code>util.o</code> \u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\u3002</p> <p>\u30b3\u30f3\u30d1\u30a4\u30eb\u3060\u3051\u3067\u306f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306f\u751f\u6210\u3055\u308c\u307e\u305b\u3093\u3002</p>"},{"location":"ch11-01-build/#_4","title":"\u30ea\u30f3\u30af","text":"<p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u307e\u3068\u3081\u3066\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u30ea\u30f3\u30af\u3068\u3044\u3044\u307e\u3059\u3002 \u30ea\u30f3\u30af\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30ea\u30f3\u30ab\u3068\u3044\u3044\u307e\u3059\u3002</p> <p><code>main.o</code> \u3068 <code>util.o</code> \u3092\u30ea\u30f3\u30af\u3057\u3066\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 main.o util.o\n</code></pre> <p>\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u70b9\u3067\u306f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u30921\u3064\u305a\u3064\u51e6\u7406\u3059\u308b\u305f\u3081\u3001 \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u95a2\u6570\u3084\u5909\u6570\u306b\u5bfe\u3057\u3066\u306f\u672a\u5b9a\u7fa9\u3067\u3042\u308b\u3068\u3044\u3046\u60c5\u5831\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002 \u30ea\u30f3\u30af\u3067\u306f\u3053\u3046\u3057\u305f\u672a\u5b9a\u7fa9\u306e\u95a2\u6570\u3084\u5909\u6570\u306e\u5b9a\u7fa9\u3092\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u304b\u3089\u63a2\u3057\u3066\u5bfe\u5fdc\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\u3002</p> <p>\u305f\u3068\u3048\u3070\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u95a2\u6570 <code>Sum</code> \u306f <code>main.cc</code> \u3067\u306f\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u5ba3\u8a00\u3060\u3051\u3067\u5b9a\u7fa9\u304c\u306a\u3044\u305f\u3081\u3001 <code>main.o</code> \u306b\u306f <code>Sum</code> \u304c\u672a\u5b9a\u7fa9\u3067\u3042\u308b\u3068\u3044\u3046\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002</p> main.cc <pre><code>int Sum(int a, int b);\n\nint main() {\nSum(1, 2);\nreturn 0;\n}\n</code></pre> util.cc <pre><code>int Sum(int a, int b) {\nreturn a + b;\n}\n</code></pre> <p><code>Sum</code> \u306f <code>util.cc</code> \u3067\u5b9a\u7fa9\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u305f\u3081\u3001 <code>main.o</code> \u304b\u3089\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u306b\u306f <code>util.o</code> \u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002 \u6b21\u306e\u3088\u3046\u306b <code>main.o</code> \u3060\u3051\u3067\u30ea\u30f3\u30af\u3092\u884c\u3046\u3068 <code>main.o</code> \u3067\u672a\u5b9a\u7fa9\u306e <code>Sum</code> \u3092\u5b9a\u7fa9\u3068\u5bfe\u5fdc\u4ed8\u3051\u3067\u304d\u305a\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 main.o\nmain.o: \u95a2\u6570 `main' \u5185:\nmain.cc:(.text+0xf): `Sum(int, int)' \u306b\u5bfe\u3059\u308b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u53c2\u7167\u3067\u3059\ncollect2: error: ld returned 1 exit status\n</code></pre>"},{"location":"ch11-02-static-libraries-and-static-linking/","title":"\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u9759\u7684\u30ea\u30f3\u30af","text":"<p>\u8aac\u660e\u306b\u4f7f\u7528\u3059\u308b\u74b0\u5883</p> <p>Windows \u306e MSYS2 \u74b0\u5883\u306f\u69cb\u6210\u304c\u8907\u96d1\u306a\u305f\u3081\u3001\u8aac\u660e\u3067\u306f Linux \u74b0\u5883\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u8907\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u30921\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u307e\u3068\u3081\u3001 \u30ea\u30f3\u30af\u6642\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u4ee3\u308f\u308a\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8907\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3044\u3044\u3001 \u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30f3\u30af\u3059\u308b\u3053\u3068\u3092\u9759\u7684\u30ea\u30f3\u30af\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>int Add(int a, int b);\nint Sub(int a, int b);\n\nint main() {\nAdd(1, 2);\nSub(3, 4);\nreturn 0;\n}\n</code></pre> add.cc <pre><code>int Add(int a, int b) {\nreturn a + b;\n}\n</code></pre> sub.cc <pre><code>int Sub(int a, int b) {\nreturn a - b;\n}\n</code></pre> <p><code>add.cc</code> \u3068 <code>sub.cc</code> \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3055\u308c\u308b 2\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb <code>add.o</code> \u3068 <code>sub.o</code> \u304b\u3089 \u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea <code>libhoge.a</code> \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <pre><code>$ ar rc libhoge.a add.o sub.o\n</code></pre> <p><code>ar</code> \u306f\u30a2\u30fc\u30ab\u30a4\u30d6\u3092\u64cd\u4f5c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002 <code>rc</code> \u3067\u30a2\u30fc\u30ab\u30a4\u30d6\u3092\u4f5c\u6210\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3044\u3046\u6307\u5b9a\u3092\u3057\u307e\u3059\u3002</p> <p>\u4f5c\u6210\u3057\u305f\u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u5185\u5bb9\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <pre><code>$ ar t libhoge.a\nadd.o\nsub.o\n</code></pre> <p><code>libhoge.a</code> \u3092\u9759\u7684\u30ea\u30f3\u30af\u3059\u308b\u306b\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 main.o libhoge.a\n</code></pre>"},{"location":"ch11-03-dynamic-libraries-and-dynamic-linking/","title":"\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u52d5\u7684\u30ea\u30f3\u30af","text":"<p>\u8aac\u660e\u306b\u4f7f\u7528\u3059\u308b\u74b0\u5883</p> <p>Windows \u306e MSYS2 \u74b0\u5883\u306f\u69cb\u6210\u304c\u8907\u96d1\u306a\u305f\u3081\u3001\u8aac\u660e\u3067\u306f Linux \u74b0\u5883\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u51e6\u7406\u306e\u4e00\u90e8\u3092\u5206\u5272\u3057\u3066\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u3066\u304a\u304d\u3001\u5b9f\u884c\u6642\u306b\u7d50\u5408\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306f\u30d3\u30eb\u30c9\u6642\u306b\u4f9d\u5b58\u95a2\u4fc2\u306e\u8a2d\u5b9a\u3060\u3051\u3092\u884c\u3044\u3001\u5b9f\u884c\u6642\u306b\u89e3\u6c7a\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u3092\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3044\u3044\u3001 \u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30f3\u30af\u3057\u3066\u4f9d\u5b58\u95a2\u4fc2\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u52d5\u7684\u30ea\u30f3\u30af\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>int Add(int a, int b);\nint Sub(int a, int b);\n\nint main() {\nAdd(1, 2);\nSub(3, 4);\nreturn 0;\n}\n</code></pre> add.cc <pre><code>int Add(int a, int b) {\nreturn a + b;\n}\n</code></pre> sub.cc <pre><code>int Sub(int a, int b) {\nreturn a - b;\n}\n</code></pre> <p><code>add.cc</code> \u3068 <code>sub.cc</code> \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3055\u308c\u308b 2\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb <code>add.o</code> \u3068 <code>sub.o</code> \u304b\u3089 \u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea <code>libhoge.so</code> \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 -shared -o libhoge.so add.o sub.o\n</code></pre> <p><code>-shared</code> \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u751f\u6210\u304c\u884c\u308f\u308c\u307e\u3059\u3002 \u751f\u6210\u3059\u308b\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f <code>-o</code> \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <p><code>libhoge.so</code> \u3092\u52d5\u7684\u30ea\u30f3\u30af\u3059\u308b\u306b\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 main.o libhoge.so\n</code></pre> <p>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5b50\u4f9d\u5b58\u95a2\u4fc2\u306f <code>ldd</code> \u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <pre><code>$ ldd a.out\n        linux-vdso.so.1 =&gt;  (0x00007ffeacf68000)\nlibhoge.so =&gt; ./libhoge.so (0x00007f86f4381000)\nlibc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f86f3fb7000)\n/lib64/ld-linux-x86-64.so.2 (0x00007f86f4583000)\n</code></pre> <p><code>libhoge.so =&gt; not found</code> \u3068\u51fa\u529b\u3055\u308c\u308b\u5834\u5408\u306f <code>export LD_LIBRARY_PATH=.</code> \u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ ldd a.out\n        linux-vdso.so.1 =&gt;  (0x00007ffc49540000)\nlibhoge.so =&gt; not found\n        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007feb00b3e000)\n/lib64/ld-linux-x86-64.so.2 (0x00007feb00f08000)\n$ export LD_LIBRARY_PATH=.\n$ ldd a.out\n        linux-vdso.so.1 =&gt;  (0x00007ffeacf68000)\nlibhoge.so =&gt; ./libhoge.so (0x00007f86f4381000)\nlibc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f86f3fb7000)\n/lib64/ld-linux-x86-64.so.2 (0x00007f86f4583000)\n</code></pre> <p>\u4f9d\u5b58\u95a2\u4fc2\u306f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3067\u306a\u304f\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3082\u5b58\u5728\u3057\u307e\u3059\u3002</p> <pre><code>$ ldd /lib/x86_64-linux-gnu/libc.so.6\n        /lib64/ld-linux-x86-64.so.2 (0x00007f53f0153000)\nlinux-vdso.so.1 =&gt;  (0x00007fff235c4000)\n</code></pre> <p>\u3053\u306e\u3088\u3046\u306b\u4f9d\u5b58\u95a2\u4fc2\u306f\u5b50\u4f9d\u5b58\u3060\u3051\u3067\u306f\u5b8c\u7d50\u305b\u305a\u3001\u9023\u9396\u3057\u3066\u767a\u751f\u3057\u307e\u3059\u3002</p> <p>\u5b50\u4f9d\u5b58\u304c\u306a\u3044\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</p> <pre><code>$ ldd libhoge.so\n        statically linked\n</code></pre> -l \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af\u6307\u5b9a <p>\u30e9\u30a4\u30d6\u30e9\u30ea\u30d1\u30b9\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f <code>-l</code> \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u79f0\u3092\u7528\u3044\u3066\u30ea\u30f3\u30af\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u30e9\u30a4\u30d6\u30e9\u30ea\u30d1\u30b9\u306f\u51e6\u7406\u7cfb\u3067\u5fc5\u8981\u306a\u30d1\u30b9\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5165\u3063\u3066\u304a\u308a\u3001 <code>-L</code> \u3067\u30e6\u30fc\u30b6\u6307\u5b9a\u30d1\u30b9\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 \u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u79f0\u306f\u63a5\u982d\u8f9e <code>lib</code> \u3068\u62e1\u5f35\u5b50\u3092\u3068\u3063\u305f\u3082\u306e\u3067 <code>libhoge.so</code> \u3084 <code>libhoge.a</code> \u306a\u3089 <code>hoge</code> \u3068\u306a\u308a\u307e\u3059\u3002</p> <p><code>-l</code> \u3067\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b <code>libhoge.so</code> \u3092\u52d5\u7684\u30ea\u30f3\u30af\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 main.o -lhoge -L.\n</code></pre> <p>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea <code>libhoge.so</code> \u304c\u306a\u3044\u5834\u5408\u306b\u306f\u3001 \u540c\u3058\u30b3\u30de\u30f3\u30c9\u3067\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea <code>libhoge.a</code> \u306e\u9759\u7684\u30ea\u30f3\u30af\u304c\u884c\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"ch11-04-dynamic-loading-and-name-mangling/","title":"\u52d5\u7684\u30ed\u30fc\u30c9\u3068\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0","text":"<p>\u8aac\u660e\u306b\u4f7f\u7528\u3059\u308b\u74b0\u5883</p> <p>Windows \u306e MSYS2 \u74b0\u5883\u306f\u69cb\u6210\u304c\u8907\u96d1\u306a\u305f\u3081\u3001\u8aac\u660e\u3067\u306f Linux \u74b0\u5883\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u52d5\u7684\u30ea\u30f3\u30af\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001 \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u4e2d\u306b\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3093\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u4e2d\u306b\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u3092\u52d5\u7684\u30ed\u30fc\u30c9\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>\u52d5\u7684\u30ed\u30fc\u30c9\u306f C++ \u306e\u6a19\u6e96\u6a5f\u80fd\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u51e6\u7406\u7cfb\u56fa\u6709\u306e\u51e6\u7406\u304c\u5fc5\u8981\u3067\u3059\u3002 Linux \u74b0\u5883\u3067\u4f7f\u7528\u3059\u308b API \u306e\u8a73\u7d30\u306f Man page of DLOPEN - JM Project \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u307e\u305f\u3001\u3053\u308c\u3089\u306e API \u3067\u4f7f\u7528\u3055\u308c\u308b void \u30dd\u30a4\u30f3\u30bf\u306b\u3064\u3044\u3066\u306f void \u30dd\u30a4\u30f3\u30bf \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include &lt;dlfcn.h&gt;\n\nint main() {\nvoid* handle = dlopen(\"libhoge.so\", RTLD_NOW);\nif (handle == NULL) {\nconst char* const error_message = dlerror();\nstd::cerr &lt;&lt; error_message &lt;&lt; std::endl;\nreturn 1;\n}\n\nvoid* const symbol_add = dlsym(handle, \"_Z3Addii\");\n{\nconst char* const error_message = dlerror();\nif (error_message != NULL) {\nstd::cerr &lt;&lt; error_message &lt;&lt; std::endl;\ndlclose(handle);\nreturn 1;\n}\n}\n\nvoid* const symbol_sub = dlsym(handle, \"_Z3Subii\");\n{\nconst char* const error_message = dlerror();\nif (error_message != NULL) {\nstd::cerr &lt;&lt; error_message &lt;&lt; std::endl;\ndlclose(handle);\nreturn 1;\n}\n}\n\nauto Add = reinterpret_cast&lt;int(*)(int, int)&gt;(symbol_add);\nauto Sub = reinterpret_cast&lt;int(*)(int, int)&gt;(symbol_sub);\n\nstd::cout &lt;&lt; Add(1, 2) &lt;&lt; std::endl;\nstd::cout &lt;&lt; Sub(3, 4) &lt;&lt; std::endl;\n\ndlclose(handle);\nreturn 0;\n}\n</code></pre> add.cc <pre><code>int Add(int a, int b) {\nreturn a + b;\n}\n</code></pre> sub.cc <pre><code>int Sub(int a, int b) {\nreturn a - b;\n}\n</code></pre>"},{"location":"ch11-04-dynamic-loading-and-name-mangling/#_2","title":"\u52d5\u7684\u30ed\u30fc\u30c9","text":"<p><code>add.cc</code> \u3068 <code>sub.cc</code> \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u751f\u6210\u3055\u308c\u308b 2\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb <code>add.o</code> \u3068 <code>sub.o</code> \u304b\u3089 \u4f5c\u6210\u3057\u305f\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092 <code>libhoge.so</code> \u3068\u3057\u307e\u3059\u3002</p> <p>Linux \u74b0\u5883\u3067\u52d5\u7684\u30ed\u30fc\u30c9\u3092\u884c\u3046\u305f\u3081\u306b\u306f OS \u304c\u63d0\u4f9b\u3059\u308b <code>libdl.so</code> \u3092\u52d5\u7684\u30ea\u30f3\u30af\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 <code>libdl.so</code> \u3092\u52d5\u7684\u30ea\u30f3\u30af\u3057\u3066\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u30d3\u30eb\u30c9\u3059\u308b\u306b\u306f <code>-ldl</code> \u3092\u3064\u3051\u307e\u3059\u3002</p> <pre><code>g++ -std=c++11 main.o -ldl\n</code></pre> <p>\u52d5\u7684\u30ed\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u884c\u3044\u307e\u3059\u3002</p> <ol> <li>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u304f</li> <li>\u95a2\u6570\u3084\u5909\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97</li> <li>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u9589\u3058\u308b</li> </ol>"},{"location":"ch11-04-dynamic-loading-and-name-mangling/#_3","title":"\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u304f","text":"<p>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u958b\u304f\u306b\u306f <code>dlopen()</code> \u3092\u4f7f\u3044\u307e\u3059\u3002 \u52d5\u7684\u30ed\u30fc\u30c9\u306b\u95a2\u3059\u308b\u51e6\u7406\u3092\u4f7f\u3046\u306b\u306f <code>&lt;dlfcn.h&gt;</code> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\n#include &lt;dlfcn.h&gt;\n\n// \u7b2c1\u5f15\u6570\u306b\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b\nvoid* handle = dlopen(\"libhoge.so\", RTLD_NOW);\nif (handle == NULL) {\nconst char* const error_message = dlerror();\nstd::cerr &lt;&lt; error_message &lt;&lt; std::endl;\nreturn 1;\n}\n</code></pre> <p><code>dlopen()</code> \u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f <code>NULL</code> \u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002 <code>dlerror()</code> \u3067\u306f\u6700\u5f8c\u306b\u4f7f\u7528\u3055\u308c\u305f\u52d5\u7684\u30ed\u30fc\u30c9\u306e API \u3067\u30a8\u30e9\u30fc\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002</p> <p>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u63a2\u3057\u65b9\u306f\u52d5\u7684\u30ea\u30f3\u30af\u3057\u305f\u5834\u5408\u3068\u540c\u69d8\u3067\u3059\u3002 \u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u308b\u5834\u5408\u306f <code>export LD_LIBRARY_PATH=.</code> \u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ ./a.out\nlibhoge.so: cannot open shared object file: No such file or directory\n</code></pre> <p><code>dlopen()</code> \u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306f\u30cf\u30f3\u30c9\u30eb\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u30cf\u30f3\u30c9\u30eb\u3092\u7528\u3044\u3066\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u64cd\u4f5c\u3057\u307e\u3059\u3002</p>"},{"location":"ch11-04-dynamic-loading-and-name-mangling/#_4","title":"\u95a2\u6570\u3084\u5909\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97","text":"<p><code>dlopen()</code> \u3067\u53d6\u5f97\u3057\u305f\u30cf\u30f3\u30c9\u30eb\u304b\u3089 \u95a2\u6570\u3084\u5909\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f <code>dlsym()</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p><code>dlsym()</code> \u3067\u306f\u7b2c1\u5f15\u6570\u306b\u30cf\u30f3\u30c9\u30eb\u3001\u7b2c2\u5f15\u6570\u306b\u30b7\u30f3\u30dc\u30eb\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u30b7\u30f3\u30dc\u30eb\u540d\u306f <code>nm</code> \u30b3\u30de\u30f3\u30c9\u3067 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3084\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6307\u5b9a\u3057\u3066\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>$ nm add.o\n0000000000000000 T _Z3Addii\n$ nm sub.o\n0000000000000000 T _Z3Subii\n$ nm libhoge.so\n0000000000200e88 d _DYNAMIC\n0000000000201000 d _GLOBAL_OFFSET_TABLE_\n                 w _ITM_deregisterTMCloneTable\n                 w _ITM_registerTMCloneTable\n                 w _Jv_RegisterClasses\n0000000000000620 T _Z3Addii\n0000000000000634 T _Z3Subii\n00000000000006f8 r __FRAME_END__\n0000000000000654 r __GNU_EH_FRAME_HDR\n0000000000200e80 d __JCR_END__\n0000000000200e80 d __JCR_LIST__\n0000000000201020 d __TMC_END__\n0000000000201020 B __bss_start\n                 w __cxa_finalize\n00000000000005b0 t __do_global_dtors_aux\n0000000000200e78 t __do_global_dtors_aux_fini_array_entry\n0000000000201018 d __dso_handle\n0000000000200e70 t __frame_dummy_init_array_entry\n                 w __gmon_start__\n0000000000201020 D _edata\n0000000000201028 B _end\n0000000000000648 T _fini\n00000000000004e0 T _init\n0000000000201020 b completed.7594\n0000000000000520 t deregister_tm_clones\n00000000000005f0 t frame_dummy\n0000000000000560 t register_tm_clones\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f <code>int Add(int a, int b)</code> \u306f <code>_Z3Addii</code>\u3001 <code>int Sub(int a, int b)</code> \u306f <code>_Z3Subii</code> \u3068\u3044\u3046\u30b7\u30f3\u30dc\u30eb\u540d\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002</p> <p><code>dlsym()</code> \u3067 <code>int Add(int a, int b)</code> \u306e\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>// \u7b2c1\u5f15\u6570\u306b\u30cf\u30f3\u30c9\u30eb\u3001\u7b2c2\u5f15\u6570\u306b\u30b7\u30f3\u30dc\u30eb\u540d\u3092\u6307\u5b9a\nvoid* const symbol_add = dlsym(handle, \"_Z3Addii\");\n{\nconst char* const error_message = dlerror();\nif (error_message != NULL) {\nstd::cerr &lt;&lt; error_message &lt;&lt; std::endl;\ndlclose(handle);\nreturn 1;\n}\n}\n</code></pre> <p><code>dlsym()</code> \u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306b\u306f\u305d\u306e\u30b7\u30f3\u30dc\u30eb\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002 \u30b7\u30f3\u30dc\u30eb\u304c\u95a2\u6570\u306a\u3089\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3068\u306a\u308a\u307e\u3059\u3002</p> <p><code>dlsym()</code> \u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f <code>NULL</code> \u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u304c\u3001 \u6b63\u5e38\u306b\u7d42\u4e86\u3057\u305f\u5834\u5408\u306e\u7d50\u679c\u304c <code>NULL</code> \u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308b\u305f\u3081\u3001\u30a8\u30e9\u30fc\u306e\u6709\u7121\u306f\u76f4\u5f8c\u306e <code>dlerror()</code> \u306e\u7d50\u679c\u3067\u5224\u65ad\u3057\u307e\u3059\u3002 <code>dlerror()</code> \u306f\u6700\u5f8c\u306b\u4f7f\u7528\u3055\u308c\u305f\u52d5\u7684\u30ed\u30fc\u30c9\u306e API \u3067\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070 <code>NULL</code> \u3092\u8fd4\u5374\u3057\u307e\u3059\u3002</p> <p><code>dlsym()</code> \u306e\u623b\u308a\u5024\u306f <code>void*</code> \u3067\u305d\u306e\u307e\u307e\u4f7f\u7528\u3067\u304d\u306a\u3044\u305f\u3081\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002 \u95a2\u6570\u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>auto Add = reinterpret_cast&lt;int(*)(int, int)&gt;(symbol_add);\nstd::cout &lt;&lt; Add(1, 2) &lt;&lt; std::endl;\n</code></pre>"},{"location":"ch11-04-dynamic-loading-and-name-mangling/#_5","title":"\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u9589\u3058\u308b","text":"<p>\u958b\u3044\u305f\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4f7f\u7528\u304c\u7d42\u308f\u3063\u305f\u3089\u9589\u3058\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u9589\u3058\u308b\u306b\u306f <code>dlclose()</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>dlclose(handle);\n</code></pre>"},{"location":"ch11-04-dynamic-loading-and-name-mangling/#_6","title":"\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0","text":"<p>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u5909\u6570\u3084\u95a2\u6570\u3092\u540d\u524d\u3060\u3051\u3067\u8b58\u5225\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>C \u8a00\u8a9e\u306f\u30ea\u30f3\u30b1\u30fc\u30b8\u6307\u5b9a\u304c\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u3067\u306f\u306a\u3044\u5909\u6570\u3084\u95a2\u6570\u3092\u540d\u524d\u3060\u3051\u3067\u8b58\u5225\u3057\u3066\u3044\u307e\u3059\u304c\u3001 C++ \u306f C \u8a00\u8a9e\u306b\u306f\u306a\u3044\u4ee5\u4e0b\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066\u540d\u524d\u3060\u3051\u3067\u8b58\u5225\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> <ul> <li>\u30af\u30e9\u30b9</li> <li>\u540d\u524d\u7a7a\u9593</li> <li>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8</li> <li>\u95a2\u6570\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9</li> </ul> <p>\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001 \u8b58\u5225\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u3059\u3079\u3066\u540d\u524d\u306b\u542b\u3081\u308b\u306a\u3069\u3057\u3066\u751f\u6210\u3057\u305f\u4e00\u610f\u306a\u540d\u524d\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u3092\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u3068\u3044\u3044\u307e\u3059\u3002</p> <p><code>int Add(int a, int b)</code> \u304c <code>_Z3Addii</code> \u3068\u3044\u3063\u305f\u30b7\u30f3\u30dc\u30eb\u540d\u306b\u306a\u308b\u306e\u306f\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u306e\u7d50\u679c\u3067\u3059\u3002</p> <p>\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u3092\u884c\u3046\u524d\u306e\u60c5\u5831\u306f <code>c++filt</code> \u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>$ nm add.o\n0000000000000000 T _Z3Addii\n$ nm add.o | c++filt\n0000000000000000 T Add(int, int)\n</code></pre> <p>\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u306e\u65b9\u6cd5\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u4f9d\u5b58\u3067\u3059\u3002 \u540c\u3058\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3042\u3063\u3066\u3082\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u7570\u306a\u308c\u3070\u3001\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u306e\u7d50\u679c\u304c\u4e00\u81f4\u3059\u308b\u4fdd\u8a3c\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u5177\u4f53\u4f8b\u306f \u540d\u524d\u4fee\u98fe - \u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3088\u308b\u540d\u524d\u4fee\u98fe\u306e\u76f8\u9055 - Wikipedia \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u3092\u7121\u52b9\u5316\u3059\u308b\u3053\u3068\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u4f9d\u5b58\u305b\u305a\u306b\u30b7\u30f3\u30dc\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u3092\u7121\u52b9\u5316\u3059\u308b\u306b\u306f\u5ba3\u8a00\u3092 <code>extern \"C\"</code> \u306e\u30d6\u30ed\u30c3\u30af\u306b\u542b\u3081\u307e\u3059\u3002 \u3053\u308c\u306f C \u8a00\u8a9e\u3067\u30ea\u30f3\u30af\u53ef\u80fd\u306b\u3059\u308b\u3068\u3044\u3046\u6307\u5b9a\u3067\u3001 \u540d\u524d\u306e\u91cd\u8907\u3092\u7981\u6b62\u3059\u308b\u4ee3\u308f\u308a\u306b\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u304c\u884c\u308f\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p> <pre><code>extern \"C\" {\n\nint Add(int a, int b) {\nreturn a + b;\n}\n\n}\n</code></pre> <p><code>extern \"C\"</code> \u306e\u30d6\u30ed\u30c3\u30af\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5834\u5408\u306b\u306f\u3001\u95a2\u6570\u540d\u304c\u305d\u306e\u307e\u307e\u30b7\u30f3\u30dc\u30eb\u540d\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <pre><code>$ nm add.o\n0000000000000000 T Add\n</code></pre> <p><code>dlsym()</code> \u3082\u6b21\u306e\u3088\u3046\u306b\u95a2\u6570\u540d\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>void* const symbol_add = dlsym(handle, \"Add\");\n</code></pre>"},{"location":"ch11-05-library-updating-and-compatibility/","title":"\u30e9\u30a4\u30d6\u30e9\u30ea\u66f4\u65b0\u3068\u4e92\u63db\u6027","text":"<p>\u8aac\u660e\u306b\u4f7f\u7528\u3059\u308b\u74b0\u5883</p> <p>Windows \u306e MSYS2 \u74b0\u5883\u306f\u69cb\u6210\u304c\u8907\u96d1\u306a\u305f\u3081\u3001\u8aac\u660e\u3067\u306f Linux \u74b0\u5883\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u66f4\u65b0\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001 \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5fc5\u8981\u306a\u4f5c\u696d\u306f\u4ee5\u4e0b\u306e\u9805\u76ee\u3067\u6c7a\u307e\u308a\u307e\u3059\u3002</p> <ul> <li>\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3069\u3061\u3089\u3067\u3042\u308b\u304b</li> <li>\u66f4\u65b0\u524d\u5f8c\u3067\u306e API \u4e92\u63db\u6027</li> <li>\u66f4\u65b0\u524d\u5f8c\u3067\u306e ABI \u4e92\u63db\u6027</li> </ul> <p></p>"},{"location":"ch11-05-library-updating-and-compatibility/#api","title":"API \u4e92\u63db\u6027","text":"<p>API \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u7565\u3067\u3001 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30ec\u30d9\u30eb\u3067\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u3053\u3068\u3092\u3044\u3044\u307e\u3059\u3002 \u66f4\u65b0\u524d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5b58\u5728\u3059\u308b API \u3092 \u66f4\u65b0\u5f8c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u305d\u306e\u307e\u307e\u4f7f\u7528\u3067\u304d\u308b\u5834\u5408\u306b API \u4e92\u63db\u6027\u304c\u3042\u308b\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>API \u4e92\u63db\u6027\u304c\u3042\u308c\u3070 \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30fc\u30c9\u4fee\u6b63\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>API \u306e\u5909\u5316\u3092\u4f34\u308f\u306a\u3044\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5909\u66f4\u306f API \u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30b3\u30e1\u30f3\u30c8\u306e\u5909\u66f4 (\u8aa4\u5b57\u4fee\u6b63\u306a\u3069)</li> <li>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5b9f\u88c5\u306e\u5909\u66f4 (\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3084\u30d0\u30b0\u4fee\u6b63\u306a\u3069)</li> </ul> <p>API \u306e\u5909\u5316\u3092\u4f34\u3046\u5909\u66f4\u306f\u3001 \u6b21\u306e\u3088\u3046\u306b API \u4e92\u63db\u6027\u306e\u3042\u308b\u3082\u306e\u3068\u306a\u3044\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>API \u4e92\u63db\u6027\u306e\u3042\u308b\u5909\u66f4<ul> <li>API \u306e\u65b0\u898f\u8ffd\u52a0</li> <li>\u66f4\u65b0\u524d\u306e\u4ed5\u69d8\u3092\u7dad\u6301\u3057\u3066 API \u3092\u5909\u66f4 (\u62e1\u5f35)</li> </ul> </li> <li>API \u4e92\u63db\u6027\u306e\u306a\u3044\u5909\u66f4<ul> <li>API \u306e\u524a\u9664</li> <li>\u66f4\u65b0\u524d\u306e\u4ed5\u69d8\u3092\u7dad\u6301\u305b\u305a API \u3092\u5909\u66f4</li> </ul> </li> </ul>"},{"location":"ch11-05-library-updating-and-compatibility/#_2","title":"\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea","text":"<p>\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea</p> <p></p> <p>\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u53d6\u308a\u8fbc\u307e\u308c\u308b\u305f\u3081\u3001 \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u518d\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea</p> <p></p> <p>\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u53d6\u308a\u8fbc\u307e\u308c\u306a\u3044\u305f\u3081\u3001 \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u518d\u30d3\u30eb\u30c9\u306f\u4e0d\u8981\u3067\u3059\u3002 \u305f\u3060\u3057\u3001\u5f8c\u8ff0\u306e ABI \u4e92\u63db\u6027\u304c\u306a\u3044\u5834\u5408\u306b\u306f\u518d\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ch11-05-library-updating-and-compatibility/#abi","title":"ABI \u4e92\u63db\u6027","text":"<p>ABI \u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d0\u30a4\u30ca\u30ea\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u7565\u3067\u3001 \u30d0\u30a4\u30ca\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u3053\u3068\u3092\u3044\u3044\u307e\u3059\u3002 \u66f4\u65b0\u524d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5b58\u5728\u3059\u308b ABI \u3092 \u66f4\u65b0\u5f8c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u305d\u306e\u307e\u307e\u4f7f\u7528\u3067\u304d\u308b\u5834\u5408\u306b ABI \u4e92\u63db\u6027\u304c\u3042\u308b\u3068\u3044\u3044\u307e\u3059\u3002</p> <p>ABI \u4e92\u63db\u6027\u304c\u3042\u308c\u3070 \u5b9f\u884c\u74b0\u5883\u306e\u52d5\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5909\u66f4\u3059\u308b\u3060\u3051\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002</p> <p>\u901a\u5e38\u306f API \u306e\u5909\u66f4\u304c\u306a\u3051\u308c\u3070 ABI \u4e92\u63db\u6027\u304c\u3042\u308a\u3001 API \u4e92\u63db\u6027\u304c\u306a\u3051\u308c\u3070 ABI \u4e92\u63db\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> ABI \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u4f9d\u5b58 <p>ABI \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u4f9d\u5b58\u3067\u3059\u3002</p> <p>\u540c\u3058\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3042\u3063\u3066\u3082\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u7570\u306a\u308c\u3070 ABI \u4e92\u63db\u6027\u306f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u305f\u3068\u3048\u3070 GCC 4.x \u3068 GCC 5.x \u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e ABI \u306f\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3002 GCC 5.x \u3067\u306f <code>_GLIBCXX_USE_CXX11_ABI</code> \u30de\u30af\u30ed\u3092 <code>0</code> \u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067 GCC 4.x \u3068 ABI \u4e92\u63db\u6027\u304c\u3042\u308b\u3088\u3046\u306b\u30d3\u30eb\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306f Dual ABI - The GNU C++ Library \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u4e00\u65b9\u3067\u3001\u7570\u306a\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u9593\u3067\u3082 ABI \u4e92\u63db\u6027\u304c\u3042\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002 \u305f\u3068\u3048\u3070 Clang \u3067\u30d3\u30eb\u30c9\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092 GCC \u3067\u4f7f\u7528\u3067\u304d\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>API \u4e92\u63db\u6027\u306e\u3042\u308b API \u306e\u5909\u66f4\u306f\u3001 \u6b21\u306e\u3088\u3046\u306b ABI \u4e92\u63db\u6027\u306e\u3042\u308b\u3082\u306e\u3068\u306a\u3044\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>ABI \u4e92\u63db\u6027\u306e\u3042\u308b\u5909\u66f4<ul> <li>\u30af\u30e9\u30b9\u306b\u5c5e\u3055\u306a\u3044\u95a2\u6570\u3084\u5909\u6570\u306e\u8ffd\u52a0</li> </ul> </li> <li>ABI \u4e92\u63db\u6027\u306e\u306a\u3044\u5909\u66f4<ul> <li>\u30af\u30e9\u30b9\u306b\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u8ffd\u52a0 (\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b5\u30a4\u30ba\u5909\u66f4)</li> <li>\u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306e\u5ba3\u8a00\u9806\u5e8f\u3092\u5909\u66f4 (\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30e2\u30ea\u914d\u7f6e\u5909\u66f4)</li> <li>\u4eee\u60f3\u95a2\u6570\u306e\u8ffd\u52a0 (vtable \u306e\u30b5\u30a4\u30ba\u5909\u66f4)</li> </ul> </li> </ul> <p>\u8a73\u7d30\u306f Policies/Binary Compatibility Issues With C++ - KDE Community Wiki \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch12-01-type-for-bytes/","title":"\u30d0\u30a4\u30c8\u3092\u8868\u3059\u578b","text":"<p>C++ \u3067\u306f\u4ee5\u4e0b\u306e\u578b\u306e\u30b5\u30a4\u30ba\u304c1\u30d0\u30a4\u30c8\u3068\u898f\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002 C \u3067\u3082\u540c\u69d8\u3067\u3059\u3002</p> <ul> <li><code>char</code></li> <li><code>signed char</code></li> <li><code>unsigned char</code></li> </ul> <p>\u30d3\u30c3\u30c8\u3092\u53d6\u308a\u6271\u3046\u969b\u306b\u306f\u7b26\u53f7\u306a\u3057\u3067\u3042\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u305f\u3081\u3001 \u30d0\u30a4\u30c8\u3092\u8868\u3059\u578b\u3068\u3057\u3066\u306f <code>unsigned char</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> char \u306f signed char \u3068\u306f\u7570\u306a\u308b\u578b <p>\u4ee5\u4e0b\u306e\u578b\u306f\u3059\u3079\u3066\u7570\u306a\u308b\u578b\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002</p> <ul> <li><code>char</code></li> <li><code>signed char</code></li> <li><code>unsigned char</code></li> </ul> <p>\u7570\u306a\u308b\u578b\u3067\u3042\u308b\u305f\u3081\u3001\u6b21\u306e\u3088\u3046\u306a\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u53ef\u80fd\u3067\u3059\u3002</p> <pre><code>#include &lt;iostream&gt;\n\nvoid Hoge(char c) {\nstd::cout &lt;&lt; \"char: \" &lt;&lt; c &lt;&lt; std::endl;\n}\n\nvoid Hoge(signed char c) {\nstd::cout &lt;&lt; \"signed char: \" &lt;&lt; c &lt;&lt; std::endl;\n}\n\nvoid Hoge(unsigned char c) {\nstd::cout &lt;&lt; \"unsigned char: \" &lt;&lt; c &lt;&lt; std::endl;\n}\n\nint main() {\nHoge('A');                              // char: A\nHoge(static_cast&lt;char&gt;('B'));           // char: B\nHoge(static_cast&lt;signed char&gt;('C'));    // signed char: C\nHoge(static_cast&lt;unsigned char&gt;('D'));  // unsigned char: D\nreturn 0;\n}\n</code></pre> <p><code>char</code> \u306f\u51e6\u7406\u7cfb\u3067\u6700\u3082\u52b9\u7387\u7684\u306b\u51e6\u7406\u3067\u304d\u308b\u6587\u5b57\u8868\u73fe\u306e\u578b\u3067\u3059\u3002 <code>char</code> \u306e\u30d3\u30c3\u30c8\u8868\u73fe\u306f <code>signed char</code> \u307e\u305f\u306f <code>unsigned char</code> \u306e\u3044\u305a\u308c\u304b\u4e00\u65b9\u3068\u4e00\u81f4\u3057\u307e\u3059\u304c\u3001\u3069\u3061\u3089\u3068\u4e00\u81f4\u3059\u308b\u304b\u306f\u51e6\u7406\u7cfb\u4f9d\u5b58\u3067\u3059\u3002</p> C++17 \u3067\u8ffd\u52a0\u3055\u308c\u305f std::byte <p>\u6587\u5b57\u3068\u30d0\u30a4\u30c8\u30c7\u30fc\u30bf\u306e\u7528\u9014\u3092\u660e\u78ba\u306b\u3059\u308b\u305f\u3081\u3001 C++17 \u3067 std::byte \u3068\u3044\u3046\u578b\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002</p> <p>C++17 \u306e\u6a5f\u80fd\u3067\u3042\u308b\u305f\u3081 C++11 \u3067\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002</p>"},{"location":"ch12-01-type-for-bytes/#18","title":"1\u30d0\u30a4\u30c8\u306f8\u30d3\u30c3\u30c8\u3068\u306f\u9650\u3089\u306a\u3044","text":"<p>2008\u5e74\u306b\u767a\u884c\u3055\u308c\u305f IEC 80000-13 \u306b\u3066 \\(1 byte = 8 bits\\) \u3068\u6b63\u5f0f\u306b\u5b9a\u7fa9\u3055\u308c\u307e\u3057\u305f\u3002</p> <p>\u305d\u308c\u4ee5\u524d\u306f \u51e6\u7406\u7cfb\u304c1\u3064\u306e\u30a2\u30c9\u30ec\u30b9\u3067\u6271\u3046\u30d3\u30c3\u30c8\u6570 (\u30e1\u30e2\u30ea\u64cd\u4f5c\u306e\u6700\u5c0f\u5358\u4f4d) \u3092 1\u30d0\u30a4\u30c8\u3068\u5b9a\u3081\u308b\u3053\u3068\u304c\u591a\u304f\u3001 \\(1 byte = 8 bits\\) \u3068\u306f\u9650\u3089\u305a \\(1 byte = 7 bits\\) \u3084 \\(1 byte = 9 bits\\) \u3068\u306a\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\u3002</p> <p>C \u3084 C++ \u3067\u306f\u4ee5\u4e0b\u306e\u5236\u7d04\u306b\u3088\u3063\u3066 \\(1 byte = 8 bits\\) \u4ee5\u4e0a\u3068\u898f\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002</p> <ul> <li><code>char</code> \u578b\u306e\u30b5\u30a4\u30ba\u30921\u30d0\u30a4\u30c8\u3068\u3059\u308b</li> <li><code>char</code> \u578b\u306e\u30d3\u30c3\u30c8\u6570 CHAR_BIT \u306f8\u30d3\u30c3\u30c8\u4ee5\u4e0a\u3068\u3059\u308b</li> </ul> <p>C \u3084 C++ \u3067\u306f \\(1 byte = 7 bits\\) \u306f\u8a31\u5bb9\u3055\u308c\u307e\u305b\u3093\u304c\u3001 \\(1 byte = 9 bits\\) \u306f\u8a31\u5bb9\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u5b9f\u969b\u306b\u306f \\(1 byte = 8 bits\\) \u3067\u306f\u306a\u3044\u51e6\u7406\u7cfb\u306f\u975e\u5e38\u306b\u5c11\u306a\u3044\u305f\u3081\u3001 \\(1 byte = 8 bits\\) \u3060\u3051\u3092\u60f3\u5b9a\u3057\u305f\u5b9f\u88c5\u306b\u3059\u308b\u3053\u3068\u3082\u591a\u3044\u3067\u3059\u3002</p> <p>\\(1 byte = 8 bits\\) \u3057\u304b\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u8868\u660e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308c\u3070 \u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;climits&gt;\nstatic_assert(CHAR_BIT == 8, \"Not support 1byte != 8bits\");\n</code></pre>"},{"location":"ch12-02-plain-old-data/","title":"POD","text":"<p>POD (Plain Old Data) \u3068\u306f C \u3068 ABI \u4e92\u63db\u6027\u304c\u4fdd\u8a3c\u3055\u308c\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u3053\u3068\u3067\u3059\u3002</p> <p>\u30c7\u30fc\u30bf\u69cb\u9020\u304c POD \u3067\u3042\u308b\u304b\u306f std::is_pod \u3067\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 <code>std::is_pod</code> \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f <code>&lt;type_traits&gt;</code> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u30c7\u30fc\u30bf\u69cb\u9020\u3092 POD \u306b\u3057\u305f\u3044\u5834\u5408\u306b\u306f <code>static_assert</code> \u3067\u4fdd\u8a3c\u3059\u308b\u3068\u3088\u3044\u3067\u3059\u3002</p> <pre><code>#include &lt;type_traits&gt;\nstruct FundamentalTypes {\nint16_t i;\ndouble d;\n};\nstatic_assert(std::is_pod&lt;FundamentalTypes&gt;::value, \"Should be POD.\");\n</code></pre>"},{"location":"ch12-02-plain-old-data/#_1","title":"\u57fa\u672c\u578b","text":"<p>\u57fa\u672c\u578b\u306f POD \u3067\u3059\u3002</p> <pre><code>enum Direction {\nkLeft,\nkRight,\nkBoth\n};\n\nstatic_assert(std::is_pod&lt;char&gt;::value, \"Should be POD.\");\nstatic_assert(std::is_pod&lt;int32_t&gt;::value, \"Should be POD.\");\nstatic_assert(std::is_pod&lt;double&gt;::value, \"Should be POD.\");\nstatic_assert(std::is_pod&lt;Direction&gt;::value, \"Should be POD.\");\n</code></pre>"},{"location":"ch12-02-plain-old-data/#_2","title":"\u914d\u5217","text":"<p>POD \u306e\u914d\u5217\u306f POD \u3067\u3059\u3002</p> <pre><code>static_assert(std::is_pod&lt;int[2]&gt;::value, \"Should be POD.\");\n</code></pre> <p>POD \u306e <code>std::array</code> \u3082 POD \u3067\u3059\u304c\u3001 POD \u306e <code>std::vector</code> \u306f POD \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>static_assert(std::is_pod&lt;std::array&lt;int, 2&gt;&gt;::value, \"Should be POD.\");\nstatic_assert(std::is_pod&lt;std::vector&lt;int&gt;&gt;::value, \"Should be POD.\");  // failed\n</code></pre>"},{"location":"ch12-02-plain-old-data/#_3","title":"\u53c2\u7167\u578b","text":"<p>\u53c2\u7167\u578b\u306f POD \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>static_assert(std::is_pod&lt;int&amp;&gt;::value, \"Should be POD.\");  // failed\n</code></pre>"},{"location":"ch12-02-plain-old-data/#_4","title":"\u30dd\u30a4\u30f3\u30bf\u578b","text":"<p>\u3042\u3089\u3086\u308b\u30dd\u30a4\u30f3\u30bf\u306f POD \u3067\u3059\u3002 POD \u3067\u306f\u306a\u3044\u578b\u306b\u5bfe\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u3082 POD \u3067\u3059\u3002</p> <pre><code>static_assert(std::is_pod&lt;int*&gt;::value, \"Should be POD.\");\n\n// std::vector&lt;int&gt; \u306f POD \u3067\u306f\u306a\u3044\u304c std::vector&lt;int&gt;* \u306f POD\nstatic_assert(std::is_pod&lt;std::vector&lt;int&gt;*&gt;::value, \"Should be POD.\");\n</code></pre>"},{"location":"ch12-02-plain-old-data/#_5","title":"\u69cb\u9020\u4f53","text":"<p>\u69cb\u9020\u4f53\u306e\u6761\u4ef6\u306f\u8907\u96d1\u306a\u305f\u3081\u3001\u672c\u66f8\u3067\u306f\u7c21\u5358\u306a\u4f8b\u3060\u3051\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002</p> POD \u306e\u8981\u4ef6 <p>\u30c8\u30ea\u30d3\u30a2\u30eb\u304b\u3064\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3042\u308b\u5834\u5408\u306b POD \u3068\u306a\u308a\u307e\u3059\u3002 \u8a73\u7d30\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ul> <li>is_trivial - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9</li> <li>is_standard_layout - cpprefjp C++\u65e5\u672c\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9</li> </ul>"},{"location":"ch12-02-plain-old-data/#pod_1","title":"POD \u306b\u306a\u308b\u69cb\u9020\u4f53\u306e\u4f8b","text":"<p>\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u3059\u3079\u3066\u6e80\u305f\u3059\u69cb\u9020\u4f53\u306f POD \u3067\u3059\u3002</p> <ul> <li>\u7d99\u627f\u3057\u3066\u3044\u306a\u3044</li> <li>\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u305f\u306a\u3044 (\u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u7279\u5225\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u660e\u793a\u3057\u306a\u3044)</li> <li>\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306f POD</li> <li>\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c1\u7a2e\u985e\u306e\u307f (\u6697\u9ed9\u7684\u306a <code>public</code> \u6307\u5b9a\u3082\u542b\u3080)</li> </ul> <pre><code>// \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u6301\u305f\u306a\u3044\nstruct Empty {};\nstatic_assert(std::is_pod&lt;Empty&gt;::value, \"Should be POD.\");\n\n// \u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u304c\u57fa\u672c\u578b\nstruct FundamentalTypes {\nint16_t i;\ndouble d;\n};\nstatic_assert(std::is_pod&lt;FundamentalTypes&gt;::value, \"Should be POD.\");\n</code></pre> <p>POD \u306e\u69cb\u9020\u4f53\u306f\u5165\u308c\u5b50\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>// POD \u306e\u69cb\u9020\u4f53 FundamentalTypes \u3092\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u3082\u3064\nstruct FundamentalTypesAsChild {\nchar c;\nFundamentalTypes f;\n};\nstatic_assert(std::is_pod&lt;FundamentalTypesAsChild&gt;::value, \"Should be POD.\");\n\n// POD \u306e\u69cb\u9020\u4f53 FundamentalTypesAsChild \u3092\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u3082\u3064\nstruct FundamentalTypesAsGrandchild {\nchar c;\nFundamentalTypesAsChild f;\n};\nstatic_assert(std::is_pod&lt;FundamentalTypesAsGrandchild&gt;::value,\n\"Should be POD.\");\n</code></pre>"},{"location":"ch12-02-plain-old-data/#pod_2","title":"POD \u306b\u306a\u3089\u306a\u3044\u69cb\u9020\u4f53\u306e\u4f8b","text":""},{"location":"ch12-02-plain-old-data/#_6","title":"\u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u7279\u5225\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u30e6\u30fc\u30b6\u5b9a\u7fa9","text":"<p>\u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u3082\u3064\u69cb\u9020\u4f53\u306f POD \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>struct UserDefinedDefaultConstructor {\nUserDefinedDefaultConstructor() {}\n};\nstatic_assert(std::is_pod&lt;UserDefinedDefaultConstructor&gt;::value,\n\"Should be POD.\");  // failed\n</code></pre> <p><code>default</code> \u6307\u5b9a\u3067\u3042\u308c\u3070 POD \u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>struct DefaultConstructorAsExplicitDefault {\nDefaultConstructorAsExplicitDefault() = default;\n};\n\nstatic_assert(std::is_pod&lt;DefaultConstructorAsExplicitDefault&gt;::value,\n\"Should be POD.\");\n</code></pre> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4ee5\u5916\u306e \u6697\u9ed9\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u7279\u5225\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u3067\u3059\u3002</p>"},{"location":"ch12-02-plain-old-data/#_7","title":"\u4eee\u60f3\u95a2\u6570","text":"<p>\u4eee\u60f3\u95a2\u6570\u3092\u3082\u3064\u69cb\u9020\u4f53\u306f POD \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>struct VirtualFunction {\nvirtual void Hoge() {}\n};\nstatic_assert(std::is_pod&lt;VirtualFunction&gt;::value, \"Should be POD.\");  // failed\n</code></pre>"},{"location":"ch12-02-plain-old-data/#pod_3","title":"\u975e POD \u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0","text":"<p>POD \u3067\u306f\u306a\u3044\u578b\u306e\u975e <code>static</code> \u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u6301\u3064\u69cb\u9020\u4f53\u306f POD \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>struct NonPodMemberVariable {\nstd::vector&lt;int&gt; v;  // std::vector&lt;int&gt; \u306f POD \u3067\u306f\u306a\u3044\n};\nstatic_assert(std::is_pod&lt;NonPodMemberVariable&gt;::value, \"Should be POD.\");  // failed\n</code></pre>"},{"location":"ch12-02-plain-old-data/#2","title":"\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c2\u7a2e\u985e\u4ee5\u4e0a","text":"<p>\u6697\u9ed9\u7684\u306a\u3082\u306e\u3092\u542b\u3081\u3066\u3001 <code>static</code> \u3067\u306f\u306a\u3044\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c2\u7a2e\u985e\u4ee5\u4e0a\u3042\u308b\u69cb\u9020\u4f53\u306f POD \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <pre><code>struct MultipleAccessSpecifierTypes {\nint public_variable;\n\nprivate:\nint private_variable;\n};\nstatic_assert(std::is_pod&lt;MultipleAccessSpecifierTypes&gt;::value, \"Should be POD.\");  // failed\n</code></pre>"},{"location":"ch12-02-plain-old-data/#_8","title":"\u30af\u30e9\u30b9","text":"<p>C++ \u306b\u304a\u3051\u308b\u69cb\u9020\u4f53\u3068\u30af\u30e9\u30b9\u306e\u9055\u3044\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u3060\u3051\u306a\u306e\u3067\u3001 \u69cb\u9020\u4f53\u3068\u540c\u3058\u6761\u4ef6\u3067\u30af\u30e9\u30b9\u3082 POD \u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>class FundamentalTypes {\npublic:\nint16_t i;\ndouble d;\n};\nstatic_assert(std::is_pod&lt;FundamentalTypes&gt;::value, \"Should be POD.\");\n</code></pre>"},{"location":"ch12-03-plain-old-data-api-compatibility/","title":"POD \u306e API \u4e92\u63db\u6027","text":"<p>C \u3068 C++ \u3067\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u5171\u6709\u3057\u3066\u3001 \u540c\u3058\u578b\u5ba3\u8a00\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f API \u4e92\u63db\u6027\u304c\u5fc5\u8981\u3067\u3059\u3002 POD \u3067\u3042\u308c\u3070 ABI \u4e92\u63db\u6027\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u304c\u3001 API \u4e92\u63db\u6027\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093\u3002</p> <p>POD \u306b\u3059\u308b\u5834\u5408\u306b\u306f API \u4e92\u63db\u6027\u3082\u3042\u308b\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"ch12-03-plain-old-data-api-compatibility/#c-c","title":"C \u306b\u306f\u5b58\u5728\u3057\u306a\u3044 C++ \u306e\u6a5f\u80fd","text":"<p>C \u306b\u5b58\u5728\u3057\u306a\u3044\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068 API \u4e92\u63db\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002 C \u306b\u5b58\u5728\u3057\u306a\u3044\u6a5f\u80fd\u306e\u4e00\u4f8b\u3068\u3057\u3066\u6b21\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30af\u30e9\u30b9</li> <li>\u540d\u524d\u7a7a\u9593</li> <li>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8</li> <li>C++ \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb</li> </ul>"},{"location":"ch12-03-plain-old-data-api-compatibility/#_1","title":"\u30af\u30e9\u30b9","text":"<p>C \u306b\u306f\u30af\u30e9\u30b9\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u69cb\u9020\u4f53\u306f\u3042\u308a\u307e\u3059\u3002 \u305d\u306e\u305f\u3081 POD \u306e\u578b\u306f\u30af\u30e9\u30b9\u3067\u306f\u306a\u304f\u69cb\u9020\u4f53\u306b\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002</p> <p>C \u306e\u69cb\u9020\u4f53\u306f\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u3082\u3064\u4ee5\u5916\u306e\u6a5f\u80fd\u306f\u306a\u304f\u3001\u4ee5\u4e0b\u306e\u6a5f\u80fd\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002</p> <ul> <li>\u30e1\u30f3\u30d0\u95a2\u6570</li> <li>\u7d99\u627f</li> <li>\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50</li> </ul> <p>API \u4e92\u63db\u6027\u3092\u4fdd\u3064\u305f\u3081\u306b\u306f\u3001 \u3053\u308c\u3089\u306e\u6a5f\u80fd\u3092\u4e00\u5207\u4f7f\u7528\u3057\u306a\u3044\u3067\u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3088\u3044\u3067\u3059\u3002</p> <pre><code>struct Sample {\nunsigned char c;\ndouble d;\n};\n</code></pre>"},{"location":"ch12-03-plain-old-data-api-compatibility/#c","title":"C++ \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb","text":"<p>C++ \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306f C \u3067\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u304c\u3001 C \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306f C++ \u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <p>C \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u3001 C++ \u3067\u306f\u5148\u982d\u306b <code>c</code> \u3092\u3064\u3051\u3066\u62e1\u5f35\u5b50\u3092\u9664\u3044\u305f\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u305f\u3068\u3048\u3070 C \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb <code>&lt;stdint.h&gt;</code> \u306b\u5bfe\u3057\u3066 C++ \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb <code>&lt;cstdint&gt;</code> \u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u901a\u5e38 C++ \u3067\u306f C++ \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u306e\u3067\u3059\u304c\u3001 C \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e2\u3064\u306e\u9055\u3044\u306f C++ \u306e\u3082\u306e\u306f <code>std</code> \u540d\u524d\u7a7a\u9593\u306b\u5c5e\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3067\u3059\u3002</p> <p>API \u4e92\u63db\u6027\u3092\u4fdd\u3064\u305f\u3081\u306b\u306f\u3001 C \u306e\u6a19\u6e96\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>#include &lt;stdint.h&gt;\n\nstruct FundamentalTypes {\nint16_t i;\ndouble d;\n};\n</code></pre>"},{"location":"ch12-03-plain-old-data-api-compatibility/#c-c_1","title":"C++ \u306b\u306f\u5b58\u5728\u3057\u306a\u3044 C \u306e\u6a5f\u80fd","text":"<p>C++ \u306f C \u3068\u9ad8\u3044\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u5b8c\u5168\u4e0a\u4f4d\u4e92\u63db\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 C++ \u306b\u5b58\u5728\u3057\u306a\u3044\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068 API \u4e92\u63db\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002 C++11 \u306f C99 \u3068\u3044\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\u306e C \u306e\u6a5f\u80fd\u3092\u6982\u306d\u53d6\u308a\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\u3001 \u3059\u3079\u3066\u306e\u6a5f\u80fd\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3044\u308b\u8a33\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u305f\u3068\u3048\u3070 C99 \u306b\u306f\u8907\u5408\u30ea\u30c6\u30e9\u30eb\u3068\u3044\u3046\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u304c C++ \u3067\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code>int Sum(const int v[], int n) {\nint sum = 0;\nfor (int i = 0; i &lt; n; ++i) {\nsum += v[i];\n}\nreturn sum;\n}\n\n// \u8907\u5408\u30ea\u30c6\u30e9\u30eb\u306b\u3088\u308b\u914d\u5217\u306e\u751f\u6210\nint sum = Sum((int[]){1, 2, 3, 4, 5}, 5);\n</code></pre> <p>\u540c\u69d8\u306e\u51e6\u7406\u3092 C++ \u3067\u884c\u3046\u306b\u306f <code>std::array</code> \u306a\u3069\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>int sum = Sum(std::array&lt;int, 5&gt;({1, 2, 3, 4, 5}).data(), 5);\n</code></pre> <p>\u8a73\u7d30\u306f \u8907\u5408\u30ea\u30c6\u30e9\u30eb - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ch12-03-plain-old-data-api-compatibility/#c-c_2","title":"C \u3068 C++ \u3067\u7570\u306a\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u3059\u308b","text":"<p>\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u53f8\u4ee4 \u3092\u4f7f\u7528\u3057\u3066 C \u3068 C++ \u3067\u7570\u306a\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>C++ \u3067\u306f <code>__cplusplus</code> \u3068\u3044\u3046\u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u304c\u3001 C \u3067\u306f\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#ifdef __cplusplus\n// C++ \u3060\u3051\u3067\u6709\u52b9\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n#else\n// C \u3060\u3051\u3067\u6709\u52b9\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n#endif  // __cplusplus\n</code></pre> <p>\u3053\u308c\u3092\u5229\u7528\u3059\u308c\u3070 C \u306b\u306f\u5b58\u5728\u3057\u306a\u3044 C++ \u306e\u6a5f\u80fd\u3092 C++ \u3060\u3051\u3067\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001 \u30e1\u30e2\u30ea\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u540c\u4e00\u306b\u306a\u308b\u3053\u3068\u3092\u62c5\u4fdd\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u305f\u3081\u57fa\u672c\u7684\u306b\u306f\u63a8\u5968\u3057\u307e\u305b\u3093\u3002</p> C++ \u3060\u3051\u3067\u540d\u524d\u7a7a\u9593\u3092\u6709\u52b9\u306b\u3059\u308b <p>\u540d\u524d\u7a7a\u9593\u306f\u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u306b\u5f71\u97ff\u3057\u307e\u3059\u304c\u3001\u30e1\u30e2\u30ea\u30ec\u30a4\u30a2\u30a6\u30c8\u306b\u306f\u5f71\u97ff\u3057\u307e\u305b\u3093\u3002 \u540d\u524d\u30de\u30f3\u30b0\u30ea\u30f3\u30b0\u304c\u554f\u984c\u306b\u306a\u3089\u306a\u3051\u308c\u3070 C++ \u3060\u3051\u3067\u540d\u524d\u7a7a\u9593\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>#ifdef __cplusplus\nnamespace sample {\n#endif  // __cplusplus\n\nstruct Sample {\nunsigned char c;\ndouble d;\n};\n\n#ifdef __cplusplus\n}\n#endif  // __cplusplus\n</code></pre> C++ \u3060\u3051\u3067\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6709\u52b9\u306b\u3059\u308b <p>\u4eee\u60f3\u95a2\u6570\u304c\u3042\u308b\u5834\u5408\u306f POD \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001 \u4eee\u60f3\u95a2\u6570\u3067\u306f\u306a\u3044\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u3042\u3063\u3066\u3082 POD \u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u4eee\u60f3\u95a2\u6570\u3067\u306f\u306a\u3044\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u6709\u7121\u306f\u30e1\u30e2\u30ea\u30ec\u30a4\u30a2\u30a6\u30c8\u306b\u5f71\u97ff\u3057\u306a\u3044\u305f\u3081\u3001 C++ \u3060\u3051\u3067\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6709\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>struct Sample {\nunsigned char c;\ndouble d;\n\n#ifdef __cplusplus\ndouble GetD() const {\nreturn d;\n}\n#endif  // __cplusplus\n};\n</code></pre> <p>\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u8ffd\u52a0\u3059\u308b\u3060\u3051\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u3092 C++ \u3060\u3051\u3067\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002</p> <pre><code>struct Sample {\nunsigned char c;\ndouble d;\n};\n\n#ifdef __cplusplus\nclass SampleCpp : public Sample {\npublic:\ndouble GetD() const {\nreturn d;\n}\n};\n#endif  // __cplusplus\n</code></pre>"},{"location":"ch12-04-byte-array-manipulations/","title":"\u30d0\u30a4\u30c8\u5217\u64cd\u4f5c","text":"<p>POD \u3067\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u95a2\u6570\u3067\u30c7\u30fc\u30bf\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u4f7f\u7528\u3059\u308b\u306b\u306f <code>&lt;cstring&gt;</code> \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <ul> <li><code>std::memset</code></li> <li><code>std::memcpy</code></li> <li><code>std::memcmp</code></li> </ul> <p>\u3053\u308c\u3089\u306f C \u306e\u95a2\u6570\u3067\u3042\u308b\u305f\u3081\u3001 \u4efb\u610f\u306e\u578b\u3092\u6271\u3046\u305f\u3081\u306b void \u30dd\u30a4\u30f3\u30bf \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> <pre><code>static_assert(CHAR_BIT == 8, \"Not support 1byte != 8bits\");\n\nstruct FundamentalTypes {\nint16_t i;\ndouble d;\n};\n</code></pre>"},{"location":"ch12-04-byte-array-manipulations/#stdmemset","title":"std::memset","text":"<p>\u30d0\u30a4\u30c8\u5217\u306b\u6307\u5b9a\u3057\u305f\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002 \u4ed5\u69d8\u306f std::memset - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>FundamentalTypes f;\n\n// \u3059\u3079\u3066\u306e\u30d3\u30c3\u30c8\u30920\u306b\u3059\u308b\nstd::memset(&amp;f, 0, sizeof(f));\nstd::cout &lt;&lt; f.i &lt;&lt; std::endl;  // 0\nstd::cout &lt;&lt; f.d &lt;&lt; std::endl;  // 0\n\n// \u3059\u3079\u3066\u306e\u30d3\u30c3\u30c8\u30921\u306b\u3059\u308b\nstd::memset(&amp;f, 0xff, sizeof(f));\nstd::cout &lt;&lt; f.i &lt;&lt; std::endl;  // -1   (2\u306e\u88dc\u6570\u8868\u73fe\u306e\u5834\u5408)\nstd::cout &lt;&lt; f.d &lt;&lt; std::endl;  // -nan (IEEE 754 \u306e\u5834\u5408)\n</code></pre>"},{"location":"ch12-04-byte-array-manipulations/#stdmemcpy","title":"std::memcpy","text":"<p>\u30d0\u30a4\u30c8\u5217\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002 \u4ed5\u69d8\u306f memcpy, memcpy_s - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>FundamentalTypes f1;\nf1.i = -2;\nf1.d = 2.71;\n\nFundamentalTypes f2;\n\n// f1 \u304b\u3089 f2 \u3078\u30d0\u30a4\u30c8\u5217\u3092\u30b3\u30d4\u30fc\nstd::memcpy(&amp;f2, &amp;f1, sizeof(FundamentalTypes));\n\nstd::cout &lt;&lt; f2.i &lt;&lt; std::endl;  // -2\nstd::cout &lt;&lt; f2.d &lt;&lt; std::endl;  // 2.71\n</code></pre>"},{"location":"ch12-04-byte-array-manipulations/#stdmemcmp","title":"std::memcmp","text":"<p>\u30d0\u30a4\u30c8\u5217\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002 \u4ed5\u69d8\u306f std::memcmp - cppreference.com \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>FundamentalTypes f1;\nf1.i = -2;\nf1.d = 2.71;\n\nFundamentalTypes f2;\nf2.i = 3 - 5;\nf2.d = 2.71;\n\nFundamentalTypes f3;\nstd::memset(&amp;f3, 0, sizeof(f3));\n\nif (std::memcmp(&amp;f1, &amp;f2, sizeof(FundamentalTypes)) == 0) {\nstd::cout &lt;&lt; \"f1 and f2 are same\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"f1 and f2 are different\" &lt;&lt; std::endl;\n}\n\nif (std::memcmp(&amp;f1, &amp;f3, sizeof(FundamentalTypes)) == 0) {\nstd::cout &lt;&lt; \"f1 and f3 are same\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"f1 and f3 are different\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <pre><code>f1 and f2 are same\nf1 and f3 are different\n</code></pre>"},{"location":"ch12-05-bitfields/","title":"\u30d3\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9","text":"<p>\u69cb\u9020\u4f53\u306e\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u306f\u30d0\u30a4\u30c8\u5358\u4f4d\u3067\u30b5\u30a4\u30ba\u304c\u78ba\u4fdd\u3055\u308c\u307e\u3059\u304c\u3001\u30d3\u30c3\u30c8\u5358\u4f4d\u3067\u3082\u30b5\u30a4\u30ba\u3092\u78ba\u4fdd\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u305d\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0\u3092\u30d3\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3044\u3044\u307e\u3059\u3002</p> <pre><code>struct Bits {\nuint8_t a : 1;     //  1 \u30d3\u30c3\u30c8\nuint8_t b : 3;     //  3 \u30d3\u30c3\u30c8\nuint8_t c : 4;     //  4 \u30d3\u30c3\u30c8\n};\n</code></pre> <p>\u30c7\u30fc\u30bf\u30e1\u30f3\u30d0 <code>a, b, c</code> \u306f <code>uint8_t</code> \u578b\u306e\u9818\u57df\u3092\u305d\u308c\u305e\u308c\u6307\u5b9a\u3057\u305f\u30d3\u30c3\u30c8\u6570\u3067\u5206\u5272\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002 \u69cb\u9020\u4f53\u306e\u30b5\u30a4\u30ba\u3092\u306a\u308b\u3079\u304f\u5c0f\u3055\u304f\u6291\u3048\u305f\u3044\u3068\u304d\u306a\u3069\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070 1 \u30d3\u30c3\u30c8\u306e\u30d3\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u7528\u610f\u3059\u308c\u3070 <code>0, 1</code> \u306e 2 \u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u305f\u3081\u3001 <code>bool</code> \u306e\u4ee3\u308f\u308a\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>struct Bool {\nuint8_t flag : 1;\n};\n</code></pre> <p>\u305f\u3060\u3057\u4e0a\u8a18\u306e\u3088\u3046\u306a 1 \u30d3\u30c3\u30c8\u306e\u30d3\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3082 <code>Bool</code> \u306e\u30b5\u30a4\u30ba\u306f <code>uint8_t</code> \u5206\u306e\u30b5\u30a4\u30ba\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002 \u3059\u306a\u308f\u3061 <code>uint8_t</code> \u306e\u6b8b\u308a 7 \u30d3\u30c3\u30c8\u306f\u672a\u4f7f\u7528\u306a\u9818\u57df\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"debug-build/","title":"\u30c7\u30d0\u30c3\u30b0\u30d3\u30eb\u30c9","text":"<p>\u901a\u5e38\u306e\u30d3\u30eb\u30c9\u306f\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u3068\u547c\u3070\u308c\u3001 \u5b9f\u884c\u6642\u306b\u4e0d\u8981\u306a\u60c5\u5831\u3092\u7701\u3044\u3066\u6700\u9069\u5316\u3092\u884c\u3046\u3053\u3068\u3067\u9ad8\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u30b3\u30fc\u30c9\u306b\u304a\u3051\u308b\u30d5\u30a1\u30a4\u30eb\u3084\u884c\u756a\u53f7\u3092\u306f\u3058\u3081\u3001 \u30c7\u30d0\u30c3\u30b0\u3067\u5fc5\u8981\u306a\u60c5\u5831\u306e\u591a\u304f\u306f\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u3067\u306f\u7701\u304b\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001 \u30c7\u30d0\u30c3\u30b0\u3092\u884c\u3046\u305f\u3081\u306b\u306f\u30c7\u30d0\u30c3\u30b0\u30d3\u30eb\u30c9\u3067\u30d3\u30eb\u30c9\u3057\u305f\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <p>\u30c7\u30d0\u30c3\u30b0\u30d3\u30eb\u30c9\u3092\u884c\u3046\u305f\u3081\u306b\u306f <code>-g</code> \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code>$ g++ -std=c++11 -g main.cc\n</code></pre>"},{"location":"debug-debugger/","title":"\u30c7\u30d0\u30c3\u30ac","text":"<p>\u30b3\u30f3\u30d1\u30a4\u30e9\u3054\u3068\u306b\u5bfe\u5fdc\u3059\u308b\u30c7\u30d0\u30c3\u30ac\u304c\u5b58\u5728\u3057\u307e\u3059\u3002</p> \u30b3\u30f3\u30d1\u30a4\u30e9 \u30c7\u30d0\u30c3\u30ac GCC GDB Clang LLDB Visual C++ CDB <p>\u672c\u66f8\u3067\u306f GCC \u3092\u6271\u3046\u305f\u3081\u30c7\u30d0\u30c3\u30ac\u306f GDB \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"debug-debugger/#gdb","title":"GDB \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p> <pre><code>$ pacman -S gdb\n</code></pre>"},{"location":"debug-gdb/","title":"GDB \u306b\u3088\u308b CUI \u30c7\u30d0\u30c3\u30b0","text":""},{"location":"debug-gdb/#gdb","title":"GDB \u306e\u8d77\u52d5\u3068\u7d42\u4e86","text":""},{"location":"debug-gdb/#_1","title":"\u8d77\u52d5","text":"<p>\u30c7\u30d0\u30c3\u30b0\u30d3\u30eb\u30c9\u3055\u308c\u305f <code>a.exe</code> \u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u305f\u3081\u306b \u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066 GDB \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002</p> <pre><code>$ gdb a.exe\n</code></pre> <p>GDB \u306f\u8d77\u52d5\u6642\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u306e\u60c5\u5831\u3092\u51fa\u529b\u3057\u307e\u3059\u3002</p> <p><code>a.exe</code> \u306e\u8aad\u307f\u8fbc\u307f\u306b\u6210\u529f\u3059\u308b\u3068\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u306e\u60c5\u5831\u306e\u5f8c\u306b <code>Reading symbols from ./a.exe...done.</code> \u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</p> <p>\u30d7\u30ed\u30f3\u30d7\u30c8\u3068\u547c\u3070\u308c\u308b\u6587\u5b57\u5217 <code>(gdb)</code> \u304c\u51fa\u529b\u3055\u308c\u308b\u3068 GDB \u306e\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"debug-gdb/#_2","title":"\u7d42\u4e86","text":"<p><code>quit</code> \u3067 GDB \u3092\u7d42\u4e86\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) quit\n</code></pre> <p><code>quit</code> \u306f <code>q</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) q\n</code></pre>"},{"location":"debug-gdb/#_3","title":"\u30c7\u30d0\u30c3\u30b0\u958b\u59cb","text":"<p><code>run</code> \u3067\u30c7\u30d0\u30c3\u30b0\u5bfe\u8c61\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u59cb\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) run\n</code></pre> <p><code>run</code> \u306f <code>r</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) r\n</code></pre> <p>\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u72b6\u614b\u3060\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\u307e\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"debug-gdb/#_4","title":"\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8","text":"<p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"sum.h\"\n\nint main() {\nstd::cout &lt;&lt; Sum(1, 2) &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> sum.h <pre><code>#ifndef SUM_H_\n#define SUM_H_\n\nint Sum(int a, int b);\n\n#endif  // SUM_H_\n</code></pre> sum.cc <pre><code>#include \"sum.h\"\n\nint Sum(int a, int b) {\nreturn a + b;\n}\n</code></pre>"},{"location":"debug-gdb/#_5","title":"\u8ffd\u52a0","text":"<p><code>break \u30d5\u30a1\u30a4\u30eb:\u884c\u756a\u53f7</code> \u307e\u305f\u306f <code>break \u95a2\u6570\u540d</code> \u3067\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:6\nBreakpoint 1 at 0x10040108d: file main.cc, line 6.\n(gdb) break Sum\nBreakpoint 2 at 0x10040113a: file sum.cc, line 4.\n</code></pre> <p><code>break</code> \u306f <code>b</code> \u3068\u7701\u7565\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) b main.cc:6\nBreakpoint 1 at 0x10040108d: file main.cc, line 6.\n(gdb) b Sum\nBreakpoint 2 at 0x10040113a: file sum.cc, line 4.\n</code></pre>"},{"location":"debug-gdb/#_6","title":"\u4e00\u89a7\u306e\u78ba\u8a8d","text":"<p><code>info breakpoints</code> \u3067\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) info breakpoints\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000010040108d in main() at main.cc:6\n2       breakpoint     keep y   0x000000010040113a in Sum(int, int) at sum.cc:4\n</code></pre> <p><code>info</code> \u306f <code>i</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002 <code>breakpoints</code> \u306f <code>break</code> \u3084 <code>b</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) i b\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000010040108d in main() at main.cc:6\n2       breakpoint     keep y   0x000000010040113a in Sum(int, int) at sum.cc:4\n</code></pre>"},{"location":"debug-gdb/#_7","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u6642\u505c\u6b62","text":"<p>\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u305f\u72b6\u614b\u3067\u30c7\u30d0\u30c3\u30b0\u3092\u958b\u59cb\u3059\u308b\u3068\u3001 \u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u5230\u9054\u3057\u305f\u6642\u70b9\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) run\nStarting program: a.exe\n[New Thread 10676.0x3cf8]\n[New Thread 10676.0x1ab8]\n[New Thread 10676.0x17e4]\n[New Thread 10676.0x1494]\n[New Thread 10676.0x36a4]\n\nThread 1 \"a\" hit Breakpoint 1, main () at main.cc:6\n6           std::cout &lt;&lt; Sum(1, 2) &lt;&lt; std::endl;\n</code></pre>"},{"location":"debug-gdb/#_8","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u518d\u958b","text":"<p><code>continue</code> \u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u518d\u958b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u6b21\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u5230\u9054\u3059\u308b\u3068\u518d\u3073\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) continue\nContinuing.\n\nThread 1 \"a\" hit Breakpoint 2, Sum (a=1, b=2) at sum.cc:4\n4           return a + b;\n</code></pre>"},{"location":"debug-gdb/#_9","title":"\u524a\u9664","text":"<p><code>delete n</code> \u3067\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 <code>n</code> \u306b\u306f <code>info breakpoints</code> \u306e <code>Num</code> \u306e\u5024\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) info breakpoints\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000010040108d in main() at main.cc:6\n2       breakpoint     keep y   0x000000010040113a in Sum(int, int) at sum.cc:4\n(gdb) delete 1\n(gdb) info breakpoints\nNum     Type           Disp Enb Address            What\n2       breakpoint     keep y   0x000000010040113a in Sum(int, int) at sum.cc:4\n</code></pre> <p><code>delete</code> \u306f <code>d</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) i b\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000010040108d in main() at main.cc:6\n2       breakpoint     keep y   0x000000010040113a in Sum(int, int) at sum.cc:4\n(gdb) d 1\n(gdb) i b\nNum     Type           Disp Enb Address            What\n2       breakpoint     keep y   0x000000010040113a in Sum(int, int) at sum.cc:4\n</code></pre> <p><code>delete</code> \u3067\u5bfe\u8c61\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306b\u306f\u3059\u3079\u3066\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u524a\u9664\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) info breakpoints\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000010040108d in main() at main.cc:6\n2       breakpoint     keep y   0x000000010040113a in Sum(int, int) at sum.cc:4\n(gdb) delete\nDelete all breakpoints? (y or n) y\n(gdb) info breakpoints\nNo breakpoints or watchpoints.\n</code></pre>"},{"location":"debug-gdb/#_10","title":"\u8a55\u4fa1\u5024\u306e\u8868\u793a","text":"<p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"swap.h\"\n\n// \u6700\u5927\u516c\u7d04\u6570\nint GreatestCommonDivisor(int a, int b) {\nwhile (a != 0) {\nb = b % a;\nSwap(&amp;a, &amp;b);\n}\nreturn b;\n}\n\n// \u6700\u5c0f\u516c\u500d\u6570\nint LeastCommonMultiple(int a, int b) {\nint gcd = GreatestCommonDivisor(a, b);\nreturn a * b / gcd;\n}\n\nint main() {\nint a = 12;\nint b = 18;\nstd::cout &lt;&lt; a &lt;&lt; \" \u3068 \" &lt;&lt; b &lt;&lt; \" \u306e\u6700\u5c0f\u516c\u500d\u6570\u306f \"\n&lt;&lt; LeastCommonMultiple(a, b) &lt;&lt; \" \u3067\u3059\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre> swap.h <pre><code>#ifndef SWAP_H_\n#define SWAP_H_\n\n// 2\u3064\u306e\u5909\u6570\u306e\u5024\u3092\u5165\u308c\u66ff\u3048\u308b\nvoid Swap(int* a, int* b);\n\n#endif  // SWAP_H_\n</code></pre> swap.cc <pre><code>#include \"swap.h\"\n\nvoid Swap(int* a, int* b) {\nint tmp = *a;\n*a = *b;\n*b = tmp;\n}\n</code></pre>"},{"location":"debug-gdb/#_11","title":"\u5909\u6570\u306e\u5024\u3092\u78ba\u8a8d","text":"<p><code>print</code> \u3067\u5909\u6570\u306e\u5024\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:17\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, LeastCommonMultiple (a=12, b=18) at main.cc:17\n17          return a * b / gcd;\n(gdb) print a\n$1 = 12\n(gdb) print b\n$2 = 18\n(gdb) print gcd\n$3 = 6\n</code></pre> <p><code>print</code> \u306f <code>p</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) b main.cc:17\n(gdb) r\nThread 1 \"a\" hit Breakpoint 1, LeastCommonMultiple (a=12, b=18) at main.cc:17\n17          return a * b / gcd;\n(gdb) p a\n$1 = 12\n(gdb) p b\n$2 = 18\n(gdb) p gcd\n$3 = 6\n</code></pre>"},{"location":"debug-gdb/#_12","title":"\u78ba\u8a8d\u3057\u305f\u5024\u306e\u518d\u5229\u7528","text":"<p>\u5024\u3092\u78ba\u8a8d\u3059\u308b\u3068 <code>$n = \u5024</code> \u3068\u51fa\u529b\u3055\u308c\u3001 <code>$n</code> \u3067\u7d50\u679c\u3092\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:8\n(gdb) break main.cc:9\n(gdb) run\nStarting program: a.exe\n\nThread 1 \"a\" hit Breakpoint 1, GreatestCommonDivisor (a=12, b=18) at main.cc:8\n8               b = b % a;\n(gdb) print b\n$1 = 18\n(gdb) continue\nContinuing.\n\nThread 1 \"a\" hit Breakpoint 2, GreatestCommonDivisor (a=12, b=6) at main.cc:9\n9               Swap(&amp;a, &amp;b);\n(gdb) print b\n$2 = 6\n(gdb) print $1\n$3 = 18\n</code></pre>"},{"location":"debug-gdb/#_13","title":"\u4efb\u610f\u306e\u51e6\u7406\u3092\u5b9f\u884c","text":"<p><code>print</code> \u3067\u306f\u5909\u6570\u306e\u5024\u3092\u78ba\u8a8d\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001 \u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u884c\u3063\u3066\u305d\u306e\u623b\u308a\u5024\u3092\u78ba\u8a8d\u3057\u305f\u308a\u3001\u4efb\u610f\u306e\u6f14\u7b97\u3092\u884c\u3063\u305f\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:17\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, LeastCommonMultiple (a=12, b=18) at main.cc:17\n17          return a * b / gcd;\n(gdb) print gcd\n$1 = 6\n(gdb) print GreatestCommonDivisor(b, a)\n$2 = 6\n</code></pre> <p>\u5909\u6570\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u4ee3\u5165\u306a\u3069\u3082\u884c\u3048\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u526f\u4f5c\u7528\u306b\u6c17\u3092\u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:17\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, LeastCommonMultiple (a=12, b=18) at main.cc:17\n17          return a * b / gcd;\n(gdb) print gcd\n$1 = 6\n(gdb) print gcd = 0\n$2 = 0\n(gdb) print gcd\n$3 = 0\n</code></pre>"},{"location":"debug-gdb/#_14","title":"\u30dd\u30a4\u30f3\u30bf\u306b\u5bfe\u3059\u308b\u64cd\u4f5c","text":"<p>\u5909\u6570\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u5f97\u308b <code>&amp;</code> \u3084\u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e <code>*</code> \u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:9\n(gdb) break Swap\n(gdb) run\nStarting program: a.exe\n\nThread 1 \"a\" hit Breakpoint 1, GreatestCommonDivisor (a=12, b=6) at main.cc:9\n9               Swap(&amp;a, &amp;b);\n(gdb) print &amp;a\n$1 = (int *) 0xffffcb70\n(gdb) continue\nContinuing.\n\nThread 1 \"a\" hit Breakpoint 2, Swap (a=0xffffcb70, b=0xffffcb78) at swap.cc:4\n4           int tmp = *a;\n(gdb) print a\n$2 = (int *) 0xffffcb70\n(gdb) print *a\n$3 = 12\n</code></pre>"},{"location":"debug-gdb/#_15","title":"\u30b9\u30c6\u30c3\u30d7\u5b9f\u884c","text":"<p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\n#include \"circle.h\"\n\ndouble SquareOf(double v) {\nreturn v * v;\n}\n\ndouble SquareOfDistance(const Point&amp; p, const Point&amp; q) {\nreturn SquareOf(q.X() - p.X()) + SquareOf(q.Y() - p.Y());\n}\n\nbool Intersects(const Circle&amp; c1, const Circle&amp; c2) {\nauto c = SquareOfDistance(c1.Center(), c2.Center());\nauto r = SquareOf(c1.Radius() + c2.Radius());\nreturn c &lt; r;\n}\n\nint main() {\nCircle c1(Point(1, 2), 3);\nCircle c2(Point(5, 0), 2);\n\nif (Intersects(c1, c2)) {\nstd::cout &lt;&lt; \"2\u3064\u306e\u5186\u306f\u4ea4\u5dee\u3057\u307e\u3059\" &lt;&lt; std::endl;\n} else {\nstd::cout &lt;&lt; \"2\u3064\u306e\u5186\u306f\u4ea4\u5dee\u3057\u307e\u305b\u3093\" &lt;&lt; std::endl;\n}\nreturn 0;\n}\n</code></pre> circle.h <pre><code>#ifndef CIRCLE_H_\n#define CIRCLE_H_\n\n#include \"point.h\"\n\nclass Circle {\npublic:\nCircle(const Point&amp; center, double radius)\n: center_(center), radius_(radius) {}\n\nPoint Center() const {\nreturn center_;\n}\n\ndouble Radius() const {\nreturn radius_;\n}\n\nprivate:\nPoint center_;\ndouble radius_;\n};\n\n#endif  // CIRCLE_H_\n</code></pre> point.h <pre><code>#ifndef POINT_H_\n#define POINT_H_\n\nclass Point {\npublic:\nPoint(double x, double y) : x_(x), y_(y) {}\n\ndouble X() const {\nreturn x_;\n}\n\ndouble Y() const {\nreturn y_;\n}\n\nprivate:\ndouble x_;\ndouble y_;\n};\n\n#endif  // POINT_H_\n</code></pre>"},{"location":"debug-gdb/#_16","title":"\u30b9\u30c6\u30c3\u30d7\u30aa\u30fc\u30d0\u30fc","text":"<p><code>next</code> \u3067\u73fe\u5728\u306e\u884c\u304b\u3089\u6b21\u306b\u51e6\u7406\u304c\u3042\u308b\u884c\u307e\u3067\u9032\u3081\u307e\u3059\u3002</p> <pre><code>(gdb) break Intersects\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\n(gdb) next\n15          auto r = SquareOf(c1.Radius() + c2.Radius());\n</code></pre> <p><code>next</code> \u306f <code>n</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) b Intersects\n(gdb) r\nThread 1 \"a\" hit Breakpoint 1, Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\n(gdb) n\n15          auto r = SquareOf(c1.Radius() + c2.Radius());\n</code></pre>"},{"location":"debug-gdb/#_17","title":"\u30b9\u30c6\u30c3\u30d7\u30a4\u30f3","text":"<p><code>step</code> \u3067\u73fe\u5728\u306e\u51e6\u7406\u304b\u3089\u6b21\u306e\u51e6\u7406\u307e\u3067\u9032\u3081\u307e\u3059\u3002 \u73fe\u5728\u306e\u51e6\u7406\u304c\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u5834\u5408\u306b\u306f\u547c\u3073\u51fa\u3057\u305f\u95a2\u6570\u306e\u5185\u90e8\u3067\u505c\u6b62\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) break Intersects\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\n(gdb) step\nCircle::Center (this=0xffffcb90) at circle.h:12\n12              return center_;\n</code></pre> <p><code>step</code> \u306f <code>s</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) b Intersects\n(gdb) r\nThread 1 \"a\" hit Breakpoint 1, Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\n(gdb) s\nCircle::Center (this=0xffffcb90) at circle.h:12\n12              return center_;\n</code></pre>"},{"location":"debug-gdb/#_18","title":"\u30b9\u30c6\u30c3\u30d7\u30a2\u30a6\u30c8","text":"<p><code>finish</code> \u3067\u73fe\u5728\u306e\u95a2\u6570\u304c\u7d42\u4e86\u3057\u3066\u547c\u3073\u51fa\u3057\u5143\u306b\u623b\u308b\u307e\u3067\u9032\u3081\u307e\u3059\u3002</p> <pre><code>(gdb) break Intersects\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\n(gdb) finish\nRun till exit from #0  Intersects (c1=..., c2=...) at main.cc:14\n0x0000000100401233 in main () at main.cc:23\n23          if (Intersects(c1, c2)) {\nValue returned is $1 = true\n</code></pre> <p><code>finish</code> \u306f <code>fin</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) b Intersects\n(gdb) r\nThread 1 \"a\" hit Breakpoint 1, Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\n(gdb) fin\nRun till exit from #0  Intersects (c1=..., c2=...) at main.cc:14\n0x0000000100401233 in main () at main.cc:23\n23          if (Intersects(c1, c2)) {\nValue returned is $1 = true\n</code></pre> <p>\u5b9f\u5f15\u6570\u3067\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408</p> <pre><code>auto c = SquareOfDistance(c1.Center(), c2.Center());\n</code></pre> <p>\u306e\u3088\u3046\u306b\u5b9f\u5f15\u6570\u3068\u3057\u3066\u4ed6\u306e\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u306f\u3001 \u6b21\u306e\u3088\u3046\u306b <code>step</code> \u3068 <code>finish</code> \u3092\u4ea4\u4e92\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u5b9f\u5f15\u6570\u3092\u6c42\u3081\u308b\u5404\u51e6\u7406\u3068 \u5b9f\u5f15\u6570\u3092\u5b9a\u3081\u305f\u5f8c\u306b\u547c\u3073\u51fa\u3059\u95a2\u6570\u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) break Intersects\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\n(gdb) step\nCircle::Center (this=0xffffcb90) at circle.h:12\n12              return center_;\n(gdb) finish\nRun till exit from #0  Circle::Center (this=0xffffcb90) at circle.h:12\n0x0000000100401133 in Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\nValue returned is $1 = {x_ = 5, y_ = 0}\n(gdb) step\nCircle::Center (this=0xffffcbb0) at circle.h:12\n12              return center_;\n(gdb) finish\nRun till exit from #0  Circle::Center (this=0xffffcbb0) at circle.h:12\n0x0000000100401143 in Intersects (c1=..., c2=...) at main.cc:14\n14          auto c = SquareOfDistance(c1.Center(), c2.Center());\nValue returned is $2 = {x_ = 1, y_ = 2}\n(gdb) step\nSquareOfDistance (p=..., q=...) at main.cc:10\n10          return SquareOf(q.X() - p.X()) + SquareOf(q.Y() - p.Y());\n</code></pre>"},{"location":"debug-gdb/#_19","title":"\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0","text":"<p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\nint GreatestCommonDivisor(int a, int b) {\nif (a == 0) {\nreturn b;\n}\n\nreturn GreatestCommonDivisor(b % a, a);\n}\n\nint main() {\nint a = 12;\nint b = 18;\nstd::cout &lt;&lt; a &lt;&lt; \" \u3068 \" &lt;&lt; b &lt;&lt; \" \u306e\u6700\u5927\u516c\u7d04\u6570\u306f \"\n&lt;&lt; GreatestCommonDivisor(a, b) &lt;&lt; \" \u3067\u3059\" &lt;&lt; std::endl;\nreturn 0;\n}\n</code></pre>"},{"location":"debug-gdb/#_20","title":"\u8868\u793a","text":"<p><code>backtrace</code> \u3067\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u306e\u4e00\u89a7\u3092\u8868\u793a\u3057\u307e\u3059\u3002 \u73fe\u5728\u306e\u7b87\u6240\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:5\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, GreatestCommonDivisor (a=0, b=6) at main.cc:5\n5               return b;\n(gdb) backtrace\n#0  GreatestCommonDivisor (a=0, b=6) at main.cc:5\n#1  0x00000001004010ac in GreatestCommonDivisor (a=6, b=12) at main.cc:8\n#2  0x00000001004010ac in GreatestCommonDivisor (a=12, b=18) at main.cc:8\n#3  0x000000010040111f in main () at main.cc:15\n</code></pre> <p><code>backtrace</code> \u306f <code>bt</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) b main.cc:5\nBreakpoint 1 at 0x100401094: file main.cc, line 5.\n(gdb) r\nThread 1 \"a\" hit Breakpoint 1, GreatestCommonDivisor (a=0, b=6) at main.cc:5\n5               return b;\n(gdb) bt\n#0  GreatestCommonDivisor (a=0, b=6) at main.cc:5\n#1  0x00000001004010ac in GreatestCommonDivisor (a=6, b=12) at main.cc:8\n#2  0x00000001004010ac in GreatestCommonDivisor (a=12, b=18) at main.cc:8\n#3  0x000000010040111f in main () at main.cc:15\n</code></pre>"},{"location":"debug-gdb/#_21","title":"\u79fb\u52d5","text":"<p><code>up</code> \u3084 <code>down</code> \u3067 GDB \u304c\u53c2\u7167\u3059\u308b\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u3092\u4e0a\u4e0b\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002 GDB \u306e\u53c2\u7167\u7b87\u6240\u304c\u79fb\u52d5\u3059\u308b\u3060\u3051\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u7b87\u6240\u306f\u79fb\u52d5\u3057\u307e\u305b\u3093\u3002</p> <pre><code>(gdb) backtrace\n#0  GreatestCommonDivisor (a=0, b=6) at main.cc:5\n#1  0x00000001004010ac in GreatestCommonDivisor (a=6, b=12) at main.cc:8\n#2  0x00000001004010ac in GreatestCommonDivisor (a=12, b=18) at main.cc:8\n#3  0x000000010040111f in main () at main.cc:15\n(gdb) up\n#1  0x00000001004010ac in GreatestCommonDivisor (a=6, b=12) at main.cc:8\n8           return GreatestCommonDivisor(b % a, a);\n(gdb) down\n#0  GreatestCommonDivisor (a=0, b=6) at main.cc:5\n5               return b;\n</code></pre> <p><code>frame</code> \u3067 GDB \u304c\u53c2\u7167\u3057\u3066\u3044\u308b\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) frame\n#0  GreatestCommonDivisor (a=0, b=6) at main.cc:5\n5               return b;\n</code></pre> <p><code>frame n</code> \u3067 <code>#n</code> \u306e\u30d5\u30ec\u30fc\u30e0\u3078\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) frame\n#0  GreatestCommonDivisor (a=0, b=6) at main.cc:5\n5               return b;\n(gdb) frame 3\n#3  0x000000010040111f in main () at main.cc:15\n15                    &lt;&lt; GreatestCommonDivisor(a, b) &lt;&lt; \" \u3067\u3059\" &lt;&lt; std::endl;\n(gdb) frame\n#3  0x000000010040111f in main () at main.cc:15\n15                    &lt;&lt; GreatestCommonDivisor(a, b) &lt;&lt; \" \u3067\u3059\" &lt;&lt; std::endl;\n</code></pre> <p><code>frame</code> \u306f <code>f</code> \u3068\u7701\u7565\u3067\u304d\u307e\u3059\u3002</p> <pre><code>(gdb) bt\n#0  GreatestCommonDivisor (a=0, b=6) at main.cc:5\n#1  0x00000001004010ac in GreatestCommonDivisor (a=6, b=12) at main.cc:8\n#2  0x00000001004010ac in GreatestCommonDivisor (a=12, b=18) at main.cc:8\n#3  0x000000010040111f in main () at main.cc:15\n(gdb) f 3\n#3  0x000000010040111f in main () at main.cc:15\n15                    &lt;&lt; GreatestCommonDivisor(a, b) &lt;&lt; \" \u3067\u3059\" &lt;&lt; std::endl;\n</code></pre>"},{"location":"debug-gdb/#_22","title":"\u4fbf\u5229\u306a\u6a5f\u80fd","text":""},{"location":"debug-gdb/#set-pretty-print","title":"set pretty print","text":"<p>\u30af\u30e9\u30b9\u3084\u69cb\u9020\u4f53\u3092\u8868\u793a\u3059\u308b\u969b\u306b\u898b\u3084\u3059\u304f\u6574\u5f62\u3059\u308b\u304b\u3069\u3046\u304b\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <p><code>set print pretty on</code> \u3067\u6709\u52b9\u3001 <code>set print pretty off</code> \u3067\u7121\u52b9\u306b\u3057\u307e\u3059\u3002</p> \u4f7f\u7528\u4f8b <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>struct Point {\ndouble x;\ndouble y;\n\nPoint(double x, double y) : x(x), y(y) {}\n};\n\nstruct Triangle {\nPoint a;\nPoint b;\nPoint c;\n\nTriangle(const Point&amp; a, const Point&amp; b, const Point&amp; c)\n: a(a), b(b), c(c) {}\n};\n\nint main() {\nTriangle t(Point(1, 1), Point(2, 0), Point(3, 2));\nreturn 0;\n}\n</code></pre> <p><code>print</code> \u3067 <code>t</code> \u306e\u5024\u3092\u78ba\u8a8d\u3059\u308b\u969b\u306b\u6574\u5f62\u306e\u6709\u7121\u3067\u6b21\u306e\u3088\u3046\u306b\u51fa\u529b\u304c\u5909\u5316\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:19\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, main () at main.cc:19\n19          return 0;\n(gdb) set print pretty on\n(gdb) print t\n$1 = {\n  a = {\n    x = 1,\n    y = 1\n  },\n  b = {\n    x = 2,\n    y = 0\n  },\n  c = {\n    x = 3,\n    y = 2\n  }\n}\n(gdb) set print pretty off\n(gdb) print t\n$2 = {a = {x = 1, y = 1}, b = {x = 2, y = 0}, c = {x = 3, y = 2}}\n</code></pre>"},{"location":"debug-gdb/#set-pagination","title":"set pagination","text":"<p>\u51fa\u529b\u3059\u308b\u60c5\u5831\u304c\u753b\u9762\u5185\u306b\u53ce\u307e\u3089\u306a\u3044\u5834\u5408\u306b \u53ce\u307e\u308b\u91cf\u305a\u3064\u3067\u30da\u30fc\u30b8\u9001\u308a\u3092\u3059\u308b\u304b\u3069\u3046\u304b\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p> <p><code>set pagination on</code> \u3067\u6709\u52b9\u3001 <code>set pagination off</code> \u3067\u7121\u52b9\u306b\u3057\u307e\u3059\u3002</p> \u4f7f\u7528\u4f8b <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u8aac\u660e\u3057\u307e\u3059\u3002</p> main.cc <pre><code>#include &lt;iostream&gt;\n\nint Fibonacchi(int n) {\nif (n == 0) {\nreturn 0;\n}\nif (n == 1) {\nreturn 1;\n}\nreturn Fibonacchi(n - 1) + Fibonacchi(n - 2);\n}\n\nint main() {\nstd::cout &lt;&lt; Fibonacchi(100) &lt;&lt; std::endl;\n}\n</code></pre> <p>\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u306e\u4e00\u89a7\u304c\u753b\u9762\u5185\u306b\u53ce\u307e\u3089\u306a\u3044\u5834\u5408\u306b \u30da\u30fc\u30b8\u9001\u308a\u306e\u6709\u7121\u3067\u6b21\u306e\u3088\u3046\u306b\u51fa\u529b\u304c\u5909\u5316\u3057\u307e\u3059\u3002</p> <pre><code>(gdb) break main.cc:5\nBreakpoint 1 at 0x100401097: file main.cc, line 5.\n(gdb) run\nThread 1 \"a\" hit Breakpoint 1, Fibonacchi (n=0) at main.cc:5\n5               return 0;\n(gdb) set pagination on\n(gdb) backtrace\n#0  Fibonacchi (n=0) at main.cc:5\n#1  0x00000001004010c7 in Fibonacchi (n=2) at main.cc:10\n#2  0x00000001004010b8 in Fibonacchi (n=3) at main.cc:10\n#3  0x00000001004010b8 in Fibonacchi (n=4) at main.cc:10\n#4  0x00000001004010b8 in Fibonacchi (n=5) at main.cc:10\n#5  0x00000001004010b8 in Fibonacchi (n=6) at main.cc:10\n#6  0x00000001004010b8 in Fibonacchi (n=7) at main.cc:10\n#7  0x00000001004010b8 in Fibonacchi (n=8) at main.cc:10\n#8  0x00000001004010b8 in Fibonacchi (n=9) at main.cc:10\n#9  0x00000001004010b8 in Fibonacchi (n=10) at main.cc:10\n#10 0x00000001004010b8 in Fibonacchi (n=11) at main.cc:10\n#11 0x00000001004010b8 in Fibonacchi (n=12) at main.cc:10\n#12 0x00000001004010b8 in Fibonacchi (n=13) at main.cc:10\n#13 0x00000001004010b8 in Fibonacchi (n=14) at main.cc:10\n#14 0x00000001004010b8 in Fibonacchi (n=15) at main.cc:10\n#15 0x00000001004010b8 in Fibonacchi (n=16) at main.cc:10\n#16 0x00000001004010b8 in Fibonacchi (n=17) at main.cc:10\n#17 0x00000001004010b8 in Fibonacchi (n=18) at main.cc:10\n#18 0x00000001004010b8 in Fibonacchi (n=19) at main.cc:10\n#19 0x00000001004010b8 in Fibonacchi (n=20) at main.cc:10\n#20 0x00000001004010b8 in Fibonacchi (n=21) at main.cc:10\n#21 0x00000001004010b8 in Fibonacchi (n=22) at main.cc:10\n#22 0x00000001004010b8 in Fibonacchi (n=23) at main.cc:10\n--Type &lt;RET&gt; for more, q to quit, c to continue without paging--q\nQuit\n(gdb) set pagination off\n(gdb) backtrace\n#0  Fibonacchi (n=0) at main.cc:5\n#1  0x00000001004010c7 in Fibonacchi (n=2) at main.cc:10\n#2  0x00000001004010b8 in Fibonacchi (n=3) at main.cc:10\n#3  0x00000001004010b8 in Fibonacchi (n=4) at main.cc:10\n#4  0x00000001004010b8 in Fibonacchi (n=5) at main.cc:10\n#5  0x00000001004010b8 in Fibonacchi (n=6) at main.cc:10\n#6  0x00000001004010b8 in Fibonacchi (n=7) at main.cc:10\n#7  0x00000001004010b8 in Fibonacchi (n=8) at main.cc:10\n#8  0x00000001004010b8 in Fibonacchi (n=9) at main.cc:10\n#9  0x00000001004010b8 in Fibonacchi (n=10) at main.cc:10\n#10 0x00000001004010b8 in Fibonacchi (n=11) at main.cc:10\n#11 0x00000001004010b8 in Fibonacchi (n=12) at main.cc:10\n#12 0x00000001004010b8 in Fibonacchi (n=13) at main.cc:10\n#13 0x00000001004010b8 in Fibonacchi (n=14) at main.cc:10\n#14 0x00000001004010b8 in Fibonacchi (n=15) at main.cc:10\n#15 0x00000001004010b8 in Fibonacchi (n=16) at main.cc:10\n#16 0x00000001004010b8 in Fibonacchi (n=17) at main.cc:10\n#17 0x00000001004010b8 in Fibonacchi (n=18) at main.cc:10\n#18 0x00000001004010b8 in Fibonacchi (n=19) at main.cc:10\n#19 0x00000001004010b8 in Fibonacchi (n=20) at main.cc:10\n#20 0x00000001004010b8 in Fibonacchi (n=21) at main.cc:10\n#21 0x00000001004010b8 in Fibonacchi (n=22) at main.cc:10\n#22 0x00000001004010b8 in Fibonacchi (n=23) at main.cc:10\n#23 0x00000001004010b8 in Fibonacchi (n=24) at main.cc:10\n#24 0x00000001004010b8 in Fibonacchi (n=25) at main.cc:10\n#25 0x00000001004010e7 in main () at main.cc:14\n</code></pre>"},{"location":"debug-gdb/#_23","title":"\u53c2\u8003","text":"<ul> <li>GDB User Manual</li> </ul>"},{"location":"debug-vscode/","title":"Visual Studio Code \u306b\u3088\u308b GUI \u30c7\u30d0\u30c3\u30b0","text":"<p>Visual Studio Code \u304b\u3089 GDB \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067 GUI \u30c7\u30d0\u30c3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"debug-vscode/#launchjson","title":"launch.json \u306e\u8a2d\u5b9a","text":"<p>Visual Studio Code \u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u72b6\u614b\u3067 <code>Ctrl+Shift+P</code> \u3092\u62bc\u3059\u3068\u30b3\u30de\u30f3\u30c9\u30d1\u30ec\u30c3\u30c8\u304c\u958b\u304d\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u30d1\u30ec\u30c3\u30c8\u306b <code>Debug: Open launch.json</code> \u3068\u5165\u529b\u3057\u3066 <code>launch.json</code> \u3092\u958b\u304d\u307e\u3059\u3002</p> <p><code>launch.json</code> \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u306f <code>\u74b0\u5883\u306e\u9078\u629e</code> \u3068\u3044\u3046\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u51fa\u308b\u306e\u3067 <code>C++ (GDB/LLDB)</code> \u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u6b21\u306e\u3088\u3046\u306a\u5185\u5bb9\u306e <code>launch.json</code> \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002</p> <pre><code>{\n// IntelliSense \u3092\u4f7f\u7528\u3057\u3066\u5229\u7528\u53ef\u80fd\u306a\u5c5e\u6027\u3092\u5b66\u3079\u307e\u3059\u3002\n// \u65e2\u5b58\u306e\u5c5e\u6027\u306e\u8aac\u660e\u3092\u30db\u30d0\u30fc\u3057\u3066\u8868\u793a\u3057\u307e\u3059\u3002\n// \u8a73\u7d30\u60c5\u5831\u306f\u6b21\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044: https://go.microsoft.com/fwlink/?linkid=830387\n\"version\": \"0.2.0\",\n\"configurations\": [\n{\n\"name\": \"(gdb) Launch\",\n\"type\": \"cppdbg\",\n\"request\": \"launch\",\n\"program\": \"enter program name, for example ${workspaceFolder}/a.exe\",\n\"args\": [],\n\"stopAtEntry\": false,\n\"cwd\": \"${workspaceFolder}\",\n\"environment\": [],\n\"externalConsole\": true,\n\"MIMode\": \"gdb\",\n\"miDebuggerPath\": \"/path/to/gdb\",\n\"setupCommands\": [\n{\n\"description\": \"Enable pretty-printing for gdb\",\n\"text\": \"-enable-pretty-printing\",\n\"ignoreFailures\": true\n}\n]\n}\n]\n}\n</code></pre> <p>\u751f\u6210\u3055\u308c\u305f <code>launch.json</code> \u3092\u6b21\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002</p> <ul> <li>\u30c7\u30d0\u30c3\u30b0\u5bfe\u8c61\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30d1\u30b9\u3092\u8a2d\u5b9a\u3059\u308b<ul> <li><code>${workspaceFolder}</code> \u3067 Visual Studio Code \u3067\u958b\u3044\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002</li> </ul> </li> <li>gdb \u306e\u30d1\u30b9\u3092\u8a2d\u5b9a\u3059\u308b<ul> <li>msys2 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d1\u30b9\u914d\u4e0b\u306e <code>usr/bin/gdb.exe</code> \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</li> <li>msys2 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d1\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f <code>C:/msys64</code> \u3067\u3059\u3002</li> </ul> </li> <li>sourceFileMap \u3092\u8ffd\u52a0\u3059\u308b<ul> <li>GDB \u304b\u3089\u53d6\u5f97\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092 Windows \u306e\u30d1\u30b9\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3067\u3059\u3002</li> <li>Windows \u306e\u30c9\u30e9\u30a4\u30d6\u30ec\u30bf\u30fc <code>C:/</code> \u306f msys2 \u3067\u306f <code>/c/</code> \u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002</li> </ul> </li> </ul> <pre><code>{\n\"version\": \"0.2.0\",\n\"configurations\": [\n{\n\"name\": \"(gdb) Launch\",\n\"type\": \"cppdbg\",\n\"request\": \"launch\",\n\"program\": \"${workspaceFolder}/a.exe\",\n\"args\": [],\n\"stopAtEntry\": false,\n\"cwd\": \"${workspaceFolder}\",\n\"environment\": [],\n\"externalConsole\": true,\n\"MIMode\": \"gdb\",\n\"miDebuggerPath\": \"C:/msys64/usr/bin/gdb.exe\",\n\"setupCommands\": [\n{\n\"description\": \"Enable pretty-printing for gdb\",\n\"text\": \"-enable-pretty-printing\",\n\"ignoreFailures\": true\n}\n],\n\"sourceFileMap\": {\n\"/c/\": \"C:/\"\n}\n}\n]\n}\n</code></pre>"},{"location":"debug-vscode/#_1","title":"\u30c7\u30d0\u30c3\u30b0\u958b\u59cb","text":"<p>\u30b3\u30de\u30f3\u30c9\u30d1\u30ec\u30c3\u30c8\u306b <code>Debug: Start Debugging</code> \u3068\u5165\u529b\u3059\u308b\u3068 \u30c7\u30d0\u30c3\u30b0\u5bfe\u8c61\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u59cb\u3057\u307e\u3059\u3002</p> <p>Visual Studio Code \u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u72b6\u614b\u3067 <code>F5</code> \u3092\u62bc\u3059\u3053\u3068\u3067\u3082 \u30c7\u30d0\u30c3\u30b0\u5bfe\u8c61\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u59cb\u3067\u304d\u307e\u3059\u3002</p> <p>\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u72b6\u614b\u3060\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u7d42\u4e86\u307e\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"debug-vscode/#_2","title":"\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306e\u8ffd\u52a0\u3068\u524a\u9664","text":"<p>\u884c\u756a\u53f7\u306e\u5de6\u5074\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>\u3082\u3046\u4e00\u5ea6\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u524a\u9664\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"debug-vscode/#_3","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e00\u6642\u505c\u6b62","text":"<p>\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u305f\u72b6\u614b\u3067\u30c7\u30d0\u30c3\u30b0\u3092\u958b\u59cb\u3059\u308b\u3068\u3001 \u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u5230\u9054\u3057\u305f\u6642\u70b9\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"debug-vscode/#_4","title":"\u30c7\u30d0\u30c3\u30b0\u30c4\u30fc\u30eb\u30d0\u30fc","text":"<p>\u5de6\u304b\u3089\u9806\u306b\u4ee5\u4e0b\u306e\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u518d\u958b</li> <li>\u30b9\u30c6\u30c3\u30d7\u30aa\u30fc\u30d0\u30fc</li> <li>\u30b9\u30c6\u30c3\u30d7\u30a4\u30f3</li> <li>\u30b9\u30c6\u30c3\u30d7\u30a2\u30a6\u30c8</li> <li>\u518d\u8d77\u52d5</li> <li>\u30c7\u30d0\u30c3\u30b0\u7d42\u4e86</li> </ul>"},{"location":"debug-vscode/#_5","title":"\u5909\u6570\u306e\u5024","text":"<p>\u73fe\u5728\u306e\u5909\u6570\u306e\u5024\u306f\u81ea\u52d5\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <p></p>"},{"location":"debug-vscode/#_6","title":"\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0","text":"<p>\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u306e\u4e00\u89a7\u306f\u81ea\u52d5\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> <p></p> <p>\u5404\u30d5\u30ec\u30fc\u30e0\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u30c7\u30d0\u30c3\u30ac\u306e\u53c2\u7167\u7b87\u6240\u3092\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"debug-vscode/#_7","title":"\u53c2\u8003","text":"<ul> <li>Debugging in Visual Studio Code</li> </ul>"},{"location":"make-cmake/","title":"CMake","text":"<p>CMake \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u4f9d\u5b58\u3057\u306a\u3044\u30d3\u30eb\u30c9\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u3067\u3059\u3002</p> <p>\u5b9f\u969b\u306b\u306f CMake \u306b\u3088\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u4f9d\u5b58\u3059\u308b\u30d3\u30eb\u30c9\u624b\u9806\u3092\u751f\u6210\u3057\u3001 \u30d3\u30eb\u30c9\u306e\u5b9f\u884c\u306f\u305d\u306e\u624b\u9806\u3092\u5143\u306b\u4ed6\u306e\u30c4\u30fc\u30eb\u304c\u884c\u3044\u307e\u3059\u3002 \u305f\u3068\u3048\u3070 CMake \u306b\u3088\u3063\u3066 Makefile \u306e\u751f\u6210\u3068 Make \u306e\u5b9f\u884c\u304c\u884c\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"make-cmake/#_1","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p> <pre><code>$ pacman -S cmake\n</code></pre> <p>Make \u3082\u5fc5\u8981\u306a\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"make-cmake/#_2","title":"\u30d3\u30eb\u30c9\u5b9f\u884c","text":"<p><code>cmake</code> \u306f <code>CMakeLists.txt</code> \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002</p> <p><code>main.cc</code> \u3092\u30d3\u30eb\u30c9\u3057\u3066 <code>a.exe</code> \u3092\u751f\u6210\u3059\u308b\u5834\u5408\u306f <code>CMakeLists.txt</code> \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> <pre><code>cmake_minimum_required(VERSION 3.0)\nproject(sample)\nadd_executable(a main.cc)\n</code></pre> <p>\u3053\u306e <code>CMakeLists.txt</code> \u3042\u308b\u72b6\u614b\u3067\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 <code>a.exe</code> \u304c\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002</p> <pre><code>$ cmake .\n$ cmake --build .\n</code></pre>"},{"location":"make-cmake/#out-of-source","title":"out-of-source \u30d3\u30eb\u30c9","text":"<p>\u30d3\u30eb\u30c9\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306f \u4e0a\u8a18\u306e\u65b9\u6cd5\u3060\u3068 <code>CMakeLists.txt</code> \u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002</p> <p>\u4e00\u822c\u306b\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u306f\u30d3\u30eb\u30c9\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u3068\u3059\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002 <code>cmake</code> \u3067\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u30d3\u30eb\u30c9\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea <code>out</code> \u914d\u4e0b\u306b\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <pre><code>$ mkdir -p out\n$ cd out\n$ cmake ..\n$ cd ..\n$ cmake --build out\n</code></pre>"},{"location":"make-make/","title":"Make","text":"<p>Make \u306f1976\u5e74\u306b\u767b\u5834\u3057\u3066\u73fe\u5728\u3067\u3082\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30d3\u30eb\u30c9\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u3067\u3059\u3002</p>"},{"location":"make-make/#_1","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002</p> <pre><code>$ pacman -S make\n</code></pre>"},{"location":"make-make/#_2","title":"\u30d3\u30eb\u30c9\u5b9f\u884c","text":"<p><code>make</code> \u306f <code>Makefile</code> \u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002</p> <p><code>main.cc</code> \u3092\u30d3\u30eb\u30c9\u3057\u3066 <code>a.exe</code> \u3092\u751f\u6210\u3059\u308b\u5834\u5408\u306f\u3001 <code>Makefile</code> \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> <pre>a.exe: main.cc\n\tg++ -std=c++11 main.cc\n</pre> <p><code>g++</code> \u306e\u524d\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u306f\u30bf\u30d6\u6587\u5b57\u3067\u3059\u3002 \u30b9\u30da\u30fc\u30b9\u6587\u5b57\u3067\u306f\u4ee3\u7528\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u3053\u306e <code>Makefile</code> \u304c\u3042\u308b\u72b6\u614b\u3067\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 <code>a.exe</code> \u304c\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002</p> <pre><code>$ make a.exe\n</code></pre> <p><code>a.exe: main.cc</code> \u3068\u3044\u3046\u8a18\u8ff0\u306f <code>a.exe</code> \u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u306f <code>main.cc</code> \u304c\u5fc5\u8981\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002 <code>a.exe</code> \u306e\u3088\u3046\u306a\u751f\u6210\u3057\u305f\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u3053\u3068\u3092 <code>\u30bf\u30fc\u30b2\u30c3\u30c8</code> \u3068\u547c\u3073\u307e\u3059\u3002</p> <p><code>a.exe</code> \u3092\u751f\u6210\u3057\u305f\u5f8c\u306b\u518d\u5ea6\u5b9f\u884c\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</p> <pre><code>$ make a.exe\nmake: 'a.exe' \u306f\u66f4\u65b0\u6e08\u307f\u3067\u3059.\n</code></pre> <p><code>a.exe</code> \u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a <code>main.cc</code> \u3068 <code>a.exe</code> \u306e\u66f4\u65b0\u65e5\u6642\u3092\u78ba\u8a8d\u3057\u3066\u3001 <code>a.exe</code> \u3088\u308a <code>main.cc</code> \u306e\u65b9\u304c\u65b0\u3057\u3044\u5834\u5408\u306b\u306e\u307f\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3067\u30d3\u30eb\u30c9\u6642\u9593\u3092\u77ed\u7e2e\u3057\u3066\u304a\u308a\u3001 \u51e6\u7406\u304c\u4e0d\u8981\u3068\u5224\u65ad\u3055\u308c\u305f\u5834\u5408\u306b\u3053\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</p> <p><code>main.cc</code> \u3092\u66f4\u65b0\u3059\u308b\u3068 <code>a.exe</code> \u3088\u308a\u3082\u66f4\u65b0\u65e5\u6642\u304c\u65b0\u3057\u304f\u306a\u308b\u305f\u3081\u30d3\u30eb\u30c9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p> <p>2\u884c\u76ee\u3067\u306f\u5148\u982d\u306e\u6587\u5b57\u3092\u30bf\u30d6\u6587\u5b57\u306b\u3057\u3001 \u305d\u306e\u5f8c\u306b <code>a.exe</code> \u306e\u751f\u6210\u306e\u305f\u3081\u306b\u5b9f\u65bd\u3059\u308b\u30b3\u30de\u30f3\u30c9 <code>g++ -std=c++11 main.cc</code> \u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002 <code>make</code> \u306f\u884c\u982d\u304c\u30bf\u30d6\u6587\u5b57\u3067\u3042\u308b\u884c\u3092\u30b3\u30de\u30f3\u30c9\u884c\u3068\u3057\u3066\u6271\u3046\u4ed5\u69d8\u3067\u3001\u30b9\u30da\u30fc\u30b9\u6587\u5b57\u3067\u306f\u4ee3\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002</p> \u30d5\u30a1\u30a4\u30eb\u5358\u4f4d\u3067\u306e\u30b3\u30f3\u30d1\u30a4\u30eb <p>\u8907\u6570\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u6210\u308a\u7acb\u3064\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30d3\u30eb\u30c9\u306f \u4e00\u822c\u306b\u6b21\u306e\u3088\u3046\u306b\u6bb5\u968e\u3092\u5206\u3051\u3066\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p> <ol> <li>\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u7d50\u679c\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b</li> <li>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30f3\u30af\u3059\u308b</li> </ol> <p>\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u5909\u66f4\u306e\u3042\u3063\u305f\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u66f4\u65b0\u3057\u3001 \u30ea\u30f3\u30af\u3092\u518d\u5b9f\u884c\u3059\u308c\u3070\u30d3\u30eb\u30c9\u304c\u5b8c\u4e86\u3059\u308b\u305f\u3081\u4e0d\u8981\u306a\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u7701\u7565\u3057\u3066\u30d3\u30eb\u30c9\u6642\u9593\u3092\u77ed\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u306f\u6b21\u306e\u3088\u3046\u306a <code>Makefile</code> \u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> <p><pre>a.exe: main.o util.o\n\tg++ -std=c++11 main.o util.o\n\nmain.o: main.cc\n\tg++ -std=c++11 -c main.cc\n\nutil.o: util.cc\n\tg++ -std=c++11 -c util.cc</pre></p>"},{"location":"make-make/#_3","title":"\u30bf\u30b9\u30af\u5b9f\u884c","text":"<p><code>.PHONY</code> \u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u64ec\u4f3c\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u751f\u6210\u4ee5\u5916\u306e\u30bf\u30b9\u30af\u5b9f\u884c\u306e\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p> <pre>.PHONY: clean\n\nclean:\n\trm -f a.exe\n</pre> <p><code>.PHONY</code> \u306b\u3088\u308b\u6307\u5b9a\u3092\u884c\u308f\u306a\u3044\u5834\u5408\u3001 \u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u540d\u79f0\u304c\u540c\u4e00\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3068\u5b9f\u884c\u4e0d\u8981\u3068\u5224\u65ad\u3055\u308c\u3066\u5b9f\u884c\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"test-how-to-gtest/","title":"Google Test \u306e\u4f7f\u3044\u65b9","text":""},{"location":"test-how-to-gtest/#google-test_1","title":"Google Test \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<p>msys2 \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u8d77\u52d5\u3057\u3066\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u6253\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Make \u3068 CMake \u304c\u5fc5\u8981\u306a\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u5148\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd /tmp\n$ wget 'https://github.com/google/googletest/archive/release-1.8.1.tar.gz'\n$ tar zxvf release-1.8.1.tar.gz\n$ mkdir -p /usr/local/src\n$ mv googletest-release-1.8.1 /usr/local/src\n$ cd /usr/local/src/googletest-release-1.8.1\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n$ make install\n</code></pre>"},{"location":"test-how-to-gtest/#_1","title":"\u5b9f\u884c\u4f8b","text":"<p>\u4f8b\u3068\u3057\u3066\u3001 <code>sample.h (.cc)</code> \u306b\u5076\u6570\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570 <code>IsEven</code> \u3092\u4f5c\u6210\u3057\u3001\u3053\u306e\u95a2\u6570\u306e\u52d5\u4f5c\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> sample.h <pre><code>#ifndef SAMPLE_H_\n#define SAMPLE_H_\n\n/**\n* \u5165\u529b\u5024\u304c\u5076\u6570\u304b\u5224\u5b9a\u3059\u308b\u95a2\u6570\n*/\nbool IsEven(int x);\n\n#endif  // SAMPLE_H_\n</code></pre> sample.cc <pre><code>#include \"sample.h\"\n\nbool IsEven(int x) {\nreturn x % 2 == 0;\n}\n</code></pre> sample_test.cc <pre><code>#include &lt;gtest/gtest.h&gt;\n#include \"sample.h\"\nTEST(IsEvenTest, Negative) {\nEXPECT_FALSE(IsEven(-1));\nEXPECT_TRUE(IsEven(-2));\n}\n\nTEST(IsEvenTest, Zero) {\nEXPECT_TRUE(IsEven(0));\n}\n\nTEST(IsEvenTest, Positive) {\nEXPECT_FALSE(IsEven(1));\nEXPECT_TRUE(IsEven(2));\n}\n</code></pre> <p><code>sample_test.cc</code> \u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002 \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u306f\u3001Google Test \u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b <code>gtest/gtest.h</code> \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u306a\u308b <code>sample.h</code> \u3082\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002</p> <p>\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30b9\u30c8\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30b3\u30de\u30f3\u30c9\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u5272\u611b\u3057\u307e\u3059\u3002</p> <pre><code># \u30d3\u30eb\u30c9\n$ g++ -std=c++11 sample.cc sample_test.cc -o test -L/usr/local/lib -lgtest -lgtest_main\n# \u5b9f\u884c\n$ ./test.exe\n</code></pre> <pre><code># \u5b9f\u884c\u7d50\u679c\nRunning main() from /usr/local/src/googletest-release-1.8.1/googletest/src/gtest_main.cc\n[==========] Running 3 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 3 tests from IsEvenTest\n[ RUN      ] IsEvenTest.Negative\n[       OK ] IsEvenTest.Negative (0 ms)\n[ RUN      ] IsEvenTest.Zero\n[       OK ] IsEvenTest.Zero (0 ms)\n[ RUN      ] IsEvenTest.Positive\n[       OK ] IsEvenTest.Positive (0 ms)\n[----------] 3 tests from IsEvenTest (0 ms total)\n\n[----------] Global test environment tear-down\n[==========] 3 tests from 1 test case ran. (0 ms total)\n[  PASSED  ] 3 tests.\n</code></pre> <p>\u6210\u529f\u3057\u305f\u30c6\u30b9\u30c8\u306f <code>[ OK ]</code> \u3068\u51fa\u529b\u3055\u308c\u3001\u5931\u6557\u3057\u305f\u30c6\u30b9\u30c8\u306f <code>[ FAILED ]</code> \u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001\u6210\u529f\u3057\u3066\u901a\u904e\u3057\u305f\u30c6\u30b9\u30c8\u6570\u304c <code>[ PASSED ]</code> \u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"test-how-to-gtest/#_2","title":"\u521d\u6b69\u7684\u306a\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u65b9","text":""},{"location":"test-how-to-gtest/#_3","title":"\u30c6\u30b9\u30c8\u95a2\u6570","text":"<p>Google Test \u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b <code>TEST()</code> \u3092\u5229\u7528\u3057\u3066\u30c6\u30b9\u30c8\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 <code>TEST()</code> \u306e\u7b2c1\u5f15\u6570\u306b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u540d\u3001\u7b2c2\u5f15\u6570\u306b\u30c6\u30b9\u30c8\u540d\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> <pre><code>TEST(/* \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u540d(\u5927\u9805\u76ee)*/, /* \u30c6\u30b9\u30c8\u540d(\u5c0f\u9805\u76ee) */) {\n// \u30c6\u30b9\u30c8\u95a2\u6570\u5185\u306f\u3001\u901a\u5e38\u901a\u308a C++ \u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u53ef\u80fd\n}\n</code></pre> <p>\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u540d\u3068\u30c6\u30b9\u30c8\u540d\u306b\u306f <code>_</code> \u3092\u542b\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002</p>"},{"location":"test-how-to-gtest/#_4","title":"\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3","text":"<p>Google Test \u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001 \u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\u306e\u52d5\u4f5c\u3092\u691c\u8a3c\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <pre><code>// true/false\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\nEXPECT_TRUE(condition);  // condition \u304c true \u304b\nEXPECT_FALSE(condition);  // condition \u304c false \u304b\n\n// 2\u3064\u306e\u5024\u3092\u6bd4\u8f03\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\nEXPECT_EQ(expected, actual);  // expected == actual \u304b\nEXPECT_NE(expected, actual);  // expected != actual \u304b\nEXPECT_LT(expected, actual);  // expected &lt; actual \u304b\nEXPECT_LE(expected, actual);  // expected &lt;= actual \u304b\nEXPECT_GT(expected, actual);  // expected &gt; actual \u304b\nEXPECT_GE(expected, actual);  // expected &gt;= actual \u304b\n</code></pre> <p>\u3053\u308c\u3089\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001 \u671f\u5f85\u7d50\u679c (expected)\u3001 \u30c6\u30b9\u30c8\u5bfe\u8c61 (actual)\u306e\u9806\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002</p> <p><code>EXPECT_</code> \u3067\u59cb\u307e\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u4ed6\u306b\u3001 <code>ASSERT_</code> \u3067\u59cb\u307e\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002 <code>EXPECT_</code> \u306e\u5834\u5408\u306f\u3001\u30c6\u30b9\u30c8\u306b\u5931\u6557\u3057\u3066\u3082\u30c6\u30b9\u30c8\u95a2\u6570\u304c\u305d\u306e\u307e\u307e\u7d9a\u884c\u3055\u308c\u307e\u3059\u304c\u3001 <code>ASSERT_</code> \u306e\u5834\u5408\u306f\u3001\u30c6\u30b9\u30c8\u306b\u5931\u6557\u3059\u308b\u3068\u305d\u306e\u6642\u70b9\u3067\u30c6\u30b9\u30c8\u3092\u4e2d\u65ad\u3057\u3066\u30c6\u30b9\u30c8\u95a2\u6570\u3092\u629c\u3051\u307e\u3059\u3002</p> <p>\u8a66\u3057\u306b\u3001\u8aa4\u3063\u305f\u5b9f\u88c5\u304c\u306a\u3055\u308c\u305f\u95a2\u6570 <code>IsEven</code> \u3092\u5229\u7528\u3057\u3066\u3001\u30c6\u30b9\u30c8\u5931\u6557\u6642\u306e\u51fa\u529b\u3092\u78ba\u8a8d\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> sample.h <pre><code>#ifndef SAMPLE_H_\n#define SAMPLE_H_\n\n/**\n* \u5165\u529b\u5024\u304c\u5076\u6570\u304b\u5224\u5b9a\u3059\u308b\u95a2\u6570\n*/\nbool IsEven(int x);\n\n#endif  // SAMPLE_H_\n</code></pre> sample.cc <pre><code>#include \"sample.h\"\n\nbool IsEven(int x) {\nreturn x % 2 == 1; // \u8aa4\u308a\u3002 x \u304c\u5947\u6570\u306e\u3068\u304d\u306b true \u306b\u306a\u3063\u3066\u3057\u307e\u3046\u2026\n}\n</code></pre> sample_test.cpp <pre><code>#include &lt;iostream&gt;\n\n#include &lt;gtest/gtest.h&gt;\n\n#include \"sample.h\"\n\nTEST(IsEvenTest, AssertPositive) {\nASSERT_FALSE(IsEven(1));  // ASSERT\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b\u3068\u4e2d\u65ad\nstd::cout &lt;&lt; \"\u4e2d\u65ad\u306b\u3088\u308a\u3001\u3053\u306e\u6587\u5b57\u5217\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\" &lt;&lt; std::endl;\nASSERT_TRUE(IsEven(2));\n}\n\nTEST(IsEvenTest, ExpectPositive) {\nEXPECT_FALSE(IsEven(1));  // EXPECT\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3057\u3066\u3082\u7d9a\u884c\nstd::cout &lt;&lt; \"\u7d9a\u884c\u306e\u305f\u3081\u3001\u3053\u306e\u6587\u5b57\u5217\u306f\u51fa\u529b\u3055\u308c\u308b\" &lt;&lt; std::endl;\nEXPECT_TRUE(IsEven(2));\n}\n</code></pre> \u5b9f\u884c\u7d50\u679c <pre><code>Running main() from /usr/local/src/googletest-release-1.8.1/googletest/src/gtest_main.cc\n[==========] Running 2 tests from 1 test case.\n[----------] Global test environment set-up.\n[----------] 2 tests from IsEvenTest\n[ RUN      ] IsEvenTest.AssertPositive\nsample_test.cc:8: Failure\nValue of: IsEven(1)\nActual: true\nExpected: false\n[  FAILED  ] IsEvenTest.AssertPositive (1 ms)\n[ RUN      ] IsEvenTest.ExpectPositive\nsample_test.cc:14: Failure\nValue of: IsEven(1)\nActual: true\nExpected: false\n\u7d9a\u884c\u306e\u305f\u3081\u3001\u3053\u306e\u6587\u5b57\u5217\u306f\u51fa\u529b\u3055\u308c\u308b\nsample_test.cc:16: Failure\nValue of: IsEven(2)\nActual: false\nExpected: true\n[  FAILED  ] IsEvenTest.ExpectPositive (0 ms)\n[----------] 2 tests from IsEvenTest (1 ms total)\n\n[----------] Global test environment tear-down\n[==========] 2 tests from 1 test case ran. (1 ms total)\n[  PASSED  ] 0 tests.\n[  FAILED  ] 2 tests, listed below:\n[  FAILED  ] IsEvenTest.AssertPositive\n[  FAILED  ] IsEvenTest.ExpectPositive\n\n2 FAILED TESTS\n</code></pre> <p>\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u3001\u5931\u6557\u7b87\u6240\u3068\u5931\u6557\u7406\u7531\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"test-how-to-gtest/#_5","title":"\u53c2\u8003","text":"<ul> <li>Google Test \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u65e5\u672c\u8a9e\u8a33</li> <li>Google Mock \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u65e5\u672c\u8a9e\u8a33</li> <li>\u30b5\u30f3\u30d7\u30eb\u96c6 \u2014 google/googletest (GitHub)</li> </ul>"}]}